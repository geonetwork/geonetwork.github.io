{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"GeoNetwork","text":"<p>Welcome to GeoNetwork. this documentation is organized into specific guides targeting different audience.</p> User Guide <p>Operational user-guide describing the editing, review and management of records (requires-login).</p> Developer Guide <p>Development information on customizing GeoNetwork and taking part in the GeoNetwork project.</p>"},{"location":"developer/","title":"Developer Manual v2.10","text":"<p>Welcome to the GeoNetwork Developer Manual v2.10. The manual is for those who want to help with the development process, including source code, software releasing, and other administrative work.</p> <p>Other documents:</p> <ul> <li>GeoNetwork User Manual</li> <li>GeoNetwork Developer Manual (PDF)</li> </ul>"},{"location":"developer/development/","title":"Software development","text":""},{"location":"developer/development/#system-requirements","title":"System Requirements","text":"<p>GeoNetwork is a Java application that runs as a servlet so the Java Runtime Environment (JRE) must be installed in order to run it. You can get the JRE from http://www.oracle.com/technetwork/java/javase/downloads and you have to download the Java 6 Standard Edition (SE). GeoNetwork won't run with Java 1.4. It will run with:</p> <ul> <li>Java 5 - but few people should be using that now as it is unsupported.</li> <li>Java 6 - most testing has taken place under Java 6, so we recommend Java 6.</li> <li>OpenJDK 7 - note: problems have been reported with OpenJDK 6.</li> </ul> <p>Being written in Java, GeoNetwork can run on any platform that supports Java, so it can run on Windows, Linux and Mac OSX. For MacOSX, make sure you use version 10.4 (Tiger) or newer. Version 10.3 (Panther) has only Java 1.4 so it cannot run GeoNetwork.</p> <p>Next, you need a servlet container. GeoNetwork comes with an embedded container (Jetty) which is fast and well suited for most applications. If you need a stronger one, you can install Tomcat from the Apache Software Foundation (http://tomcat.apache.org). It provides load balancing, fault tolerance and other production features. If you work for an organisation, it is probable that you already use Tomcat. The tested version is 6.0.x but GeoNetwork should work with all other versions (&gt;= 5.5).</p> <p>Regarding storage, you need a Database Management System (DBMS) like Oracle, MySQL, Postgresql etc. GeoNetwork comes with an embedded DBMS (H2) which is used by default during installation. This DBMS can be used for small or desktop installations of no more than a few thousand metadata records with one or two users. If you have heavier demands then you should use a professional, stand alone DBMS.</p> <p>GeoNetwork does not require a powerful machine. Good performance can be obtained even with 1GB of RAM. The suggested amount is 2GB. For hard disk space, you have to consider the space required for the application itself (about 350 MB) and the space required for data, which can require 50 GB or more. A simple disk of 250 GB should be OK. You also need some space for the search index which is located in <code>GEONETWORK_DATA_DIR/index</code> (by default GEONETWORK_DATA_DIR is <code>INSTALL_DIR/web/geonetwork/WEB_INF/data</code>. However, even with a few thousand metadata records, the index is small so usually 500 MB of space is more than enough.</p> <p>The software is run in different ways depending on the servlet container you are using:</p> <ul> <li>Tomcat - GeoNetwork is available as a WAR file which you can put into the Tomcat webapps directory. Tomcat will deploy the WAR file when it is started. You can then use the Tomcat manager web application to stop/start GeoNetwork. You can also use the startup. and shutdown. scripts located in the Tomcat bin directory (.* means .sh or .bat depending on your OS) but if you have other web applications in the tomcat container, then they will also be affected.</li> <li>Jetty - If you use the provided container you can use the scripts in GeoNetwork's bin directory. The scripts are start-geonetwork. and stop-geonetwork. and you must be inside the bin directory to run them. You can use these scripts just after installation.</li> </ul>"},{"location":"developer/development/#tools","title":"Tools","text":"<p>The following tools are required to be installed to setup a development environment for GeoNetwork:</p> <ul> <li>Java - Developing with GeoNetwork requires Java Development Kit (JDK) 1.6 or greater (scroll down to find 1.6) OR the OpenJDK (version 7 or higher only) for Linux users.</li> <li>Maven - GeoNetwork uses Maven to manage the build process and the dependencies. Once is installed, you should have the mvn command in your path (on Windows systems, you have to open a shell to check).</li> <li>Git - GeoNetwork source code is stored and versioned in a Git repository on Github. Depending on your operating system a variety of git clients are avalaible. Check in http://git-scm.com/downloads/guis for some alternatives. Good documentation can be found on the git website: http://git-scm.com/documentation and on the Github website https://help.github.com/.</li> <li>Ant - GeoNetwork uses Ant to build the installer. Version 1.6.5 works but any other recent version should be OK. Once installed, you should have the ant command in your path (on Windows systems, you have to open a shell to check).</li> <li>Sphinx - To create the GeoNetwork documentation in a nice format Sphinx is used.</li> </ul>"},{"location":"developer/development/#check-out-source-code","title":"Check out source code","text":"<p>If you just want to quickly get the code the fastest way is to download the zip bundle: https://github.com/geonetwork/core-geonetwork/zipball/master</p> <p>However, it is recommended that if you want to contribute back to Geonetwork you create a Github account, fork the Geonetwork repository and work on your fork. This is a huge benefit because you can push your changes to your repository as much as you want and when a feature is complete you can make a 'Pull Request'. Pull requests are the recommended method of contributing back to Geonetwork because Github has code review tools and merges are much easier than trying to apply a patch attached to a ticket.</p> <p>The Geonetwork Repository is at: https://github.com/geonetwork/core-geonetwork.</p> <p>Follow the instructions on the Github website to get started (make accounts, how to fork etc...) http://help.github.com/</p> <p>Once you have the repository forked or cloned locally you can begin to work.</p> <p>A clone contains all branches so you can list the branches with:</p> <pre><code>$ git branch -a\n</code></pre> <p>Just look at last section (ignoring remotes/origin/). To checkout a branch just:</p> <pre><code>$ git checkout 2.8.x\n</code></pre> <p>Typically work is done on branches and merged back so when developing normally you will go change to the branch you want to work on, create a branch from there, work and then merge the changes back (or make a Pull Request on Github). There are many great guides (See the links above) but here is a quick sequence illustrating how to make a change and commit the change.</p> <pre><code>$ git checkout master \n   # master is the 'trunk' and main development branch\n   # the checkout command \"checks out\" the requested branch\n$ git checkout -b myfeature\n   # the -b requests that the branch be created\n   # ``git branch`` will list all the branches you have checked out locally at some point\n   # ``git branch -a`` will list all branches in repository (checked out or not)\n# work work work\n$ git status \n   # See what files have been modified or added\n$ git add &lt;new or modified files&gt;\n   # Add all files to be committed ``git add -u`` will add all modified (but not untracked)\n$ git commit\n   # Commit often.  it is VERY fast to commit\n   # NOTE: doing a commit is a local operation.  It does not push the change to Github\n# more work\n# another commit\n$ git push origin myfeature\n   # this pushed your new branch to Github now you are ready to make a Pull Request to get the new feature added to Geonetwork\n</code></pre>"},{"location":"developer/development/#build-geonetwork","title":"Build GeoNetwork","text":"<p>Once you checked out the code from Github repository, go inside the GeoNetwork's root folder and execute the maven build command:</p> <pre><code>$ mvn clean install\n</code></pre> <p>If the build is succesful you'll get an output like:</p> <pre><code>[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary:\n[INFO] ------------------------------------------------------------------------\n[INFO] GeoNetwork opensource ................................. SUCCESS [1.825s]\n[INFO] Caching xslt module ................................... SUCCESS [1.579s]\n[INFO] Jeeves modules ........................................ SUCCESS [1.140s]\n[INFO] Oaipmh modules ........................................ SUCCESS [0.477s]\n[INFO] ArcSDE module (dummy-api) ............................. SUCCESS [0.503s]\n[INFO] GeoNetwork Web module ................................. SUCCESS [31.758s]\n[INFO] GeoServer module ...................................... SUCCESS [16.510s]\n[INFO] Gast module ........................................... SUCCESS [24.961s]\n[INFO] ------------------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESSFUL \n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 1 minute 19 seconds\n[INFO] Finished at: Tue Aug 03 16:49:15 CEST 2010\n[INFO] Final Memory: 79M/123M\n[INFO] ------------------------------------------------------------------------\n</code></pre> <p>and your local maven repository should contain the GeoNetwork artifacts created (<code>$HOME/.m2/repository/org/geonetwork-opensource</code>).</p> <p>For instance, you might like to use following options : :</p> <pre><code>-- Skip test\n$ mvn install -Dmaven.test.skip=true\n\n-- Offline use\n$ mvn install -o\n</code></pre> <p>Please refer to the maven documentation for any other options, Maven: The Complete Reference</p>"},{"location":"developer/development/#run-embedded-jetty-server","title":"Run embedded jetty server","text":"<p>Maven comes with built-in support for Jetty via a plug-in.</p> <p>To run GeoNetwork with embedded jetty server you have to change directory to the root of the web module, and then execute the following maven command:</p> <pre><code>$ mvn jetty:run\n</code></pre> <p>After a moment, GeoNetwork should be accessible at: http://localhost:8080/geonetwork</p>"},{"location":"developer/development/#source-code-documentation","title":"Source code documentation","text":"<p>The GeoNetwork Java source code is based on Javadoc. Javadoc is a tool for generating API documentation in HTML format from doc comments in source code.</p> <p>To see documentation generated by the Javadoc tool, go to:</p> <ul> <li>GeoNetwork opensource Javadoc</li> </ul>"},{"location":"developer/development/#user-developer-and-widget-api-documentation","title":"User, developer and widget API documentation","text":"<p>Note</p> <p>Building the GeoNetwork documentation requires the following be installed:</p> <ul> <li>Sphinx, version 0.6 or greater (sphinx-doc on ubuntu/debian)</li> <li>TeX Live (texlive-full on ubuntu/debian)</li> <li> <p>make utility</p> <p>:</p> <p>apt-get install texlive-full easy_install Sphinx easy_install JSTools</p> </li> </ul> <p>In order to build the documentation:</p> <pre><code>mvn clean install -Pwith-doc\n</code></pre>"},{"location":"developer/development/#creating-the-installer","title":"Creating the installer","text":"<p>To run the build script that creates the installer you need the Ant tool. You can generate an installer by running the ant command inside the installer directory:</p> <pre><code>$ ant\n\nBuildfile: build.xml\nsetProperties:\n...\nBUILD SUCCESSFUL\nTotal time: 31 seconds\n</code></pre> <p>Both platform independent and Windows specific installers are generated by default.</p> <p>Make sure you update version number and other relevant properties in the <code>installer/build.xml</code> file</p> <p>You can also create an installer that includes a Java Runtime Environment (JRE) for Windows. This will allow GeoNetwork to run on a compatible, embedded JRE and thus avoid error messages caused by JRE incompatibilities on the PC.</p> <p>Creating an installer with an embedded JRE requires you to first download and unzip the JRE in a folder jre1.5.0_12 at the project root level. Refer to the installer-config-win-jre.xml file for exact configuration.</p>"},{"location":"developer/development/#running-tests","title":"Running tests","text":"<p>Build the application and run the integration tests in <code>web-itests</code></p> <pre><code>$ mvn clean install -Pitests\n</code></pre>"},{"location":"developer/development/#packaging-geonetwork-using-maven","title":"Packaging GeoNetwork using Maven","text":"<p>Using Maven, you have the ability to package GeoNetwork in two different ways :</p> <ul> <li>WAR files (geonetwork.war, geoserver.war)</li> <li>Binary ZIP package (with Jetty embedded)</li> </ul> <p>The Assembly Plugin is used to create the packages using :</p> <pre><code>$ mvn package assembly:assembly\n</code></pre> <p>The Assembly Plugin configuration is in the release module (See bin.xml and zip-war.xml).</p>"},{"location":"developer/development/#eclipse-setup","title":"Eclipse setup","text":"<p>The easiest way to develop geoNetwork within eclipse is with the m2e plugin, which comes by default on many eclipse installations.</p>"},{"location":"developer/development/#import-source-code","title":"Import source code","text":"<p>In order to import the source code, follow instructions below :</p> <ul> <li>Press File&gt; Import Menu item</li> <li>In new dialog Select Maven&gt; Existing Maven Projects</li> <li>Press Next</li> </ul> <p></p> <ul> <li> <p>In Select root directory field enter where your code is:</p> </li> <li> <p>example: C:devgeonetworktrunk</p> </li> <li> <p>Select All projects and Press Finish button. If there appears another window, just continue without changing any option.</p> </li> </ul> <p>It will take some minutes while the m2e plugin downloads all the maven dependencies.</p>"},{"location":"developer/development/#debugging-into-eclipse","title":"Debugging into eclipse","text":"<ul> <li>JRebel Plugin :</li> </ul> <p>Using the JRebel plugin is very useful for debugging on eclipse.</p> <p>An example of the configuration file for JRebel may be the following:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;application xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.zeroturnaround.com\" xsi:schemaLocation=\"http://www.zeroturnaround.com http://www.zeroturnaround.com/alderaan/rebel-2_0.xsd\"&gt;\n\n     &lt;classpath&gt;\n       &lt;dir name=\"------/web/target/classes\"/&gt;\n   &lt;/classpath&gt;\n\n   &lt;web&gt;\n       &lt;link target=\"/\"&gt;\n           &lt;dir name=\"--------/web/src/main/webapp\"&gt;\n           &lt;/dir&gt;\n       &lt;/link&gt;\n        &lt;link target=\"/\"&gt;\n            &lt;dir name=\"------/web-client/src/main/resources\"&gt;\n            &lt;/dir&gt;\n        &lt;/link&gt;\n        &lt;link target=\"/\"&gt;\n            &lt;dir name=\"-------/web/target/webapp\"&gt;\n            &lt;/dir&gt;\n        &lt;/link&gt;\n        &lt;link target=\"/\"&gt;\n            &lt;dir name=\"--------/web/target/geonetwork\"&gt;\n            &lt;/dir&gt;\n        &lt;/link&gt;\n   &lt;/web&gt;\n\n&lt;/application&gt;\n</code></pre> <ul> <li>Tomcat Server :</li> </ul> <p>Create a new Tomcat Server (6) on eclipse and add the geonetwork-main project as a web project.</p> <ul> <li> <p>Remote debuging :</p> </li> <li> <p>How do I configure Tomcat to support remote debugging?</p> </li> <li>How do I remotely debug Tomcat using Eclipse?</li> </ul>"},{"location":"developer/development/#code-quality-tools-in-eclipse","title":"Code Quality Tools in Eclipse","text":"<p>In order to see the same code quality warnings in eclipse as maven will detect, Find Bugs and Checkstyle need to be installed in your eclipse install and configured as follows:</p> <pre><code>- Start Eclipse\n- Go to **Help &gt; Eclipse Marketplace**\n - Install **findbugs**\n  - Don't Restart\n - Install **checkstyle**\n  - Now Restart\n- Open preferences **Window &gt; Preferences**\n -  Select *Java &gt; Code Style &gt; Code Templates*\n  -  Select both Comments and Code elements\n  -  Click **Import** and import **code_quality/codetemplates.xml**\n -  Select **Java &gt; Code Style &gt; Formatter**\n  -  Click **Import** and import **code_quality/formatter.xml**\n -  Select **Java &gt; Code Style &gt; Clean Up**\n  -  Click **Import** and import **code_quality/cleanup.xml**\n -  Select **Checkstyle**\n  - Click **New**\n  - Select **External Configuration**\n  - Enter any name (IE Geonetwork)\n  - For **location** choose **code_quality/checkstyle_checks.xml**\n  - Press *OK*\n  - Select New configuration \n  - Press *Set as Default*\n - Select **Java &gt; FindBugs**\n  - Set **analysis effort** to **Maximum**\n  - Set **Minimum rank to report** to **2**\n  - Set **Minimum confidence to report** to **Medium**\n  - Check(enable) all bug categories\n  - Set all **Mark bugs with ... rank as** to **Warning**\n  - Change to _Filter files_ tab\n   - Add **code_quality/findbugs-excludes.xml** file to the **Exclude filter files**\n - Close Prefences\n - Right click on project in **Projects View** select **Checkstyle &gt; Activate Checkstyle**\n - Rebuild full project ( **Project &gt; Clean...** )\n  - Checkstyle violations will show up as warnings\n - Right click on project in **Projects View** select **Find Bugs &gt; Find Bugs**\n  - FindBugs violations will show up as warnings\n</code></pre>"},{"location":"developer/development/#code-quality-tools-and-maven","title":"Code Quality Tools and Maven","text":"<p>During the build process FindBugs and Checkstyle are ran. If a violation is found then the build will fail. Usually the easiest way of resolving violations are to use eclipse and run check style or find bugs on the class or project with the failure. Usually a detailed report will be provided in eclipse along with suggested fixes. If the violation is determined to be an intentional violation the code_quality/findbugs-excludes.xml or code_quality/checkstyle_suppressions.xml should be updated to suppress the reporting of the violation. (See Find Bugs and Checkstyle sections for more details.)</p> <p>Since the FindBugs and Checkstyle processes can be quite time consuming adding -DskipTests to the maven commandline will skip those processes as well as tests. For example:</p> <p>mvn install -DskipTests</p> <p>Or if you want to run the tests but skip static analysis:</p> <p>mvn install -P-run-static-analysis</p> <p>That disables the profile that executes the static analysis tasks.</p>"},{"location":"developer/development/#findbugs","title":"FindBugs","text":"<p>FindBugs is a tool that statically analyzes Java class files and searches for potential bugs. It excels at finding issues like unclosed reasources, inconsistent locking of resources, refering null known null-values. It also checks for bad practices like using default platform charset instead of a explicit charset.</p> <p>Because bad practices are checked for, sometimes Findbugs detects issues that are intentional. In order to account for these intentional violations Findbugs has exclude filter files which contain rules for which violations should be ignored. In Geonetwork the excludes filter file can be found at /code_quality/findbugs-excludes.xml. <p>For complete details of how to specify matches in the excludes file see http://findbugs.sourceforge.net/manual/filter.html and look at the existing examples in the file.</p> <p>The Maven build will fail if any violations are detected so it is important to run FindBugs on each project and fix or exclude each violation that is reported.</p>"},{"location":"developer/development/#findbugs-annotations-jsr-305","title":"FindBugs Annotations (JSR 305)","text":"<p>In order to get the maximum benefit from the Findbugs (and eclipse) analysis the javax.annotation annotations can be used to add metadata to methods, fields and parameters. The most commonly used annotations are @CheckForNull and @Nonnull. These can be used on a parameter or return value to indicate the parameter or return value must not be null or may be null. The findbugs process will enforce these conditions and statically check that null is only ever correctly returned (in the case of return values) or passed to a method (in the case of parameters).</p> <p>Some resources for these annotations are:</p> <ul> <li>http://vard-lokkur.blogspot.ch/2012/03/findbugs-and-jsr-305.html</li> <li>http://www.infoq.com/news/2008/06/jsr-305-update</li> <li>http://www.klocwork.com/blog/static-analysis/jsr-305-a-silver-bullet-or-not-a-bullet-at-all/</li> <li>http://minds.coremedia.com/2012/10/31/jsr-305-nonnull-and-guava-preconditions/</li> <li>http://findbugs.sourceforge.net/manual/annotations.html (the package names are outof date and should be java.annotation instead of edu.umd.cs.findbugs.annotation but the descriptions are accurate)</li> </ul>"},{"location":"developer/harvesting/","title":"Harvesting","text":""},{"location":"developer/harvesting/#structure","title":"Structure","text":"<p>The harvesting capability is built around 3 areas: JavaScript code, Java code and XSL stylesheets (on both the server and client side).</p>"},{"location":"developer/harvesting/#javascript-code","title":"JavaScript code","text":"<p>This refers to the web interface. The code is located in the web/geonetwork/scripts/harvesting folder. Here, there is a subfolder for each harvesting type plus some classes for the main page. These are:</p> <ol> <li>harvester.js: This is an abstract class that must be implemented by harvesting types. It defines some information retrieval methods (getType, getLabel, etc...) used to handle the harvesting type, plus one getUpdateRequest method used to build the XML request to insert or update entries.</li> <li>harvester-model.js: Another abstract class that must be implemented by harvesting types. When creating the XML request, the only method substituteCommon takes care of adding common information like privileges and categories taken from the user interface.</li> <li>harvester-view.js: This is an important abstract class that must be implemented by harvesting types. It takes care of many common aspects of the user interface. It provides methods to add group's privileges, to select categories, to check data for validity and to set and get common data from the user interface.</li> <li>harvesting.js: This is the main JavaScript file that takes care of everything. It starts all the submodules, loads XML strings from the server and displays the main page that lists all harvesting nodes.</li> <li>model.js: Performs all XML requests to the server, handles errors and decode responses.</li> <li>view.js: Handles all updates and changes on the main page.</li> <li>util.js: just a couple of utility methods.</li> </ol>"},{"location":"developer/harvesting/#java-code","title":"Java code","text":"<p>The harvesting package is located in <code>web/src/main/java/org/fao/geonet/kernel/harvest</code>. Here too, there is one subfolder for each harvesting type. The most important classes for the implementor are:</p> <ol> <li>AbstractHarvester: This is the main class that a new harvesting type must extends. It takes care of all aspects like adding, updating, removing, starting, stopping of harvesting nodes. Some abstract methods must be implemented to properly tune the behaviour of a particular harvesting type.</li> <li>AbstractParams: All harvesting parameters must be enclosed in a class that extends this abstract one. Doing so, all common parameters can be transparently handled by this abstract class.</li> </ol> <p>All others are small utility classes used by harvesting types.</p>"},{"location":"developer/harvesting/#xsl-stylesheets","title":"XSL stylesheets","text":"<p>Stylesheets are spread in some folders and are used by both the JavaScript code and the server. The main folder is located at <code>web/src/webapp/xsl/harvesting</code>. Here there are some general stylesheets, plus one subfolder for each harvesting type. The general stylesheets are:</p> <ol> <li>buttons.xsl: Defines all button present in the main page (activate, deactivate, run, remove, back, add, refresh), buttons present in the \"add new harvesting\" page (back and add) and at the bottom of the edit page (back and save).</li> <li>client-error-tip.xsl: This stylesheet is used by the browser to build tooltips when an harvesting error occurred. It will show the error class, the message and the stacktrace.</li> <li>client-node-row.xsl: This is also used by the browser to add one row to the list of harvesting nodes in the main page.</li> <li>harvesting.xsl: This is the main stylesheet. It generates the HTML page of the main page and includes all panels from all the harvesting nodes.</li> </ol> <p>In each subfolder, there are usually 4 files:</p> <ol> <li>xxx.xsl: This is the server stylesheets who builds all panels for editing the parameters. XXX is the harvesting type. Usually, it has the following panels: site information, search criteria, options, privileges and categories.</li> <li>client-privil-row.xsl: This is used by the JavaScript code to add rows in the group's privileges panel.</li> <li>client-result-tip.xsl: This is used by the JavaScript code (which inherits from harvester-view.js) to show the tool tip when the harvesting has been successful.</li> <li>client-search-row.xsl: Used in some harvesting types to generate the HTML for the search criteria panel.</li> </ol> <p>As you may have guessed, all client side stylesheets (those used by JavaScript code) start with the prefix client-.</p> <p>Another set of stylesheets are located in <code>web/src/webapp/xsl/xml/harvesting</code> and are used by the xml.harvesting.get service. This service is used by the JavaScript code to retrieve all the nodes the system is currently harvesting from. This implies that a stylesheet (one for each harvesting type) must be provided to convert from the internal setting structure to an XML structure suitable to clients.</p> <p>The last file to take into consideration contains all localised strings and is located at <code>web/src/webapp/loc/XX/xml/harvesting.xml</code> (where XX refers to a language code). This file is used by both JavaScript code and the server.</p>"},{"location":"developer/harvesting/#data-storage","title":"Data storage","text":"<p>Harvesting nodes are stored inside the Settings table. Further useful information can be found in the chapter Harvesting.</p> <p>The SourceNames table is used to keep track of the uuid/name couple when metadata get migrated to different sites.</p>"},{"location":"developer/harvesting/#guidelines","title":"Guidelines","text":"<p>To add a new harvesting type, follow these steps:</p> <ol> <li>Add the proper folder in <code>web/src/webapp/scripts/harvesting</code>, maybe copying an already existing one.</li> <li>Edit the harvesting.js file to include the new type (edit both constructor and init methods).</li> <li>Add the proper folder in <code>web/src/webapp/xsl/harvesting</code> (again, it is easy to copy from an already existing one).</li> <li>Edit the stylesheet <code>web/src/webapp/xsl/harvesting/harvesting.xsl</code> and add the new type</li> <li>Add the transformation stylesheet in <code>web/src/webapp/xsl/xml/harvesting</code>. Its name must match the string used for the harvesting type.</li> <li>Add the Java code in a package inside <code>org.fao.geonet.kernel.harvest.harvester</code>.</li> <li>Add proper strings in <code>web/src/webapp/loc/XX/xml/harvesting.xml</code>.</li> </ol> <p>Here is a list of steps to follow when adding a new harvesting type:</p> <ol> <li>Every harvesting node (not type) must generate its UUID. This UUID is used to remove metadata when the harvesting node is removed and to check if a metadata (which has another UUID) has been already harvested by another node.</li> <li>If a harvesting type supports multiple searches on a remote site, these must be done sequentially and results merged.</li> <li>Every harvesting type must save in the folder images/logos a GIF image whose name is the node's UUID. This image must be deleted when the harvesting node is removed. This is necessary to propagate harvesting information to other GeoNetwork nodes.</li> <li>When a harvesting node is removed, all collected metadata must be removed too.</li> <li>During harvesting, take in mind that a metadata could have been removed just after being added to the result list. In this case the metadata should be skipped and no exception raised.</li> <li>The only settable privileges are: view, dynamic, featured. It does not make sense to use the others.</li> <li>If a node raises an exception during harvesting, that node will be deactivated.</li> <li>If a metadata already exists (its UUID exists) but belong to another node, it must not be updated even if it has been changed. This way the harvesting will not conflict with the other one. As a side effect, this prevent locally created metadata from being changed.</li> <li>The harvesting engine stores results in the database as part of the harvest history.</li> <li>When harvesting parameters are changed, the new harvesting type must use them during the next harvesting without requiring server restart.</li> </ol>"},{"location":"developer/mef/","title":"Metadata Exchange Format","text":""},{"location":"developer/mef/#introduction","title":"Introduction","text":"<p>The metadata exchange format (MEF in short) is a specially designed file format for the purpose of metadata exchange between different platforms. A metadata exported as a MEF can be imported by any platform which is able to understand MEF. This format has been developed with GeoNetwork in mind so the information it contains is mainly related to GeoNetwork. Nevertheless, it can be used as an interoperability format between different platforms.</p> <p>This format has been designed with the following needs in mind:</p> <ol> <li>Export a metadata record for backup purposes</li> <li>Import a metadata record from a previous backup</li> <li>Import a metadata record from a different GeoNetwork version to allow a smooth migration from one version to another.</li> <li>Capture metadata plus thumbnails and any data uploaded with the metadata record.</li> </ol> <p>In the paragraphs below, some terms should be intended as follows:</p> <ol> <li>the term actor is used to indicate any system (application, service etc...) that operates on metadata.</li> <li>the term reader will be used to indicate any actor that can import metadata from a MEF file.</li> <li>the term writer will be used to indicate any actor that can generate a MEF file.</li> </ol>"},{"location":"developer/mef/#mef-v1-file-format","title":"MEF v1 file format","text":"<p>A MEF file is simply a ZIP file which contains the following files:</p> <pre><code>Root\n |\n +--- metadata.xml\n +--- info.xml\n +--- public\n |        +---- all public documents and thumbnails\n +--- private\n           +---- all private documents and thumbnails\n</code></pre> <ol> <li>metadata.xml: this file contains the metadata itself, in XML format. The text encoding of the metadata (eg. UTF-8) is specified in the XML declaration.</li> <li>info.xml: this is a special XML file which contains information related to the metadata (metadata about the metadata). Examples of the information in the info.xml file are: creation date, modification date, privileges This information is needed by GeoNetwork.</li> <li>public: this is a directory used to store the metadata thumbnails and other public files. There are no restrictions on the image format but it is strongly recommended to use the portable network graphics (PNG), JPEG or GIF format.</li> <li>private: this is a directory used to store all data (maps, shape files etc...) uploaded with the metadata in the GeoNetwork editor. Files in this directory are private in the sense that authorisation is required to access them. There are no restrictions on the file types that can be stored into this directory.</li> </ol> <p>Any other file or directory present in the MEF file should be ignored by readers that don't recognise them. This allows actors to add custom extensions to the MEF file.</p> <p>A MEF file can have empty public and private folders depending upon the export format, which can be:</p> <ul> <li>simple: both public and private are omitted.</li> <li>partial: only public files are provided.</li> <li>full: both public and private files are provided.</li> </ul> <p>It is recommended to use the .mef extension when naming MEF files.</p>"},{"location":"developer/mef/#mef-v2-file-format","title":"MEF v2 file format","text":"<p>MEF version 2 support the following:</p> <ul> <li>multi-metadata support: more than one metadata record and data can be stored in a single MEF file.</li> <li>multi-schema support: be able to store in a single MEF n formats (eg. for an ISO profile, also store a version of that record in the base ISO19115/ISO19139 schema).</li> </ul> <p>Current export services that create MEF files from a metadata record with related records (eg. paent, feature catalog etc), can include these related metadata records in the MEF. See mef.export.</p> <p>MEF v2 format structure is the following:</p> <pre><code>Root \n  | \n + 0..n metadata\n     |\n     +--- metadata\n     |     +--- metadata.xml \n     |     +--- (optional) metadata.iso19139.xml\n     +--- info.xml\n     +--- applschema\n     |     +--- (optional) metadata.xml (ISO19110 Feature Catalog)\n     +--- public\n     |     +---- all public documents and thumbnails\n     +--- private\n           +---- all private documents and thumbnails\n</code></pre> <p>Note: metadata.iso19139.xml is generated by GeoNetwork actors on export if the metadata record in metadata.xml is an ISO19115/19139 profile. On import, this record may be selected for loading if the ISO19115/19139 profile is not present.</p>"},{"location":"developer/mef/#the-infoxml-file","title":"The info.xml file","text":"<p>This file contains general information about a metadata. It must have an info root element with a mandatory version attribute. This attribute must be in the X.Y form, where X represents the major version and Y the minor one. The purpose of this attribute is to allow future changes of this format maintaining compatibility with older readers. The policy behind the version is this:</p> <ol> <li>A change to Y means a minor change. All existing elements in the previous version must be left unchanged: only new elements or attributes may be added. A reader capable of reading version X.Y is also capable of reading version X.Y' with Y'&gt;Y.</li> <li>A change to X means a major change. Usually, a reader of version X.Y is not able to read version X'.Y with X'&gt;X.</li> </ol> <p>The root element must have the following children:</p> <ol> <li>general: a container for general information. It must have the following children:<ul> <li>uuid: this is the universally unique identifier assigned to the metadata and must be a valid UUID. This element is optional and, when omitted, the reader should generate one. A metadata without a UUID can be imported several times into the same system without breaking uniqueness constraints. When missing, the reader should also generate the siteId value.</li> <li>createDate: This date indicates when the metadata was created.</li> <li>changeDate: This date keeps track of the most recent change to the metadata.</li> <li>siteId: This is an UUID that identifies the actor that created the metadata and must be a valid UUID. When the UUID element is missing, this element should be missing too. If present, it will be ignored.</li> <li>siteName: This is a human readable name for the actor that created the metadata. It must be present only if the siteId is present.</li> <li>schema: The name of the schema for the metadata record in metadata.xml. When the MEF is imported by a GeoNetwork actor, this name should be the name of a metadata schema handled by the actor (eg. iso19139). If the GeoNetwork actor does not have such a schema, it may try and select another metadata with a schema that is present (eg. the metadata in metadata-iso19139.xml could be loaded because the iso19139 schema is present).</li> <li>format: Indicates the MEF export format. The element's value must belong to the following set: { simple, partial, full }.</li> <li>localId: This is an optional element. If present, indicates the id used locally by the sourceId actor to store the metadata. Its purpose is just to allow the reuse of the same local id when reimporting a metadata.</li> <li>isTemplate: A boolean field that indicates if this metadata is a template used to create new ones. There is no real distinction between a real metadata and a template but some actors use it to allow fast metadata creation. The value must be: { true, false }.</li> <li>rating: This is an optional element. If present, indicates the users' rating of the metadata ranging from 1 (a bad rating) to 5 (an excellent rating). The special value 0 means that the metadata has not been rated yet. Can be used to sort search results.</li> <li>popularity: Another optional value. If present, indicates the popularity of the metadata. The value must be positive and high values mean high popularity. The criteria used to set the popularity is left to the writer. Its main purpose is to provide a metadata ordering during a search.</li> </ul> </li> <li>categories: a container for categories associated to this metadata. A category is just a name, like 'audio-video' that classifies the metadata to allow an easy search. Each category is specified by a category element which must have a name attribute. This attribute is used to store the category's name. If there are no categories, the categories element will be empty.</li> <li>privileges: a container for privileges associated to this metadata. Privileges are operations that a group (which represents a set of users) can do on a metadata and are specified by a set of group elements. Each one of these, has a mandatory name attribute to store the group's name and a set of operation elements used to store the operations allowed on the metadata. Each operation element must have a name attribute which value must belong to the following set: { view, download, notify, dynamic, featured }. If there are no groups or the actor does not have the concept of group, the privileges element will be empty. A group element without any operation element must be ignored by readers.</li> <li>public: All metadata thumbnails (and any other public file) must be listed here. This container contains a file element for each file. Mandatory attributes of this element are name, which represents the file's name and changeDate, which contains the date of the latest change to the file. The public element is optional but, if present, must contain all the files present in the metadata's public directory and any reader that imports these files must set the latest change date on these using the provided ones. The purpose of this element is to provide more information in the case the MEF format is used for metadata harvesting.</li> <li>private: This element has the same purpose and structure of the public element but is related to maps and all other private files.</li> </ol> <p>Any other element or attribute should be ignored by readers that don't understand them. This allows actors to add custom attributes or subtrees to the XML.</p>"},{"location":"developer/mef/#date-format","title":"Date format","text":"<p>Unless differently specified, all dates in this file must be in the ISO/8601 format. The pattern must be YYYY-MM-DDTHHSS and the timezone should be the local one.</p>"},{"location":"developer/mef/#info_xml","title":"Date format example","text":"<p>Example of info file:</p> <pre><code>&lt;info version=\"1.0\"&gt;\n    &lt;general&gt;\n        &lt;uuid&gt;0619abc0-708b-eeda-8202-000d98959033&lt;/uuid&gt;\n        &lt;createDate&gt;2006-12-11T10:33:21&lt;/createDate&gt;\n        &lt;changeDate&gt;2006-12-14T08:44:43&lt;/changeDate&gt;\n        &lt;siteId&gt;0619cc50-708b-11da-8202-000d9335906e&lt;/siteId&gt;\n        &lt;siteName&gt;FAO main site&lt;/siteName&gt;\n        &lt;schema&gt;iso19139&lt;/schema&gt;\n        &lt;format&gt;full&lt;/format&gt;\n        &lt;localId&gt;204&lt;/localId&gt;\n        &lt;isTemplate&gt;false&lt;/isTemplate&gt;\n    &lt;/general&gt;\n    &lt;categories&gt;\n        &lt;category name=\"maps\"/&gt;\n        &lt;category name=\"datasets\"/&gt;\n    &lt;/categories&gt;\n    &lt;privileges&gt;\n        &lt;group name=\"editors\"&gt;\n            &lt;operation name=\"view\"/&gt;\n            &lt;operation name=\"download\"/&gt;\n        &lt;/group&gt;\n    &lt;/privileges&gt;\n    &lt;public&gt;\n        &lt;file name=\"small.png\" changeDate=\"2006-10-07T13:44:32\"/&gt;\n        &lt;file name=\"large.png\" changeDate=\"2006-11-11T09:33:21\"/&gt;\n    &lt;/public&gt;\n    &lt;private&gt;\n        &lt;file name=\"map.zip\" changeDate=\"2006-11-12T13:23:01\"/&gt;\n    &lt;/private&gt;\n&lt;/info&gt;\n</code></pre>"},{"location":"developer/release/","title":"Create a release","text":"<p>This guide details the process of performing a release.</p> <p>Note</p> <ul> <li>BRANCH: Branches are created for major stables releases and end with .x (for example 2.8.x)</li> <li>VERSION (for tag): version to release (for example 2.8.1 or 2.8.1RC0)</li> </ul>"},{"location":"developer/release/#call-for-vote","title":"Call for vote","text":"<p>In order to make a release ask the PSC to vote for the new release.</p>"},{"location":"developer/release/#release-committee","title":"Release committee","text":"<p>To create new releases a committee of 2-4 persons should be chosen. The members of the committee are responsible for creating the releases following the steps described in this section.</p> <p>A rotation policy can be use to select a person from the committee who will be responsible for creating each release.</p>"},{"location":"developer/release/#notify-developer-lists","title":"Notify developer lists","text":"<p>It is good practice to notify the GeoNetwork developer list of the intention to make the release a few days in advance.</p> <p>On the day the release is being made a warning mail must be sent to the list asking that developers refrain from committing until the release tag has been created.</p>"},{"location":"developer/release/#prerequisites","title":"Prerequisites","text":"<ol> <li>Commit access to GeoNetwork git</li> <li>Administration rights to SourceForge server to publish the release</li> <li>Administration rights to geonetwork-opensource.org to update the website (for stable release)</li> </ol>"},{"location":"developer/release/#add-release-to-trac","title":"Add release to trac","text":"<p>Add the new version to the trac release list (http://trac.osgeo.org/geonetwork/admin/ticket/versions).</p> <p>Add the 3 RC milestone (http://trac.osgeo.org/geonetwork/admin/ticket/milestones).</p> <pre><code>TODO: At some point, all open tickets for the master branch (eg. 2.9.0) should be moved\nto the next RC (eg. 2.10.0RC1 or 2.10.1) or the next master (eg. 2.11.0).\n</code></pre>"},{"location":"developer/release/#making-the-release","title":"Making the release","text":"<p>This procedure creates a new development branch and its first RC version.</p> <p>TODO : Add procedure to only make a new release from an existing dev branch.</p> <pre><code># Set version numbers\nmodules=( \"gast\" \"geoserver\" )\n# TODO maybe add other modules if changes\nversion=2.10.0\ndevversion=2.10.x\nminorversion=RC0\nmasterversion=2.9.0\npreviousversion=2.8.x\nsourceforge_username=YourSourceforgeUserName\n\n# Get the code\ngit clone --recursive https://github.com/geonetwork/core-geonetwork.git geonetwork-$version\ncd geonetwork-$version\n\n\n\n# Create a new development branch from master\ngit checkout -b $devversion origin/develop\ngit submodule foreach git checkout -b $devversion origin/develop\n\n# Update version number\n./update-version.sh $masterversion $version-SNAPSHOT\n\n# Commit the new x branch (if it does not exist) for project and modules\nfor i in \"${modules[@]}\"\ndo\n      cd $i; git add .; git commit -m \"Update version to $version-SNAPSHOT\"; cd ..\ndone\ngit add .\ngit commit -m \"Update version to $version-SNAPSHOT\"\n\n\n\n# Create the new release\n./update-version.sh $version $version-$minorversion\n\n# Commit the new minor version for modules\nfor i in \"${modules[@]}\"\ndo\n      cd $i; git add .; git commit -m \"Update version to $version-$minorversion\"; cd ..\ndone\ngit add .\n\n\n# Compile\nmvn clean install -Pwith-doc\n\n# Build the application and run the integration tests in ``web-itests``\ncd web-itests\nmvn clean install -Pitests\ncd ..\n\n\n# Build installer\ncd installer\nant\ncd ..\n\n# Test the installer\n\n# Generate list of changes\ncat &lt;&lt;EOF &gt; docs/changes$devversion.txt\n================================================================================\n===\n=== GeoNetwork $version: List of changes\n===\n================================================================================\nEOF\ngit log --pretty='format:- %s' origin/$previousversion... &gt;&gt; docs/changes$devversion.txt\n\n\n# Tag the release\ngit tag -a $version$minorversion -m \"Tag for $version-$minorversion release\"\ngit push origin $version$minorversion\n\n\n\n\n# Restore version number to SNAPSHOT\n./update-version.sh $version $version-SNAPSHOT\nfor i in \"${modules[@]}\"\ndo\n      cd $i; git add .; git commit -m \"Update version to $version-SNAPSHOT\"; cd ..\ndone\ngit add .\ngit commit -m \"Update version to $version-SNAPSHOT\"\n\n\n\n# Push to github - could be done at the end of the process ?\n# git submodule foreach `git push origin $devversion`\nfor i in \"${modules[@]}\"\ndo\n      cd $i; git add .; git push origin $devversion; cd ..\ndone\ngit push origin $devversion\n\n\n# Publish in sourceforge\nsftp $sourceforge_username,geonetwork@frs.sourceforge.net\n# For stable release\ncd /home/frs/project/g/ge/geonetwork/GeoNetwork_opensource\n# or for RC release\ncd /home/frs/project/g/ge/geonetwork/cd GeoNetwork_unstable_development_versions/\nmkdir 2.10.0\ncd 2.10.0\nput docs/changes*.txt\nput geonetwork*/*.jar\nput web/target/geonetwork.war\n\n\n# Publish on the website\n# TODO\n</code></pre>"},{"location":"developer/release/#updating-the-master-branch-version-number","title":"Updating the master branch version number","text":"<p>After a new development branch is created, it is required to update master version number. The following procedure could be applied:</p> <pre><code>masterversion=2.9.0\nversion=2.11.0\nmodules=( \"docs\" \"gast\" \"geoserver\" \"installer\" )\n# Get the code\ngit clone --recursive https://github.com/geonetwork/core-geonetwork.git geonetwork-$version\ncd geonetwork-$version\n\n# Update version\n./update-version.sh $masterversion $version-SNAPSHOT\n\n# Update some SQL (TODO)\ngit checkout -- web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v${masterversion//[.]/}/migrate-default.sql\nmkdir web/src/main/webapp/WEB-INF/classes/setup/sql/migrate/v${version//[.]/}\n\n# Commit\n# git submodule foreach git add .\n# FIXME : don't work due to $version ?\n#git submodule foreach git commit -m \"Update version to $version-SNAPSHOT.\"\nfor i in \"${modules[@]}\"\ndo\n      cd $i; git add .; git commit -m \"Update version to $version-SNAPSHOT\"; cd ..\ndone\n\ngit add .\ngit commit -m \"Update version to $version-SNAPSHOT.\"\ngit submodule foreach git push origin master\ngit push origin master\n</code></pre>"},{"location":"developer/release/#upload-and-release-on-sourceforge","title":"Upload and release on SourceForge","text":"<p>All of the artifacts generated so far need to be uploaded to the SourceForce File release System:</p> <ol> <li>WAR distribution</li> <li>Installers (exe and jar)</li> </ol> <p>Note</p> <p>This step requires administrative privileges in SourceForge for the GeoNetwork opensource project.</p> <ol> <li>Log in to SourceForge.</li> <li>Go to the GeoNetwork Files section.</li> <li>Add the new v[VERSION] folder for this release.</li> </ol> <p>4.a. Using the commandline secure copy is the simplest way for developers working under a *NIX like system: :</p> <pre><code>$ scp geonetwork.war username@frs.sourceforge.net:/home/frs/project/g/ge/geonetwork/GeoNetwork_opensource/v[VERSION]/\n$ scp geonetwork-[VERSION].jar username@frs.sourceforge.net:/home/frs/project/g/ge/geonetwork/GeoNetwork_opensource/v[VERSION]/\n$ scp geonetwork-[VERSION].exe username@frs.sourceforge.net:/home/frs/project/g/ge/geonetwork/GeoNetwork_opensource/v[VERSION]/\n$ scp docs/readme[VERSION].txt username@frs.sourceforge.net:/home/frs/project/g/ge/geonetwork/GeoNetwork_opensource/v[VERSION]/\n</code></pre> <p>4.b. The same can be accomplished in Windows using WinSCP. Or a desktop client like Cyberduck on Windows and Mac OS X</p> <p>5. Once the upload of the files has been completed, use the web interface to set the default download files. The (i) button allows to set the default operating systems for each installer (.exe for Windows and .jar for all other systems).</p> <p></p> <ol> <li>The default downloads are ready now.</li> </ol>"},{"location":"developer/release/#update-geonetwork-opensource-website","title":"Update geonetwork-opensource website","text":"<p>The website requires updates to reflect the new release. Update the version number and add a new news entry in the following files:</p> <pre><code>website/docsrc/conf.py\nwebsite/docsrc/docs.rst\nwebsite/docsrc/downloads.rst\nwebsite/docsrc/index.rst\nwebsite/docsrc/news.rst\nwebsite/checkup_docs.sh\n</code></pre> <p>Commit the changes and build the website using the Hudson deployment system</p>"},{"location":"developer/release/#announce-the-release","title":"Announce the release","text":""},{"location":"developer/release/#mailing-lists","title":"Mailing lists","text":"<p>Send an email to both the developers list and users list announcing the release.</p> <p>Template email for RC:</p> <pre><code>Release Candidate X v[VERSION] now available for testing\n\nDear all,\nYou can now download and test the release candidate (v[VERSION]RCX) of GeoNetwork opensource version [VERSION]:\n\nhttps://sourceforge.net/projects/geonetwork/files/GeoNetwork_unstable_development_versions/v[VERSION]/\n\nWe did not generate a dedicated Windows installer, but this multiplatform installer should also work on Windows systems.\n\nYou can find a list of new functionality in v[VERSION] at http://trac.osgeo.org/geonetwork/wiki/proposals\n as well as in the documentation included in the installer.\n\nA list of fixes and changes in [VERSION] here https://github.com/geonetwork/core-doc-sources/blob/master/changes[VERSION].txt.\n\nIf you have any fixed or improvements you want to contribute back, the best is to use git to get a local copy of the source code, apply the fix and put out a Pull request so your improvements can be integrated quickly. Otherwise you can also create new Tickets in the http://trac.osgeo.org/geonetwork issue tracker.\n\nLooking forward to your testing, feedback and contributions. The release of  GeoNetwork opensource v2.8.0 stable release is planned in about two weeks.\n\nThanks to all developers and contributors!\nHappy testing,\n</code></pre> <p>Template mail for release:</p> <pre><code>TODO\n</code></pre>"},{"location":"developer/schemaPlugins/","title":"Schema Plugins","text":""},{"location":"developer/schemaPlugins/#metadata-schemas-and-profiles","title":"Metadata schemas and profiles","text":"<p>A metadata schema describes:</p> <ol> <li>the names, descriptions and any value codelists of the elements in the metadata schema</li> <li>how the elements of the metadata schema are laid out in a metadata document (structure)</li> <li>constraints on elements and content in a metadata document</li> <li>documentation on how the elements of the metadata schema should be used</li> <li>sample metadata documents</li> <li>scripts to convert metadata documents to and from other metadata schemas</li> </ol> <p>A metadata schema is usually an implementation of a metadata standard.</p> <p>A metadata profile is an adaptation of a metadata schema to suit the needs of a particular community. A metadata profile contains all the components of a metadata schema but may extend, restrict or redefine these components.</p>"},{"location":"developer/schemaPlugins/#implementing-a-metadata-schema-or-profile","title":"Implementing a metadata schema or profile","text":"<p>There are many ways in which a metadata schema or profile can be implemented. This section will describe the way in which metadata schemas are implemented on https://github.com/metadata-schemas.</p> <p>Each metadata schema is implemented as a filesystem tree. The root of the tree is the name of the metadata schema in abbreviated form. The essential components of a metadata schema in this tree are laid out as follows:</p> <ol> <li>loc directory with subdirectories for each three letter language code that this information is localized into, with the content in XML files (labels.xml, codelists.xml). For example: <code>loc/eng/codelists.xml</code> describes the english codelists for metadata elements</li> <li>schema directory and file named schema.xsd providing a single entry point to the XSD hierarchy. For example: <code>schema/gmd/gmd.xsd</code></li> <li>schematron directory has constraints on elements and content in a metadata document implemented using the ISO schematron language</li> <li>docs directory has documentation on how the elements of the metadata schema should be used.</li> <li>sample-data directory has sample metadata documents</li> <li>convert directory has XSLTs that convert metadata documents to and from other schemas</li> </ol> <p>More information on the content of these directories and files will be given in the next section. Note: some schemas on https://github.com/metadata-schemas have more information than described above because they have been implemented as GeoNetwork schema plugins.</p>"},{"location":"developer/schemaPlugins/#schema-plugins","title":"Schema Plugins","text":"<p>A schema plugin that can be used in GeoNetwork is a directory of stylesheets, XML schema descriptions (XSDs) and other information necessary for GeoNetwork to index, view and possibly edit content from XML metadata records.</p> <p>To be used in GeoNetwork, a schema directory can be manually placed in the <code>config/schema_plugins</code> sub directory of the GeoNetwork data directory. The default GeoNetwork data directory location is <code>INSTALL_DIR/web/geonetwork/WEB-INF/data</code>. The contents of these schemas are parsed during GeoNetwork initialization. If valid, they will be available for use when GeoNetwork starts up.</p> <p>Schemas can also added to GeoNetwork dynamically if a zip archive of the schema directory is created and then uploaded to GeoNetwork in one of following ways using functions in the Administration menu:</p> <ol> <li>Server file path (specified using file chooser)</li> <li>HTTP URL (eg. http://somehost/somedirectory/iso19139.mcp.zip)</li> <li>As an online resource attached to an ISO19115/19139 metadata record</li> </ol> <p>Uploaded schemas are also stored in the <code>config/schema_plugins</code> sub directory of the GeoNetwork data directory.</p>"},{"location":"developer/schemaPlugins/#contents-of-a-geonetwork-schema","title":"Contents of a GeoNetwork schema","text":"<p>When installed, a GeoNetwork schema is a directory.</p> <p>The following subdirectories can be present:</p> <ul> <li>convert: (Mandatory) Directory of XSLTs to convert metadata from or to this schema. This could be to convert metadata to other schemas or to convert metadata from other schemas and formats to this schema. Eg. <code>convert/oai_dc.xsl</code></li> <li>docs: (Mandatory) Directory of XSLTs to convert metadata from or to this schema. This could be to convert metadata to other schemas or to convert metadata from other schemas and formats to this schema. Eg. <code>convert/oai_dc.xsl</code></li> <li>loc: (Mandatory) Directory of localized information: labels, codelists or schema specific strings. Eg. <code>loc/eng/codelists.xml</code></li> <li>present: (Mandatory) contains XSLTs for presenting metadata in the viewer/editor and in response to CSW requests for brief, summary and full records.</li> <li>process: (Optional) contains XSLTs for processing metadata elements by metadata suggestions mechanism (see suggest.xsl below).</li> <li>sample-data: (Mandatory) Sample metadata for this schema. The metadata samples are in MEF format so that samples can have thumbnails or browse graphics as well as online resources.</li> <li>schema: (Optional) Directory containing the official XSDs of the metadata schema. If the schema is described by a DTD then this directory is optional. Note that schemas described by a DTD cannot be edited by GeoNetwork.</li> <li>schematron: (Mandatory) Directory containing the schematrons used to check conditions on content.</li> <li>templates: (Optional) Directory containing template and subtemplate metadata records for this schema. Template metadata records are usually metadata records with the set of elements (and content) that will be used for a specific purpose. Eg. iso19139.mcp schema has a 'Minimum Element' template that has the mandatory elements for the schema and a example of the content that is expected.</li> </ul> <p>The following stylesheets can be present:</p> <ul> <li>extract-date-modified.xsl: (Mandatory) Extract the date of modification from the metadata record.</li> <li>extract-gml.xsl: (Mandatory) Extract the spatial extent from the metadata record as a GML GeometryCollection element.</li> <li>extract-thumbnails.xsl: (Optional) Extract the browse graphic/thumbnail from the metadata record.</li> <li>extract-uuid.xsl: (Mandatory) Extract the UUID of the metadata record.</li> <li>index-fields.xsl: (Mandatory) Index the metadata record content in Lucene. Creates the Lucene document used by GeoNetwork to index the metadata record content.</li> <li>set-thumbnail.xsl: (Optional) Set the browse graphic/thumbnail in the metadata record.</li> <li>set-uuid.xsl: (Optional) Set the UUID of the metadata record.</li> <li>suggest.xsl: (Optional) XSLT run by metadata suggestions service. The XSLT contains processes that can be registered and run on different elements of a metadata record. eg. expand keyword field with comma separated content into multiple keyword fields. See http://trac.osgeo.org/geonetwork/wiki/proposals/MetadataEditorSuggestion for more info.</li> <li>unset-thumbnail.xsl: (Optional) Remove the browse graphic/thumbnail from the metadata record.</li> <li>update-child-from-parent-info.xsl: (Optional) XSLT to specify which elements in a child record are updated from a parent record. Used to manage hierarchical relationships between metadata records.</li> <li>update-fixed-info.xsl: (Optional) XSLT to update 'fixed' content in metadata records.</li> </ul> <p>The following configuration files can be present:</p> <ul> <li>oasis-catalog.xml: (Optional) An oasis catalog describing any mappings that should be used for this schema eg. mapping URLs to local copies such as schemaLocations eg. http://www.isotc211.org/2005/gmd/gmd.xsd is mapped to <code>schema/gmd/gmd.xsd</code>. Path names used in the oasis catalog are relative to the location of this file which is the schema directory.</li> <li>schema.xsd: (Optional) XML schema directory file that includes the XSDs used by this metadata schema. If the schema uses a DTD then this file should not be present. Metadata records from schemas that use DTDs cannot be edited in GeoNetwork.</li> <li>schema-conversions.xml: (Optional) XML file that describes the converters that can be applied to records belonging to this schema. This information is used to show these conversions as options for the user to choose when a metadata record belonging to this schema is shown in the search results.</li> <li>schema-ident.xml: (Mandatory) XML file that contains the schema name, identifier, version number and details on how to recognise metadata records that belong to this schema. This file has an XML schema definition in <code>INSTALL_DIR/web/geonetwork/xml/validation/schemaPlugins/schema-ident.xsd</code> which is used to validate it when the schema is loaded.</li> <li>schema-substitutes.xml: (Optional) XML file that redefines the set of elements that can be used as substitutes for a specific element.</li> <li>schema-suggestions.xml: (Optional) XML file that tells the editor which child elements of a complex element to automatically expand in the editor.</li> </ul> <p>To help in understanding what each of these components is and what is required, we will now give a step-by-step example of how to build a schemaPlugin for GeoNetwork.</p>"},{"location":"developer/schemaPlugins/#preparation","title":"Preparation","text":"<p>In order to create a schema plugin for GeoNetwork, you should check out the schemaPlugins directory from the GeoNetwork sourceforge subversion repository. You can do this by installing subversion on your workstation and then executing the following command:</p> <pre><code>svn co https://github.com/geonetwork/schema-plugins/branches/master schemaPlugins\n</code></pre> <p>This will create a directory called schemaPlugins with some GeoNetwork schema plugins in it. To work with the example shown here, you should create your new schema plugin in a subdirectory of this directory.</p>"},{"location":"developer/schemaPlugins/#example-iso1911519139-marine-community-profile-mcp","title":"Example - ISO19115/19139 Marine Community Profile (MCP)","text":"<p>The Marine Community Profile (MCP) is a profile of ISO19115/19139 developed for and with the Marine Community. The profile extends the ISO19115 metadata standard and is implemented using an extension of the XML implementation of ISO19115 described in ISO19139. Both the ISO19115 metadata standard and its XML implementation, ISO19139, are available through ISO distribution channels.</p> <p>The documentation for the Marine Community Profile can be found at http://www.aodc.gov.au/files/MarineCommunityProfilev1.4.pdf. The implementation of the Marine Community Profile as XML schema definitions is based on the approach described at https://www.seegrid.csiro.au/wiki/AppSchemas/MetadataProfiles. The XML schema definitions (XSDs) are available at the URL http://bluenet3.antcrc.utas.edu.au/mcp-1.4.</p> <p>Looking at the XML schema definitions, the profile adds a few new elements to the base ISO19139 standard. So the basic idea in defining a plugin Marine Community Profile schema for GeoNetwork is to use as much of the basic ISO19139 schema definition supplied with GeoNetwork as possible.</p> <p>We'll now describe in basic steps how to create each of the components of a plugin schema for GeoNetwork that implements the MCP.</p>"},{"location":"developer/schemaPlugins/#creating-the-schema-identxml-file","title":"Creating the schema-ident.xml file","text":"<p>Now we need to provide the information necessary to identify the schema and metadata records that belong to the schema. The schema-ident.xml file for the MCP is as follows:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;schema xmlns=\"http://geonetwork-opensource.org/schemas/schema-ident\" \n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n        .....&gt;\n  &lt;name&gt;iso19139.mcp&lt;/name&gt;\n  &lt;id&gt;19c9a2b2-dddb-11df-9df4-001c2346de4c&lt;/id&gt;\n  &lt;version&gt;1.5&lt;/version&gt;\n  &lt;schemaLocation&gt;\n    http://bluenet3.antcrc.utas.edu.au/mcp \n    http://bluenet3.antcrc.utas.edu.au/mcp-1.5-experimental/schema.xsd \n    http://www.isotc211.org/2005/gmd \n    http://www.isotc211.org/2005/gmd/gmd.xsd \n    http://www.isotc211.org/2005/srv \n    http://schemas.opengis.net/iso/19139/20060504/srv/srv.xsd\n  &lt;/schemaLocation&gt;\n  &lt;autodetect xmlns:mcp=\"http://bluenet3.antcrc.utas.edu.au/mcp\" \n              xmlns:gmd=\"http://www.isotc211.org/2005/gmd\" \n              xmlns:gco=\"http://www.isotc211.org/2005/gco\"&gt;\n    &lt;elements&gt;\n      &lt;gmd:metadataStandardName&gt;\n        &lt;gco:CharacterString&gt;\n          Australian Marine Community Profile of ISO 19115:2005/19139|\n          Marine Community Profile of ISO 19115:2005/19139\n        &lt;/gco:CharacterString&gt;\n      &lt;/gmd:metadataStandardName&gt;\n      &lt;gmd:metadataStandardVersion&gt;\n        &lt;gco:CharacterString&gt;\n          1.5-experimental|\n          MCP:BlueNet V1.5-experimental|\n          MCP:BlueNet V1.5\n        &lt;/gco:CharacterString&gt;\n      &lt;/gmd:metadataStandardVersion&gt;\n    &lt;/elements&gt;\n  &lt;/autodetect&gt;\n&lt;/schema&gt;\n</code></pre> <p>Each of the elements is as follows:</p> <ul> <li>name - the name by which the schema will be known in GeoNetwork. If the schema is a profile of a base schema already added to GeoNetwork then the convention is to call the schema .. <li>id - a unique identifier for the schema.</li> <li>version - the version number of the schema. Multiple versions of the schema can be present in GeoNetwork.</li> <li>schemaLocation - a set of pairs, where the first member of the pair is a namespace URI and the second member is the official URL of the XSD. The contents of this element will be added to the root element of any metadata record displayed by GeoNetwork as a schemaLocation/noNamespaceSchemaLocation attribute, if such as attribute does not already exist. It will also be used whenever an official schemaLocation/noNamespaceSchemaLocation is required (eg. in response to a ListMetadataFormats OAI request).</li> <li>autodetect - contains elements or attributes (with content) that must be present in any metadata record that belongs to this schema. This is used during schema detection whenever GeoNetwork receives a metadata record of unknown schema.</li> <p>After creating this file you can validate it manually using the XML schema definition (XSD) in <code>INSTALL_DIR/web/geonetwork/xml/validation/schemaPlugins/schema-ident.xsd</code>. This XSD is also used to validate this file when the schema is loaded. If schema-ident.xml failes validation, the schema will not be loaded.</p>"},{"location":"developer/schemaPlugins/#more-on-autodetect","title":"More on autodetect","text":"<p>The autodetect section of schema-ident.xml is used when GeoNetwork needs to identify which metadata schema a record belongs to.</p> <p>The five rules that can be used in this section in order of evaluation are:</p> <p>1. Attributes - Find one or more attributes and/or namespaces in the document. An example use case is a profile of ISO19115/19139 that adds optional elements under a new namespace to gmd:identificationInfo/gmd:MD_DataIdentification. To detect records that belong to this profile the autodetect section in the schema-ident.xml file could look something like the following:</p> <pre><code>&lt;autodetect xmlns:cmar=\"http://www.marine.csiro.au/schemas/cmar.xsd\"&gt;\n    &lt;!-- catch all cmar records that have the cmar vocab element --&gt;\n    &lt;attributes cmar:vocab=\"http://www.marine.csiro.au/vocabs/projectCodes.xml\"/&gt;\n&lt;/autodetect&gt;\n</code></pre> <p>Some other points about attributes autodetect:</p> <ul> <li>multiple attributes can be specified - all must be match for the record to be recognized as belonging to this schema.</li> <li>if the attributes have a namespace then the namespace should be specified on the autodetect element or somewhere in the schema-ident.xml document.</li> </ul> <p>2. Elements - Find one or more elements in the document. An example use case is the one shown in the example schema-ident.xml file earlier:</p> <pre><code>&lt;autodetect xmlns:mcp=\"http://bluenet3.antcrc.utas.edu.au/mcp\" \n            xmlns:gmd=\"http://www.isotc211.org/2005/gmd\" \n            xmlns:gco=\"http://www.isotc211.org/2005/gco\"&gt;\n  &lt;elements&gt;\n    &lt;gmd:metadataStandardName&gt;\n      &lt;gco:CharacterString&gt;\n        Australian Marine Community Profile of ISO 19115:2005/19139|\n        Marine Community Profile of ISO 19115:2005/19139\n      &lt;/gco:CharacterString&gt;\n    &lt;/gmd:metadataStandardName&gt;\n    &lt;gmd:metadataStandardVersion&gt;\n      &lt;gco:CharacterString&gt;\n        1.5-experimental|\n        MCP:BlueNet V1.5-experimental|\n        MCP:BlueNet V1.5\n      &lt;/gco:CharacterString&gt;\n    &lt;/gmd:metadataStandardVersion&gt;\n  &lt;/elements&gt;\n&lt;/autodetect&gt;\n</code></pre> <p>Some other points about elements autodetect:</p> <ul> <li>multiple elements can be specified - eg. as in the above, both metadataStandardName and metadataStandardVersion have been specified - all must be match for the record to be recognized as belonging to this schema.</li> <li>multiple values for the elements can be specified. eg. as in the above, a match for gmd:metadataStandardVersion will be found for <code>1.5-experimental</code> OR <code>MCP:BlueNet V1.5-experimental</code> OR <code>MCP:BlueNet V1.5</code> - the vertical line or pipe character '|' is used to separate the options here.</li> <li>if the elements have a namespace then the namespace(s) should be specified on the autodetect element or somewhere in the schema-ident.xml document before the element in which they are used - eg. in the above there are there namespace declarations on the autodetect element so as not to clutter the content.</li> </ul> <p>3. Root element - root element of the document must match. An example use case is the one used for the eml-gbif schema. Documents belonging to this schema always have root element of eml:eml so the autodetect section for this schema is:</p> <pre><code>&lt;autodetect xmlns:eml=\"eml://ecoinformatics.org/eml-2.1.1\"&gt;\n    &lt;elements type=\"root\"&gt;\n        &lt;eml:eml/&gt;\n    &lt;/elements&gt;\n&lt;/autodetect&gt;\n</code></pre> <p>Some other points about root element autodetect:</p> <ul> <li>multiple elements can be specified - any element in the set that matches the root element of the record will trigger a match.</li> <li>if the elements have a namespace then the namespace(s) should be specified on the autodetect element or somewhere in the schema-ident.xml document before the element that uses them - eg. as in the above there is a namespace declaration on the autodetect element for clarity.</li> </ul> <p>4. Namespaces - Find one or more namespaces in the document. An example use case is the one used for the csw:Record schema. Records belonging to the csw:Record schema can have three possible root elements: csw:Record, csw:SummaryRecord and csw:BriefRecord, but instead of using a multiple element root autodetect, we could use the common csw namespace for autodetect as follows:</p> <pre><code>&lt;autodetect&gt;\n  &lt;namespaces xmlns:csw=\"http://www.opengis.net/cat/csw/2.0.2\"/&gt;\n&lt;/autodetect&gt;\n</code></pre> <p>Some other points about namespaces autodetect:</p> <ul> <li>multiple namespaces can be specified - all must be present for the record to be recognized as belonging to this schema.</li> <li>the prefix is ignored. A namespace match occurs if the namespace URI found in the record matches the namespace URI specified in the namespaces autodetect element.</li> </ul> <p>5. Default schema - This is the fail-safe provision for records that don't match any of the installed schemas. The value for the default schema is specified in the appHandler configuration of the <code>INSTALL_DIR/web/geonetwork/WEB-INF/config.xml</code> config file or it could be a default specified by the operation calling autodetect (eg. a value parsed from a user bulk loading some metadata records). For flexibility and accuracy reasons it is preferable that records be detected using the autodetect information of an installed schema. The default schema is just a 'catch all' method of assigning records to a specific schema. The config element in <code>INSTALL_DIR/web/geonetwork/WEB-INF/config.xml</code> looks like the following:</p> <pre><code>&lt;appHandler class=\"org.fao.geonet.Geonetwork\"&gt;\n    .....\n    &lt;param name=\"preferredSchema\" value=\"iso19139\" /&gt;\n    .....\n&lt;/appHandler&gt;\n</code></pre>"},{"location":"developer/schemaPlugins/#more-on-autodetect-evaluation","title":"More on autodetect evaluation","text":"<p>The rules for autodetect are evaluated as follows:</p> <pre><code>for-each autodetect rule type in ( 'attributes/namespaces', 'elements', \n                                   'namespaces', 'root element' )\n    for-each schema \n        if schema has autodetect rule type then \n            check rule for a match\n            if match add to list of previous matches\n        end if\n    end for-each\n\n    if more than one match throw 'SCHEMA RULE CONFLICT EXCEPTION'\n    if one match then set matched = first match and break loop\nend for-each\n\nif no match then \n  if namespaces of record and default schema overlap then \n        set match = default schema\n    else throw 'NO SCHEMA MATCHES EXCEPTION'\nend if\n\nreturn matched schema\n</code></pre> <p>As an example, suppose we have three schemas iso19139.mcp, iso19139.mcp-1.4 and iso19139.mcp-cmar with the following autodetect elements:</p> <p>iso19139.mcp-1.4:</p> <pre><code>&lt;autodetect xmlns:mcp=\"http://bluenet3.antcrc.utas.edu.au/mcp\" \n            xmlns:gmd=\"http://www.isotc211.org/2005/gmd\" \n            xmlns:gco=\"http://www.isotc211.org/2005/gco\"&gt;\n  &lt;elements&gt;\n    &lt;gmd:metadataStandardName&gt;\n      &lt;gco:CharacterString&gt;\n        Australian Marine Community Profile of ISO 19115:2005/19139\n      &lt;/gco:CharacterString&gt;\n    &lt;/gmd:metadataStandardName&gt;\n    &lt;gmd:metadataStandardVersion&gt;\n      &lt;gco:CharacterString&gt;MCP:BlueNet V1.4&lt;/gco:CharacterString&gt;\n    &lt;/gmd:metadataStandardVersion&gt;\n  &lt;/elements&gt;\n&lt;/autodetect&gt;\n</code></pre> <p>iso19139.mcp-cmar:</p> <pre><code>&lt;autodetect&gt;\n    &lt;attributes xmlns:mcp-cmar=\"http://www.marine.csiro.au/schemas/mcp-cmar\"&gt;\n&lt;/autodetect&gt;\n</code></pre> <p>iso19139.mcp:</p> <pre><code>&lt;autodetect xmlns:mcp=\"http://bluenet3.antcrc.utas.edu.au/mcp\"&gt;\n    &lt;elements type=\"root\"&gt;\n        &lt;mcp:MD_Metadata/&gt;\n    &lt;/elements&gt;\n&lt;/autodetect&gt;\n</code></pre> <p>A record going through autodetect processing (eg. on import) would be checked against:</p> <ul> <li>iso19139.mcp-cmar first as it has an 'attributes' rule</li> <li>then iso19139.mcp-1.4 as it has an 'elements' rules</li> <li>then finally against iso19139.mcp, as it has a 'root element' rule.</li> </ul> <p>The idea behind this processing algorithm is that base schemas will use a 'root element' rule (or the more difficult to control 'namespaces' rule) and profiles will use a finer or more specific rule such as 'attributes' or 'elements'.</p> <p>After setting up schema-ident.xml, our new GeoNetwork plugin schema for MCP contains:</p> <pre><code>schema-ident.xml\n</code></pre>"},{"location":"developer/schemaPlugins/#schema_conversions","title":"Creating the schema-conversions.xml file","text":"<p>This file describes the converters that can be applied to metadata records that belong to the schema. Each converter must be manually defined as a GeoNetwork (Jeeves) service that can be called to transform a particular metadata record to a different schema. The schema-conversions.xml file for the MCP is as follows:</p> <pre><code>&lt;conversions&gt;\n   &lt;converter name=\"xml_iso19139.mcp\" \n              nsUri=\"http://bluenet3.antcrc.utas.edu.au/mcp\"\n              schemaLocation=\"http://bluenet3.antcrc.utas.edu.au/mcp-1.5-experimental/schema.xsd\"\n              xslt=\"xml_iso19139.mcp.xsl\"/&gt;\n   &lt;converter name=\"xml_iso19139.mcp-1.4\"\n              nsUri=\"http://bluenet3.antcrc.utas.edu.au/mcp\"\n              schemaLocation=\"http://bluenet3.antcrc.utas.edu.au/mcp/schema.xsd\" \n              xslt=\"xml_iso19139.mcp-1.4.xsl\"/&gt;\n   &lt;converter name=\"xml_iso19139.mcpTooai_dc\"\n              nsUri=\"http://www.openarchives.org/OAI/2.0/\"\n              schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc.xsd\"\n              xslt=\"oai_dc.xsl\"/&gt;\n   &lt;converter name=\"xml_iso19139.mcpTorifcs\"\n              nsUri=\"http://ands.org.au/standards/rif-cs/registryObjects\"\n              schemaLocation=\"http://services.ands.org.au/home/orca/schemata/registryObjects.xsd\"\n              xslt=\"rif.xsl\"/&gt;\n&lt;/conversions&gt;\n</code></pre> <p>Each converter has the following attributes:</p> <ul> <li>name - the name of the converter. This is the service name of the GeoNetwork (Jeeves) service and should be unique (prefixing the service name with xml is a good way to make this name unique). <li>nsUri - the primary namespace of the schema produced by the converter. eg. xml_iso19139.mcpTorifcs transforms metadata records from iso19139.mcp to the RIFCS schema. Metadata records in the RIFCS metadata schema have primary namespace URI of http://ands.org.au/standards/rif-cs/registryObjects.</li> <li>schemaLocation - the location (URL) of the XML schema definition (XSD) corresponding to the nsURI.</li> <li>xslt - the name of the XSLT that actually carries out the transformation. This XSLT should be located in the convert subdirectory of the schema plugin.</li> <p>After setting up schema-conversions.xml, our new GeoNetwork plugin schema for MCP contains:</p> <pre><code>schema-conversions.xml  schema-ident.xml\n</code></pre>"},{"location":"developer/schemaPlugins/#schema_and_schema_xsd","title":"Creating the schema directory and schema.xsd file","text":"<p>The schema and schema.xsd components are used by the GeoNetwork editor and validation functions.</p> <p>GeoNetwork's editor uses the XSDs to build a form that will not only order the elements in a metadata document correctly but also offer options to create any elements that are not in the metadata document. The idea behind this approach is twofold. Firstly, the editor can use the XML schema definition rules to help the user avoid creating a document that is structurally incorrect eg. missing mandatory elements or elements not ordered correctly. Secondly, the same editor code can be used on any XML metadata document with a defined XSD.</p> <p>If you are defining your own metadata schema then you can create an XML schema document using the XSD language. The elements of the language can be found online at http://www.w3schools.com/schema/ or you can refer to a textbook such as Priscilla Walmsley's Definitive XML Schema (Prentice Hall, 2002). GeoNetwork's XML schema parsing code understands almost all of the XSD language with the exception of redefine, any and anyAttribute (although the last two can be handled under special circumstances).</p> <p>In the case of the Marine Commuity Profile, we are basically defining a number of extensions to the base standard ISO19115/19139. These extensions are defined using the XSD extension mechanism on the types defined in ISO19139. The following snippet shows how the Marine Community Profile extends the gmd:MD_Metadata element to add a new element called revisionDate:</p> <pre><code>&lt;xs:schema targetNamespace=\"http://bluenet3.antcrc.utas.edu.au/mcp\" \n           xmlns:mcp=\"http://bluenet3.antcrc.utas.edu.au/mcp\" .....&gt;\n\n....\n\n&lt;xs:element name=\"MD_Metadata\" substitutionGroup=\"gmd:MD_Metadata\" \n                               type=\"mcp:MD_Metadata_Type\"/&gt;\n\n&lt;xs:complexType name=\"MD_Metadata_Type\"&gt;\n  &lt;xs:annotation&gt;\n    &lt;xs:documentation&gt;\n     Extends the metadata element to include revisionDate\n    &lt;/xs:documentation&gt;\n  &lt;/xs:annotation&gt;\n  &lt;xs:complexContent&gt;\n    &lt;xs:extension base=\"gmd:MD_Metadata_Type\"&gt;\n      &lt;xs:sequence&gt;\n        &lt;xs:element name=\"revisionDate\" type=\"gco:Date_PropertyType\" \n                    minOccurs=\"0\"/&gt;\n      &lt;/xs:sequence&gt;\n      &lt;xs:attribute ref=\"gco:isoType\" use=\"required\" \n                    fixed=\"gmd:MD_Metadata\"/&gt;\n    &lt;/xs:extension&gt;\n  &lt;/xs:complexContent&gt;\n&lt;/xs:complexType&gt;\n\n&lt;/xs:schema&gt;\n</code></pre> <p>In short, we have defined a new element mcp:MD_Metadata with type mcp:MD_Metadata_Type, which is an extension of gmd:MD_Metadata_Type. By extension, we mean that the new type includes all of the elements of the old type plus one new element, mcp:revisionDate. A mandatory attribute (gco:isoType) is also attached to mcp:MD_Metadata with a fixed value set to the name of the element that we extended (gmd:MD_Metadata).</p> <p>By defining the profile in this way, it is not necessary to modify the underlying ISO19139 schemas. So the schema directory for the MCP essentially consists of the extensions plus the base ISO19139 schemas. One possible directory structure is as follows:</p> <pre><code>extensions  gco  gmd  gml  gmx  gsr  gss  gts  resources  srv  xlink\n</code></pre> <p>The extensions directory contains a single file mcpExtensions.xsd, which imports the gmd namespace. The remaining directories are the ISO19139 base schemas.</p> <p>The schema.xsd file, which is the file GeoNetwork looks for, will import the mcpExtensions.xsd file and any other namespaces not imported as part of the base ISO19139 schema. It is shown as follows:</p> <pre><code>&lt;xs:schema targetNamespace=\"http://bluenet3.antcrc.utas.edu.au/mcp\" \n           elementFormDefault=\"qualified\"\n        xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" \n        xmlns:mcp=\"http://bluenet3.antcrc.utas.edu.au/mcp\"\n        xmlns:gmd=\"http://www.isotc211.org/2005/gmd\"\n        xmlns:gmx=\"http://www.isotc211.org/2005/gmx\"\n        xmlns:srv=\"http://www.isotc211.org/2005/srv\"&gt;\n  &lt;xs:include schemaLocation=\"schema/extensions/mcpExtensions.xsd\"/&gt;\n  &lt;!-- this is a logical place to include any additional schemas that are \n       related to ISO19139 including ISO19119 --&gt;\n  &lt;xs:import namespace=\"http://www.isotc211.org/2005/srv\" \n             schemaLocation=\"schema/srv/srv.xsd\"/&gt;\n  &lt;xs:import namespace=\"http://www.isotc211.org/2005/gmx\" \n             schemaLocation=\"schema/gmx/gmx.xsd\"/&gt;\n&lt;/xs:schema&gt;\n</code></pre> <p>At this stage, our new GeoNetwork plugin schema for MCP contains:</p> <pre><code>schema-conversions.xml  schema-ident.xml  schema.xsd  schema\n</code></pre>"},{"location":"developer/schemaPlugins/#creating-the-extract-xslts","title":"Creating the extract-... XSLTs","text":"<p>GeoNetwork needs to extract certain information from a metadata record and translate it into a common, simplified XML structure that is independent of the metadata schema. Rather than do this with Java coded XPaths, XSLTs are used to process the XML and return the common, simplified XML structure.</p> <p>The three xslts we'll create are:</p> <ul> <li>extract-date-modified.xsl - this XSLT processes the metadata record and extracts the date the metadata record was last modified. For the MCP, this information is held in the mcp:revisionDate element which is a child of mcp:MD_Metadata. The easiest way to create this for MCP is to copy extract-date-modified.xsl from the iso19139 schema and modify it to suit the MCP namespace and to use mcp:revisionDate in place of gmd:dateStamp.</li> <li>extract-gml.xsl - this XSLT processes the metadata record and extracts the spatial extent as a gml GeometryCollection element. The gml is passed to geotools for insertion into the spatial index (either a shapefile or a spatial database). For ISO19115/19139 and profiles, this task is quite easy because spatial extents (apart from the bounding box) are encoded as gml in the metadata record. Again, the easiest way to create this for the MCP is to copy extract-gml.xsd from the iso19139 schema ad modify it to suit the MCP namespace.</li> </ul> <p>An example bounding box fragment from an MCP metadata record is:</p> <pre><code>&lt;gmd:extent&gt;\n  &lt;gmd:EX_Extent&gt;\n    &lt;gmd:geographicElement&gt;\n      &lt;gmd:EX_GeographicBoundingBox&gt;\n        &lt;gmd:westBoundLongitude&gt;\n          &lt;gco:Decimal&gt;112.9&lt;/gco:Decimal&gt;\n        &lt;/gmd:westBoundLongitude&gt;\n        &lt;gmd:eastBoundLongitude&gt;\n          &lt;gco:Decimal&gt;153.64&lt;/gco:Decimal&gt;\n        &lt;/gmd:eastBoundLongitude&gt;\n        &lt;gmd:southBoundLatitude&gt;\n          &lt;gco:Decimal&gt;-43.8&lt;/gco:Decimal&gt;\n        &lt;/gmd:southBoundLatitude&gt;\n        &lt;gmd:northBoundLatitude&gt;\n          &lt;gco:Decimal&gt;-9.0&lt;/gco:Decimal&gt;\n        &lt;/gmd:northBoundLatitude&gt;\n      &lt;/gmd:EX_GeographicBoundingBox&gt;\n    &lt;/gmd:geographicElement&gt;\n  &lt;/gmd:EX_Extent&gt;\n&lt;/gmd:extent&gt;\n</code></pre> <p>Running extract-gml.xsl on the metadata record that contains this XML will produce:</p> <pre><code>&lt;gml:GeometryCollection xmlns:gml=\"http://www.opengis.net/gml\"&gt;\n  &lt;gml:Polygon&gt;\n    &lt;gml:exterior&gt;\n      &lt;gml:LinearRing&gt;\n        &lt;gml:coordinates&gt;\n          112.9,-9.0, 153.64,-9.0, 153.64,-43.8, 112.9,-43.8, 112.9,-9.0\n        &lt;/gml:coordinates&gt;\n      &lt;/gml:LinearRing&gt;\n    &lt;/gml:exterior&gt;\n  &lt;/gml:Polygon&gt;\n&lt;/gml:GeometryCollection&gt;\n</code></pre> <p>If there is more than one extent in the metadata record, then they should also appear in this gml:GeometryCollection element.</p> <p>To find out more about gml, see Lake, Burggraf, Trninic and Rae, \"GML Geography Mark-Up Language, Foundation for the Geo-Web\", Wiley, 2004.</p> <p>Finally, a note on projections. It is possible to have bounding polygons in an MCP record in a projection other than EPSG:4326. GeoNetwork transforms all projections known to GeoTools (and encoded in a form that GeoTools understands) to EPSG:4326 when writing the spatial extents to the shapefile or spatial database.</p> <ul> <li>extract-uuid.xsl - this XSLT processes the metadata record and extracts the identifier for the record. For the MCP and base ISO standard, this information is held in the gmd:fileIdentifier element which is a child of mcp:MD_Metadata.</li> </ul> <p>These xslts can be tested by running them on a metadata record from the schema. You should use the saxon xslt processor. For example:</p> <pre><code>java -jar INSTALL_DIR/web/geonetwork/WEB-INF/lib/saxon-9.1.0.8b-patch.jar \n     -s testmcp.xml -o output.xml extract-gml.xsl\n</code></pre> <p>At this stage, our new GeoNetwork plugin schema for MCP contains:</p> <pre><code>extract-date-modified.xsl  extract-gml.xsd   extract-uuid.xsl\nschema-conversions.xml  schema-ident.xml  schema.xsd  schema\n</code></pre>"},{"location":"developer/schemaPlugins/#creating-the-localized-strings-in-the-loc-directory","title":"Creating the localized strings in the loc directory","text":"<p>The loc directory contains localized strings specific to this schema, arranged by language abbreviation in sub-directories.</p> <p>You should provide localized strings in whatever languages you expect your schema to be used in.</p> <p>Localized strings for this schema can be used in the presentation xslts and schematron error messages. For the presentation xslts:</p> <ul> <li>codelists for controlled vocabulary fields should be in loc//codelists.xml eg. <code>loc/eng/codelists.xml</code> <li>label strings that replace XML element names with more intelligible/alternative phrases and rollover help strings should be in loc//labels.xml eg. <code>loc/eng/labels.xml</code>. <li>all other localized strings should be in loc//strings.xml eg. <code>loc/eng/strings.xml</code> <p>Note that because the MCP is a profile of ISO19115/19139 and we have followed the GeoNetwork naming convention for profiles, we need only include the labels and codelists that are specific to the MCP or that we want to override. Other labels and codelists will be retrieved from the base schema iso19139.</p>"},{"location":"developer/schemaPlugins/#more-on-codelistsxml","title":"More on codelists.xml","text":"<p>Typically codelists are generated from enumerated lists in the metadata schema XSDs such as the following from http://www.isotc211.org/2005/gmd/identification.xsd for gmd:MD_TopicCategoryCode in the iso19139 schema:</p> <pre><code>&lt;xs:element name=\"MD_TopicCategoryCode\" type=\"gmd:MD_TopicCategoryCode_Type\"/&gt;\n\n&lt;xs:simpleType name=\"MD_TopicCategoryCode_Type\"&gt;\n   &lt;xs:restriction base=\"xs:string\"&gt;\n     &lt;xs:enumeration value=\"farming\"/&gt;\n     &lt;xs:enumeration value=\"biota\"/&gt;\n     &lt;xs:enumeration value=\"boundaries\"/&gt;\n     &lt;xs:enumeration value=\"climatologyMeteorologyAtmosphere\"/&gt;\n     &lt;xs:enumeration value=\"economy\"/&gt;\n     &lt;xs:enumeration value=\"elevation\"/&gt;\n     &lt;xs:enumeration value=\"environment\"/&gt;\n     &lt;xs:enumeration value=\"geoscientificInformation\"/&gt;\n     &lt;xs:enumeration value=\"health\"/&gt;\n     &lt;xs:enumeration value=\"imageryBaseMapsEarthCover\"/&gt;\n     &lt;xs:enumeration value=\"intelligenceMilitary\"/&gt;\n     &lt;xs:enumeration value=\"inlandWaters\"/&gt;\n     &lt;xs:enumeration value=\"location\"/&gt;\n     &lt;xs:enumeration value=\"oceans\"/&gt;\n     &lt;xs:enumeration value=\"planningCadastre\"/&gt;\n     &lt;xs:enumeration value=\"society\"/&gt;\n     &lt;xs:enumeration value=\"structure\"/&gt;\n     &lt;xs:enumeration value=\"transportation\"/&gt;\n     &lt;xs:enumeration value=\"utilitiesCommunication\"/&gt;\n   &lt;/xs:restriction&gt;\n &lt;/xs:simpleType&gt;\n</code></pre> <p>The following is part of the codelists.xml entry manually created for this element:</p> <pre><code>&lt;codelist name=\"gmd:MD_TopicCategoryCode\"&gt;\n  &lt;entry&gt;\n    &lt;code&gt;farming&lt;/code&gt;\n    &lt;label&gt;Farming&lt;/label&gt;\n    &lt;description&gt;Rearing of animals and/or cultivation of plants. Examples: agriculture,\n      irrigation, aquaculture, plantations, herding, pests and diseases affecting crops and\n      livestock&lt;/description&gt;\n  &lt;/entry&gt;\n  &lt;!-- - - - - - - - - - - - - - - - - - - - - - - - - --&gt;\n  &lt;entry&gt;\n    &lt;code&gt;biota&lt;/code&gt;\n    &lt;label&gt;Biota&lt;/label&gt;\n    &lt;description&gt;Flora and/or fauna in natural environment. Examples: wildlife, vegetation,\n      biological sciences, ecology, wilderness, sealife, wetlands, habitat&lt;/description&gt;\n  &lt;/entry&gt;\n  &lt;!-- - - - - - - - - - - - - - - - - - - - - - - - - --&gt;\n  &lt;entry&gt;\n    &lt;code&gt;boundaries&lt;/code&gt;\n    &lt;label&gt;Boundaries&lt;/label&gt;\n    &lt;description&gt;Legal land descriptions. Examples: political and administrative\n    boundaries&lt;/description&gt;\n  &lt;/entry&gt;\n\n  .....\n\n&lt;/codelist&gt;\n</code></pre> <p>The codelists.xml file maps the enumerated values from the XSD to a localized label and a description via the code element.</p> <p>A localized copy of codelists.xml is made available on an XPath to the presentation XSLTs eg. /root/gui/schemas/iso19139/codelist for the iso19139 schema.</p> <p>The XSLT metadata.xsl which contains templates used by all metadata schema presentation XSLTs, handles the creation of a select list/drop down menu in the editor and display of the code and description in the metadata viewer.</p> <p>The iso19139 schema has additional codelists that are managed external to the XSDs in catalog/vocabulary files such as http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml These have also been added to the codelists.xml file so that they can be localized, overridden in profiles and include an extended description to provide more useful information when viewing the metadata record.</p> <p>The iso19139 schema has additional templates in its presentation xslts to handlese codelists because they are specific to that schema. These are discussed in the section on presentation XSLTs later in this manual.</p>"},{"location":"developer/schemaPlugins/#more-on-labelsxml","title":"More on labels.xml","text":"<p>A localized copy of labels.xml is made available on an XPath to the presentation XSLTs eg. /root/gui/schemas/iso19139/labels for the iso19139 schema.</p> <p>The <code>labels.xml</code> file can also be used to provide helper values in the form of a drop down/select list for free text fields. As an example:</p> <pre><code>&lt;element name=\"gmd:credit\" id=\"27.0\"&gt;\n  &lt;label&gt;Credit&lt;/label&gt;\n  &lt;description&gt;Recognition of those who contributed to the resource(s)&lt;/description&gt;\n  &lt;helper&gt;\n    &lt;option value=\"University of Tasmania\"&gt;UTAS&lt;/option&gt;\n    &lt;option value=\"University of Queensland\"&gt;UQ&lt;/option&gt;\n  &lt;/helper&gt;\n&lt;/element&gt;\n</code></pre> <p>This would result in the Editor (through the XSLT metadata.xsl) displaying the credit field with these helper options listed beside it in a drop down/select menu something like the following:</p> <p></p>"},{"location":"developer/schemaPlugins/#more-on-stringsxml","title":"More on strings.xml","text":"<p>A localized copy of <code>strings.xml</code> is made available on an XPath to the presentation XSLTs eg. /root/gui/schemas/iso19139/strings for the iso19139 schema.</p> <p>After adding the localized strings, our new GeoNetwork plugin schema for MCP contains:</p> <pre><code>extract-date-modified.xsl  extract-gml.xsd  extract-uuid.xsl \nloc  present  schema-conversions.xml  schema-ident.xml  schema.xsd  \nschema\n</code></pre>"},{"location":"developer/schemaPlugins/#creating-the-presentations-xslts-in-the-present-directory","title":"Creating the presentations XSLTs in the present directory","text":"<p>Each metadata schema should contain XSLTs that display and possibly edit metadata records that belong to the schema. These XSLTs are held in the <code>present</code> directory.</p> <p>To be be used in the XSLT include/import hierarchy these XSLTs must follow a naming convention: metadata-.xsl. So for example, the presentation xslt for the iso19139 schema is <code>metadata-iso19139.xsl</code>. For the MCP, since our schema name is iso19139.mcp, the presentation XSLT would be called <code>metadata-iso19193.mcp.xsl</code>. <p>Any XSLTs included by the presentation XSLT should also be in the present directory (this is a convention for clarity - it is not mandatory as include/import URLs can be mapped in the oasis-catalog.xml for the schema to other locations).</p> <p>There are certain XSLT templates that the presentation XSLT must have:</p> <ul> <li>the main template, which must be called: metadata-. For the MCP profile of iso19139 the main template would look like the following (taken from metadata-iso19139.mcp.xsl): <p><pre><code>&lt;!-- --&gt;\n</code></pre> <pre><code>  &lt;xsl:apply-templates mode=\"iso19139\" select=\".\" &gt;\n    &lt;xsl:with-param name=\"schema\" select=\"$schema\"/&gt;\n    &lt;xsl:with-param name=\"edit\"   select=\"$edit\"/&gt;\n    &lt;xsl:with-param name=\"embedded\" select=\"$embedded\" /&gt;\n  &lt;/xsl:apply-templates&gt;\n&lt;/xsl:template&gt;\n</code></pre> <p>Analyzing this template:</p> <ol> <li>The name=\"metadata-iso19139.mcp\" is used by the main element processing template in metadata.xsl: elementEP. The main metadata services, show and edit, end up calling metadata-show.xsl and metadata-edit.xsl respectively with the metadata record passed from the Java service. Both these XSLTs, process the metadata record by applying the elementEP template from metadata.xsl to the root element. The elementEP template calls this main schema template using the schema name iso19139.mcp.</li> <li> <p>The job of this main template is set to process all the elements of the metadata record using templates declared with a mode name that matches the schema name or the name of the base schema (in this case iso19139). This modal processing is to ensure that only templates intended to process metadata elements from this schema or the base schema are applied. The reason for this is that almost all profiles change or add a small number of elements to those in the base schema. So most of the metadata elements in a profile can be processed in the mode of the base schema. We'll see later in this section how to override processing of an element in the base schema.</p> </li> <li> <p>a completeTab template, which must be called: CompleteTab. This template will display all tabs, apart from the 'default' (or simple mode) and the 'XML View' tabs, in the left hand frame of the editor/viewer screen. Here is an example for the MCP: <p><pre><code>&lt;!-- --&gt;\n</code></pre> <pre><code>  &lt;xsl:call-template name=\"displayTab\"&gt; &lt;!-- non existent tab - by profile --&gt;\n    &lt;xsl:with-param name=\"tab\"     select=\"''\"/&gt;\n    &lt;xsl:with-param name=\"text\"    select=\"/root/gui/strings/byGroup\"/&gt;\n    &lt;xsl:with-param name=\"tabLink\" select=\"''\"/&gt;\n  &lt;/xsl:call-template&gt;\n\n  &lt;xsl:call-template name=\"displayTab\"&gt;\n    &lt;xsl:with-param name=\"tab\"     select=\"'mcpMinimum'\"/&gt;\n    &lt;xsl:with-param name=\"text\"    select=\"/root/gui/strings/iso19139.mcp/mcpMinimum\"/&gt;\n    &lt;xsl:with-param name=\"indent\"  select=\"'&amp;#xA0;&amp;#xA0;&amp;#xA0;'\"/&gt;\n    &lt;xsl:with-param name=\"tabLink\" select=\"$tabLink\"/&gt;\n  &lt;/xsl:call-template&gt;\n\n  &lt;xsl:call-template name=\"displayTab\"&gt;\n    &lt;xsl:with-param name=\"tab\"     select=\"'mcpCore'\"/&gt;\n    &lt;xsl:with-param name=\"text\"    select=\"/root/gui/strings/iso19139.mcp/mcpCore\"/&gt;\n    &lt;xsl:with-param name=\"indent\"  select=\"'&amp;#xA0;&amp;#xA0;&amp;#xA0;'\"/&gt;\n    &lt;xsl:with-param name=\"tabLink\" select=\"$tabLink\"/&gt;\n  &lt;/xsl:call-template&gt;\n\n  &lt;xsl:call-template name=\"displayTab\"&gt;\n    &lt;xsl:with-param name=\"tab\"     select=\"'complete'\"/&gt;\n    &lt;xsl:with-param name=\"text\"    select=\"/root/gui/strings/iso19139.mcp/mcpAll\"/&gt;\n    &lt;xsl:with-param name=\"indent\"  select=\"'&amp;#xA0;&amp;#xA0;&amp;#xA0;'\"/&gt;\n    &lt;xsl:with-param name=\"tabLink\" select=\"$tabLink\"/&gt;\n  &lt;/xsl:call-template&gt;\n\n  ...... (same as for iso19139CompleteTab in \n GEONETWORK_DATA_DIR/schema_plugins/iso19139/present/\n metadata-iso19139.xsl) ......\n\n&lt;/xsl:template&gt;\n</code></pre> <p>This template is called by the template named \"tab\" (which also adds the \"default\" and \"XML View\" tabs) in <code>INSTALL_DIR/web/geonetwork/xsl/metadata-tab-utils.xsl</code> using the schema name. That XSLT also has the code for the \"displayTab\" template.</p> <p>'mcpMinimum', 'mcpCore', 'complete' etc are the names of the tabs. The name of the current or active tab is stored in the global variable \"currTab\" available to all presentation XSLTs. Logic to decide what to display when a particular tab is active should be contained in the root element processing tab.</p> <ul> <li>a root element processing tab. This tab should match on the root element of the metadata record. For example, for the iso19139 schema:</li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> <pre><code>  &lt;xsl:choose&gt;\n\n  &lt;!-- metadata tab --&gt;\n  &lt;xsl:when test=\"$currTab='metadata'\"&gt;\n    &lt;xsl:call-template name=\"iso19139Metadata\"&gt;\n      &lt;xsl:with-param name=\"schema\" select=\"$schema\"/&gt;\n      &lt;xsl:with-param name=\"edit\"   select=\"$edit\"/&gt;\n    &lt;/xsl:call-template&gt;\n  &lt;/xsl:when&gt;\n\n  &lt;!-- identification tab --&gt;\n  &lt;xsl:when test=\"$currTab='identification'\"&gt;\n    &lt;xsl:apply-templates mode=\"elementEP\" select=\"gmd:identificationInfo|geonet:child[string(@name)='identificationInfo']\"&gt;\n      &lt;xsl:with-param name=\"schema\" select=\"$schema\"/&gt;\n      &lt;xsl:with-param name=\"edit\"   select=\"$edit\"/&gt;\n    &lt;/xsl:apply-templates&gt;\n  &lt;/xsl:when&gt;\n\n  .........\n\n&lt;/xsl:template&gt;\n</code></pre> <p>This template is basically a very long \"choose\" statement with \"when\" clauses that test the value of the currently defined tab (in global variable currTab). Each \"when\" clause will display the set of metadata elements that correspond to the tab definition using \"elementEP\" directly (as in the \"when\" clause for the 'identification' tab above) or via a named template (as in the 'metadata' tab above). For the MCP our template is similar to the one above for iso19139, except that the match would be on \"mcp:MD_Metadata\" (and the processing mode may differ - see the section 'An alternative XSLT design for profiles' below for more details).</p> <ul> <li>a brief template, which must be called: Brief. This template processes the metadata record and extracts from it a format neutral summary of the metadata for purposes such as displaying the search results. Here is an example for the eml-gbif schema (because it is fairly short!): <p><pre><code>&lt;!-- --&gt;\n</code></pre> <pre><code>    &lt;xsl:for-each select=\"dataset/keywordSet/keyword\"&gt;\n      &lt;xsl:copy-of select=\".\"/&gt;\n    &lt;/xsl:for-each&gt;\n\n    &lt;geoBox&gt;\n        &lt;westBL&gt;&lt;xsl:value-of select=\"dataset/coverage/geographicCoverage/boundingCoordinates/westBoundingCoordinate\"/&gt;&lt;/westBL&gt;\n        &lt;eastBL&gt;&lt;xsl:value-of select=\"dataset/coverage/geographicCoverage/boundingCoordinates/eastBoundingCoordinate\"/&gt;&lt;/eastBL&gt;\n        &lt;southBL&gt;&lt;xsl:value-of select=\"dataset/coverage/geographicCoverage/boundingCoordinates/southBoundingCoordinate\"/&gt;&lt;/southBL&gt;\n        &lt;northBL&gt;&lt;xsl:value-of select=\"dataset/coverage/geographicCoverage/boundingCoordinates/northBoundingCoordinate\"/&gt;&lt;/northBL&gt;\n    &lt;/geoBox&gt;\n    &lt;xsl:copy-of select=\"geonet:info\"/&gt;\n  &lt;/metadata&gt;\n &lt;/xsl:for-each&gt;\n&lt;/xsl:template&gt;\n</code></pre> <p>Analyzing this template:</p> <ol> <li>The template matches on an element eml-gbifBrief, created by the mode=\"brief\" template in metadata-utils.xsl. The metadata record will be the first child in the /metadata XPath.</li> <li>Then process metadata elements to produce a flat XML structure that is used by search-results-xhtml.xsl to display a summary of the metadata record found by a search.</li> </ol> <p>Once again, for profiles of an existing schema, it makes sense to use a slighlty different approach so that the profile need not duplicate templates. Here is an example from metadata-iso19139.mcp.xsl:</p> <pre><code>&lt;xsl:template match=\"iso19139.mcpBrief\"&gt;\n  &lt;metadata&gt;\n    &lt;xsl:for-each select=\"/metadata/*[1]\"&gt;\n      &lt;!-- call iso19139 brief --&gt;\n      &lt;xsl:call-template name=\"iso19139-brief\"/&gt;\n      &lt;!-- now brief elements for mcp specific elements --&gt;\n      &lt;xsl:call-template name=\"iso19139.mcp-brief\"/&gt;\n    &lt;/xsl:for-each&gt;\n  &lt;/metadata&gt;\n&lt;/xsl:template&gt;\n</code></pre> <p>This template splits the processing between the base iso19139 schema and a brief template that handles elements specific to the profile. This assumes that:</p> <ol> <li>The base schema has separated the  element from the remainder of its brief processing so that it can be called by profiles <li> <p>The profile includes links to equivalent elements that can be used by the base schema to process common elements eg. for ISO19139, elements in the profile have gco:isoType attributes that give the name of the base element and can be used in XPath matches such as \"gmd:MD_DataIdentification|*[@gco:isoType='gmd:MD_DataIdentification']\".</p> </li> <li> <p>templates that match on elements specific to the schema. Here is an example from the eml-gbif schema:</p> </li> <p><pre><code>&lt;!-- --&gt;\n</code></pre> </p> <pre><code>&lt;xsl:template mode=\"eml-gbif\" match=\"keywordSet\"&gt;\n  &lt;xsl:param name=\"schema\"/&gt;\n  &lt;xsl:param name=\"edit\"/&gt;\n\n  &lt;xsl:choose&gt;\n    &lt;xsl:when test=\"$edit=false()\"&gt;\n      &lt;xsl:variable name=\"keyword\"&gt;\n        &lt;xsl:for-each select=\"keyword\"&gt;\n          &lt;xsl:if test=\"position() &amp;gt; 1\"&gt;,  &lt;/xsl:if&gt;\n          &lt;xsl:value-of select=\".\"/&gt;\n        &lt;/xsl:for-each&gt;\n        &lt;xsl:if test=\"keywordThesaurus\"&gt;\n          &lt;xsl:text&gt; (&lt;/xsl:text&gt;\n          &lt;xsl:value-of select=\"keywordThesaurus\"/&gt;\n          &lt;xsl:text&gt;)&lt;/xsl:text&gt;\n        &lt;/xsl:if&gt;\n      &lt;/xsl:variable&gt;\n      &lt;xsl:apply-templates mode=\"simpleElement\" select=\".\"&gt;\n        &lt;xsl:with-param name=\"schema\" select=\"$schema\"/&gt;\n        &lt;xsl:with-param name=\"edit\"   select=\"$edit\"/&gt;\n        &lt;xsl:with-param name=\"text\"    select=\"$keyword\"/&gt;\n      &lt;/xsl:apply-templates&gt;\n    &lt;/xsl:when&gt;\n    &lt;xsl:otherwise&gt;\n      &lt;xsl:apply-templates mode=\"complexElement\" select=\".\"&gt;\n        &lt;xsl:with-param name=\"schema\" select=\"$schema\"/&gt;\n        &lt;xsl:with-param name=\"edit\"   select=\"$edit\"/&gt;\n      &lt;/xsl:apply-templates&gt;\n    &lt;/xsl:otherwise&gt;\n  &lt;/xsl:choose&gt;\n&lt;/xsl:template&gt;\n</code></pre> <p>Analyzing this template:</p> <ol> <li>In view mode the individual keywords from the set are concatenated into a comma separated string with the name of the thesaurus in brackets at the end.</li> <li>In edit mode, the keywordSet is handled as a complex element ie. the user can add individual keyword elements with content and a single thesaurus name.</li> <li>This is an example of the type of processing that can be done on an element in a metadata record.</li> </ol> <p>For profiles, templates for elements can be defined in the same way except that the template will process in the mode of the base schema. Here is an example showing the first few lines of a template for processing the mcp:revisionDate element:</p> <pre><code>&lt;xsl:template mode=\"iso19139\" match=\"mcp:revisionDate\"&gt;\n   &lt;xsl:param name=\"schema\"/&gt;\n   &lt;xsl:param name=\"edit\"/&gt;\n\n   &lt;xsl:choose&gt;\n     &lt;xsl:when test=\"$edit=true()\"&gt;\n       &lt;xsl:apply-templates mode=\"simpleElement\" select=\".\"&gt;\n         &lt;xsl:with-param name=\"schema\"  select=\"$schema\"/&gt;\n         &lt;xsl:with-param name=\"edit\"   select=\"$edit\"/&gt;\n\n   ......\n</code></pre> <p>If a template for a profile is intended to override a template in the base schema, then the template can be defined in the presentation XSLT for the profile with a priority attribute set to a high number and an XPath condition that ensures the template is processed for the profile only. For example in the MCP, we can override the handling of gmd:EX_GeographicBoundingBox in metadata-iso19139.xsl by defining a template in metadata-iso19139.mcp.xsl as follows:</p> <pre><code>&lt;xsl:template mode=\"iso19139\" match=\"gmd:EX_GeographicBoundingBox[starts-with(//geonet:info/schema,'iso19139.mcp')]\" priority=\"3\"&gt;\n\n......\n</code></pre> <p>Finally, a profile may also extend some of the existing codelists in the base schema. These extended codelists should be held in a localized codelists.xml. As an example, in iso19139 these codelists are often attached to elements like the following:</p> <pre><code>&lt;gmd:role&gt;\n  &lt;gmd:CI_RoleCode codeList=\"http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#CI_RoleCode\" codeListValue=\"custodian\"&gt;custodian&lt;/gmd:CI_RoleCode&gt;\n&lt;/gmd:role&gt;\n</code></pre> <p>Templates for handling these elements are in the iso19139 presentation XSLT <code>GEONETWORK_DATA_DIR/schema_plugins/iso19139/present/metadata-iso19139.xsl</code>. These templates use the name of the element (eg. gmd:CI_RoleCode) and the codelist XPath (eg. /root/gui/schemas/iso19139/codelists) to build select list/drop down menus when editing and to display a full description when viewing. See templates near the template named 'iso19139Codelist'. These templates can handle the extended codelists for any profile because they:</p> <ul> <li>match on any element that has a child element with attribute codeList</li> <li>use the schema name in the codelists XPath</li> <li>fall back to the base iso19139 schema if the profile codelist doesn't have the required codelist</li> </ul> <p>However, if you don't need localized codelists, it is often easier and more direct to extract codelists directly from the <code>gmxCodelists.xml</code> file. This is in fact the solution that has been adopted for the MCP. The <code>gmxCodelists.xml</code> file is included in the presentation xslt for the MCP using a statement like:</p> <pre><code>&lt;xsl:variable name=\"codelistsmcp\" \n              select=\"document('../schema/resources/Codelist/gmxCodelists.xml')\"/&gt;\n</code></pre> <p>Check the codelist handling templates in <code>metadata-iso19139.mcp.xsl</code> to see how this works.</p>"},{"location":"developer/schemaPlugins/#an-alternative-xslt-design-for-profiles","title":"An alternative XSLT design for profiles","text":"<p>In all powerful languages there will be more than one way to achieve a particular goal. This alternative XSLT design is for processing profiles. The idea behind the alternative is based on the following observations about the GeoNetwork XSLTs:</p> <ol> <li>All elements are initially processed by apply-templates in mode \"elementEP\".</li> <li>The template \"elementEP\" (see <code>INSTALL_DIR/web/geonetwork/xsl/metadata.xsl</code>) eventually calls the main template of the schema/profile.</li> <li>The main template can initially process the element in a mode particular to the profile and if this is not successful (ie. no template matches and thus no HTML elements are returned), process the element in the mode of the base schema.</li> </ol> <p>The advantage of this design is that overriding a template for an element in the base schema does not need the priority attribute or an XPath condition check on the schema name.</p> <p>Here is an example for the MCP (iso19139.mcp) with base schema iso19139:</p> <ul> <li>the main template, which must be called: metadata-iso19139.mcp.xsl:</li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> <pre><code>    &lt;!-- process in profile mode first --&gt;\n    &lt;xsl:variable name=\"mcpElements\"&gt;\n      &lt;xsl:apply-templates mode=\"iso19139.mcp\" select=\".\" &gt;\n        &lt;xsl:with-param name=\"schema\" select=\"$schema\"/&gt;\n        &lt;xsl:with-param name=\"edit\"   select=\"$edit\"/&gt;\n        &lt;xsl:with-param name=\"embedded\" select=\"$embedded\" /&gt;\n      &lt;/xsl:apply-templates&gt;\n    &lt;/xsl:variable&gt;\n\n    &lt;xsl:choose&gt;\n\n      &lt;!-- if we got a match in profile mode then show it --&gt;\n      &lt;xsl:when test=\"count($mcpElements/*)&gt;0\"&gt;\n        &lt;xsl:copy-of select=\"$mcpElements\"/&gt;\n      &lt;/xsl:when&gt;\n\n      &lt;!-- otherwise process in base iso19139 mode --&gt;\n      &lt;xsl:otherwise&gt;\n        &lt;xsl:apply-templates mode=\"iso19139\" select=\".\" &gt;\n          &lt;xsl:with-param name=\"schema\" select=\"$schema\"/&gt;\n          &lt;xsl:with-param name=\"edit\"   select=\"$edit\"/&gt;\n          &lt;xsl:with-param name=\"embedded\" select=\"$embedded\" /&gt;\n        &lt;/xsl:apply-templates&gt;\n      &lt;/xsl:otherwise&gt;\n    &lt;/xsl:choose&gt;\n&lt;/xsl:template&gt;\n</code></pre> <p>Analyzing this template:</p> <ol> <li>The name=\"metadata-iso19139.mcp\" is used by the main element processing template in metadata.xsl: elementEP. The main metadata services, show and edit, end up calling metadata-show.xsl and metadata-edit.xsl respectively with the metadata record passed from the Java service. Both these XSLTs, process the metadata record by applying the elementEP template from metadata.xsl to the root element. elementEP calls the appropriate main schema template using the schema name.</li> <li> <p>The job of this main template is set to process all the elements of the metadata profile. The processing takes place in one of two modes. Firstly, the element is processed in the profile mode (iso19139.mcp). If a match is found then HTML elements will be returned and copied to the output document. If no HTML elements are returned then the element is processed in the base schema mode, iso19139.</p> </li> <li> <p>templates that match on elements specific to the profile have mode iso19139.mcp:</p> </li> </ol> <p><pre><code>&lt;!-- --&gt;\n</code></pre> <pre><code>  .....\n&lt;/xsl:template&gt;\n</code></pre> <ul> <li>templates that override elements in the base schema are processed in the profile mode iso19139.mcp</li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> <pre><code>  .....\n&lt;/xsl:template&gt;\n</code></pre> <p>Notice that the template header of the profile has a simpler design than that used for the original design? Neither the priority attribute or the schema XPath condition is required because we are using a different mode to the base schema.</p> <ul> <li>To support processing in two modes we need to add a null template to the profile mode iso19139.mcp as follows:</li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> </p> <p>This template will match all elements that we don't have a specific template for in the profile mode iso19139.mcp. These elements will be processed in the base schema mode iso19139 instead because the null template returns nothing (see the main template discussion above).</p> <p>The remainder of the discussion in the original design relating to tabs etc applies to the alternative design and is not repeated here.</p>"},{"location":"developer/schemaPlugins/#csw-presentation-xslts","title":"CSW Presentation XSLTs","text":"<p>The CSW server can be asked to provide records in a number of output schemas. The two supported by GeoNetwork are:</p> <ul> <li>ogc - http://www.opengis.net/cat/csw/2.0.2 - a dublin core derivative</li> <li>iso - http://www.isotc211.org/2005/gmd - ISO19115/19139</li> </ul> <p>From each of these output schemas, a brief, summary or full element set can be requested.</p> <p>These output schemas and element sets are implemented in GeoNetwork as XSLTs and they are stored in the 'csw' subdirectory of the 'present' directory. The ogc output schema XSLTs are implemented as ogc-brief.xsl, ogc-summary and ogc-full.xsl. The iso output schema XSLTs are implemented as iso-brief.xsl, iso-summary.xsl and iso-full.xsl.</p> <p>To create these XSLTs for the MCP, the best option is to copy and modify the csw presentation XSLTs from the base schema iso19139.</p> <p>After creating the presentation XSLTs, our new GeoNetwork plugin schema for MCP contains:</p> <pre><code>extract-date-modified.xsl  extract-gml.xsd  extract-uuid.xsl  \nloc  present  schema-conversions.xml  schema-ident.xml  schema.xsd  \nschema\n</code></pre>"},{"location":"developer/schemaPlugins/#creating-the-index-fieldsxsl-to-index-content-from-the-metadata-record","title":"Creating the index-fields.xsl to index content from the metadata record","text":"<p>This XSLT indexes the content of elements in the metadata record. The essence of this XSLT is to select elements from the metadata record and map them to lucene index field names. The lucene index field names used in GeoNetwork are as follows:</p> Lucene Index Field Name Description abstract Metadata abstract any Content from all metadata elements (for free text) changeDate Date that the metadata record was modified createDate Date that the metadata record was created denominator Scale denominator in data resolution download Does the metadata record have a downloadable resource attached? (0 or 1) digital Is the metadata record distributed/available in a digital format? (0 or 1) eastBL East bounding box longitude keyword Metadata keywords metadataStandardName Metadata standard name northBL North bounding box latitude operatesOn Uuid of metadata record describing dataset that is operated on by a service orgName Name of organisation listed in point-of-contact information parentUuid Uuid of parent metadata record paper Is the metadata record distributed/available in a paper format? (0 or 1) protocol On line resource access protocol publicationDate Date resource was published southBL South bounding box latitude spatialRepresentationType vector, raster, etc tempExtentBegin Beginning of temporal extent range tempExtentEnd End of temporal extent range title Metadata title topicCat Metadata topic category type Metadata hierarchy level (should be dataset if unknown) westBL West bounding box longitude <p>For example, here is the mapping created between the metadata element mcp:revisionDate and the lucene index field changeDate:</p> <pre><code>&lt;xsl:for-each select=\"mcp:revisionDate/*\"&gt;\n  &lt;Field name=\"changeDate\" string=\"{string(.)}\" store=\"true\" index=\"true\"/&gt;\n&lt;/xsl:for-each&gt;\n</code></pre> <p>Notice that we are creating a new XML document. The Field elements in this document are read by GeoNetwork to create a Lucene document object for indexing (see the SearchManager class in the GeoNetwork source).</p> <p>Once again, because the MCP is a profile of ISO19115/19139, it is probably best to modify <code>index-fields.xsl</code> from the schema iso19139 to handle the namespaces and additional elements of the MCP.</p> <p>At this stage, our new GeoNetwork plugin schema for MCP contains:</p> <pre><code>extract-date-modified.xsl  extract-gml.xsd  extract-uuid.xsl  \nindex-fields.xsl  loc  present  schema-conversions.xml  schema-ident.xml  \nschema.xsd  schema\n</code></pre>"},{"location":"developer/schemaPlugins/#creating-the-sample-data-directory","title":"Creating the sample-data directory","text":"<p>This is a simple directory. Put MEF files with sample metadata in this directory. Make sure they have a <code>.mef</code> suffix.</p> <p>A MEF file is a zip archive with the metadata, thumbnails, file based online resources and an info file describing the contents. The contents of a MEF file are discussed in more detail in the next section of this manual.</p> <p>Sample data in this directory can be added to the catalog using the Administration menu.</p> <p>At this stage, our new GeoNetwork plugin schema for MCP contains:</p> <pre><code>extract-date-modified.xsl  extract-gml.xsd  extract-uuid.xsl  \nindex-fields.xsl  loc  present  sample-data schema-ident.xml  schema.xsd  \nschema\n</code></pre>"},{"location":"developer/schemaPlugins/#creating-schematrons-to-describe-mcp-conditions","title":"Creating schematrons to describe MCP conditions","text":"<p>Schematrons are rules that are used to check conditions and content in the metadata record as part of the two stage validation process used by GeoNetwork.</p> <p>Schematron rules are created in the schematrons directory that you checked out earlier - see Preparation above.</p> <p>An example rule is:</p> <pre><code>&lt;!-- anzlic/trunk/gml/3.2.0/gmd/spatialRepresentation.xsd--&gt;\n&lt;!-- TEST 12 --&gt;\n&lt;sch:pattern&gt;\n  &lt;sch:title&gt;$loc/strings/M30&lt;/sch:title&gt;\n  &lt;sch:rule context=\"//gmd:MD_Georectified\"&gt;\n    &lt;sch:let name=\"cpd\" value=\"(gmd:checkPointAvailability/gco:Boolean='1' or gmd:checkPointAvailability/gco:Boolean='true') and \n      (not(gmd:checkPointDescription) or count(gmd:checkPointDescription[@gco:nilReason='missing'])&gt;0)\"/&gt;\n    &lt;sch:assert\n      test=\"$cpd = false()\"\n      &gt;$loc/strings/alert.M30&lt;/sch:assert&gt;\n    &lt;sch:report\n      test=\"$cpd = false()\"\n      &gt;$loc/strings/report.M30&lt;/sch:report&gt;\n  &lt;/sch:rule&gt;\n&lt;/sch:pattern&gt;\n</code></pre> <p>As for most of GeoNetwork, the output of this rule can be localized to different languages. The corresponding localized strings are:</p> <pre><code>&lt;strings&gt;\n\n  .....\n\n  &lt;M30&gt;[ISOFTDS19139:2005-TableA1-Row15] - Check point description required if available&lt;/M30&gt;\n\n  .....\n\n  &lt;alert.M30&gt;&lt;div&gt;'checkPointDescription' is mandatory if 'checkPointAvailability' = 1 or true.&lt;/div&gt;&lt;/alert.M30&gt;\n\n  .....\n\n  &lt;report.M30&gt;Check point description documented.&lt;/report.M30&gt;\n\n  .....\n\n&lt;/strings&gt;\n</code></pre> <p>Procedure for adding schematron rules, working within the schematrons directory:</p> <ol> <li>Place your schematron rules in 'rules'. Naming convetion is 'schematron-rules-.sch' eg. <code>schematron-rules-iso-mcp.sch</code>. Place localized strings for the rule assertions into 'rules/loc/'. <li>Edit <code>build.xml</code>.</li> <li>Add a \"clean-schema-dir\" target for your plugin schema directory. This target will remove the schematron rules from plugin schema directory (basically removes all files with pattern schematron-rules-*.xsl).</li> <li>Add a \"compile-schematron\" target for your rules - value attribute is the suffix used in the rules name. eg. for <code>schematron-rules-iso-mcp.sch</code> the value attribute should be \"iso-mcp\". This target will turn the .sch schematron rules into an XSLT using the saxon XSLT engine and 'resources/iso_svrl_for_xslt2.xsl'.</li> <li>Add a \"publish-schematron\" target. This target copies the compiled rules (in XSLT form) into the plugin schema directory.</li> <li>Run 'ant' to create the schematron XSLTs.</li> <p>At this stage, our new GeoNetwork plugin schema for MCP contains:</p> <pre><code>extract-date-modified.xsl  extract-gml.xsd  extract-uuid.xsl  \nindex-fields.xsl  loc  present  sample-data  schema-conversions.xml  \nschema-ident.xml  schema.xsd  schema  schematron-rules-iso-mcp.xsl\n</code></pre>"},{"location":"developer/schemaPlugins/#adding-the-components-necessary-to-create-and-edit-mcp-metadata","title":"Adding the components necessary to create and edit MCP metadata","text":"<p>So far we have added all the components necessary for GeoNetwork to identify, view and validate MCP metadata records. Now we will add the remaining components necessary to create and edit MCP metadata records.</p> <p>We'll start with the XSLTs that set the content of various elements in the MCP metadata records.</p>"},{"location":"developer/schemaPlugins/#creating-set-uuidxsl","title":"Creating set-uuid.xsl","text":"<ul> <li>set-uuid.xsl - this XSLT takes as a parameter the UUID of the metadata record and writes it into the appropriate element of the metadata record. For the MCP this element is the same as the base ISO schema (called iso19139 in GeoNetwork), namely gmd:fileIdentifier. However, because the MCP uses a different namespace on the root element, this XSLT needs to be modified.</li> </ul>"},{"location":"developer/schemaPlugins/#creating-the-extract-set-and-unset-thumbnail-xslts","title":"Creating the extract, set and unset thumbnail XSLTs","text":"<p>If your metadata record can have a thumbnail or browse graphic link, then you will want to add XSLTs that extract, set and unset this information so that you can use the GeoNetwork thumbnail editing interface.</p> <p>The three XSLTs that support this interface are:</p> <ul> <li>extract-thumbnails.xsl - this XSLT extracts the thumbnails/browse graphics from the metadata record, turning it into generic XML that is the same for all metadata schemas. The elements need to have content that GeoNetwork understands. The following is an example of what the thumbnail interface for iso19139 expects (we'll duplicate this requirement for MCP):</li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> bluenet_s.png thumbnail png bluenet.png large_thumbnail png </p> <p>When <code>extract-thumbnails.xsl</code> is run, it creates a small XML hierarchy from this information which looks something like the following:</p> <pre><code>&lt;thumbnail&gt;\n  &lt;large&gt;\n    bluenet.png\n  &lt;/large&gt;\n  &lt;small&gt;\n    bluenet_s.png\n  &lt;/small&gt;\n&lt;/thumbnail&gt;\n</code></pre> <ul> <li>set-thumbnail.xsl - this XSLT does the opposite of extract-thumbnails.xsl. It takes the simplified, common XML structure used by GeoNetwork to describe the large and small thumbnails and creates the elements of the metadata record that are needed to represent them. This is a slightly more complex XSLT than extract-thumbnails.xsl because the existing elements in the metadata record need to be retained and the new elements need to be created in their correct places.</li> <li>unset-thumbnail.xsl - this XSLT targets and removes elements of the metadata record that describe a particular thumbnail. The remaining elements of the metadata record are retained.</li> </ul> <p>Because the MCP is a profile of ISO19115/19139, the easiest path to creating these XSLTs is to copy them from the iso19139 schema and modify them for the changes in namespace required by the MCP.</p>"},{"location":"developer/schemaPlugins/#creating-the-update-xslts","title":"Creating the update-... XSLTs","text":"<ul> <li>update-child-from-parent-info.xsl - this XSLT is run when a child record needs to have content copied into it from a parent record. It is an XSLT that changes the content of a few elements and leaves the remaining elements untouched. The behaviour of this XSLT would depend on which elements of the parent record will be used to update elements of the child record.</li> <li>update-fixed-info.xsl - this XSLT is run after editing to fix certain elements and content in the metadata record. For the MCP there are a number of actions we would like to take to 'hard-wire' certain elements and content. To do this the XSLT the following processing logic:</li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre>     if the element is one that we want to process then        add a template with a match condition for that element and process it     else copy the element to output</p> <p>Because the MCP is a profile of ISO19115/19139, the easiest path to creating this XSLT is to copy update-fixed-info.xsl from the iso19139 schema and modify it for the changes in namespace required by the MCP and then to include the processing we want.</p> <p>A simple example of MCP processing is to make sure that the gmd:metadataStandardName and gmd:metadataStandardVersion elements have the content needed to ensure that the record is recognized as MCP. To do this we can add two templates as follows:</p> <pre><code>&lt;xsl:template match=\"gmd:metadataStandardName\" priority=\"10\"&gt;\n  &lt;xsl:copy&gt;\n    &lt;gco:CharacterString&gt;Australian Marine Community Profile of ISO 19115:2005/19139&lt;/gco:CharacterString&gt;\n  &lt;/xsl:copy&gt;\n&lt;/xsl:template&gt;\n\n&lt;xsl:template match=\"gmd:metadataStandardVersion\" priority=\"10\"&gt;\n  &lt;xsl:copy&gt;\n    &lt;gco:CharacterString&gt;MCP:BlueNet V1.5&lt;/gco:CharacterString&gt;\n  &lt;/xsl:copy&gt;\n&lt;/xsl:template&gt;\n</code></pre> <p>Processing by <code>update-fixed-info.xsl</code> can be enabled/disabled using the Automatic Fixes check box in the System Configuration menu. By default, it is enabled.</p> <p>Some important tasks handled in <code>upgrade-fixed-info.xsl</code>:</p> <ul> <li>creating URLs for metadata with attached files (eg. onlineResources with 'File for download' in iso19139)</li> <li>setting date stamp/revision date</li> <li>setting codelist URLs to point to online ISO codelist catalogs</li> <li>adding default spatial reference system attributes to spatial extents</li> </ul> <p>A specific task required for the MCP <code>update-fixed-info.xsl</code> was to automatically create an online resource with a URL pointing to the metadata.show service with parameter set to the metadata uuid. This required some changes to the update-fixed-info.xsl supplied with iso19139. In particular:</p> <ul> <li>the parent elements may not be present in the metadata record</li> <li>processing of the online resource elements for the metadata point of truth URL should not interfere with other processing of online resource elements</li> </ul> <p>Rather than describe the individual steps required to implement this and the decisions required in the XSLT language, take a look at the <code>update-fixed-info.xsl</code> already present for the MCP schema in the iso19139.mcp directory and refer to the dot points above.</p>"},{"location":"developer/schemaPlugins/#creating-the-templates-directory","title":"Creating the templates directory","text":"<p>This is a simple directory. Put XML metadata files to be used as templates in this directory. Make sure they have a <code>.xml</code> suffix. Templates in this directory can be added to the catalog using the Administration menu.</p>"},{"location":"developer/schemaPlugins/#editor-behaviour-adding-schema-suggestionsxml-and-schema-substitutesxml","title":"Editor behaviour: Adding schema-suggestions.xml and schema-substitutes.xml","text":"<ul> <li>schema-suggestions.xml - The default behaviour of the GeoNetwork advanced editor when building the editor forms is to show elements that are not in the metadata record as unexpanded elements. To add these elements to the record, the user will have to click on the '+' icon next to the element name. This can be tedious especially as some metadata standards have elements nested in others (ie. complex elements). The schema-suggestions.xml file allows you to specify elements that should be automatically expanded by the editor. An example of this is the online resource information in the ISO19115/19139 standard. If the following XML was added to the <code>schema-suggestions.xml</code> file:</li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> </p> <p>The effect of this would be that when an online resource element was expanded, then input fields for the protocol (a drop down/select list), name and description would automatically appear in the editor.</p> <p>Once again, a good place to start when building a <code>schema-suggestions.xml</code> file for the MCP is the <code>schema-suggestions.xml</code> file for the iso19139 schema.</p> <ul> <li>schema-substitutes.xml - Recall from the earlier Creating the schema directory and schema.xsd file section, that the method we used to extend the base ISO19115/19139 schemas is to extend the base type, define a new element with the extended base type and allow the new element to substitute for the base element. So for example, in the MCP, we want to add a new resource constraint element that holds Creative Commons and other commons type licensing information. This requires that the MD_Constraints type be extended and a new mcp:MD_Commons element be defined which can substitute for gmd:MD_Constraints. This is shown in the following snippet of XSD:</li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre>            Add MD_Commons as an extension of gmd:MD_Constraints_Type          </p> <pre><code>&lt;xs:element name=\"MD_Commons\" substitutionGroup=\"gmd:MD_Constraints\" type=\"mcp:MD_CommonsConstraints_Type\"/&gt;\n</code></pre> <p>For MCP records, the GeoNetwork editor will show a choice of elements from the substitution group for gmd:MD_Constraints when adding 'Resource Constraints' to the metadata document. This will now include mcp:MD_Commons.</p> <p></p> <p>Note that by similar process, two other elements, now deprecated in favour of MD_Commons, were also added as substitutes for MD_Constraints. If it was necessary to constrain the choices shown in this menu, say to remove the deprecated elements and limit the choices to just legal, security and commons, then this can be done by the following piece of XML in the schema-substitutes.xml file:</p> <pre><code>&lt;field name=\"gmd:MD_Constraints\"&gt;\n  &lt;substitute name=\"gmd:MD_LegalConstraints\"/&gt;\n  &lt;substitute name=\"gmd:MD_SecurityConstraints\"/&gt;\n  &lt;substitute name=\"mcp:MD_Commons\"/&gt;\n&lt;/field&gt;\n</code></pre> <p>The result of this change is shown below.</p> <p></p> <p>Once again, a good place to start when building a schema-substitutes.xml file for the MCP is the schema-substitutes.xml file for the iso19139 schema.</p>"},{"location":"developer/schemaPlugins/#adding-components-to-support-conversion-of-metadata-records-to-other-schemas","title":"Adding components to support conversion of metadata records to other schemas","text":""},{"location":"developer/schemaPlugins/#creating-the-convert-directory","title":"Creating the convert directory","text":"<p>If the new GeoNetwork plugin schema is to support on the fly translation of metadata records to other schemas, then the convert directory should be created and populated with appropriate XSLTs.</p>"},{"location":"developer/schemaPlugins/#supporting-oaipmh-conversions","title":"Supporting OAIPMH conversions","text":"<p>The OAIPMH server in GeoNetwork can deliver metadata records from any of the schemas known to GeoNetwork. It can also be configured to deliver schemas not known to GeoNetwork if an XSLT exists to convert a metadata record to that schema. The file <code>INSTALL_DIR/web/geonetwork/WEB-INF/config-oai-prefixes.xml</code> describes the schemas (known as prefixes in OAI speak) that can be produced by an XSLT. A simple example of the content of this file is shown below:</p> <pre><code>&lt;schemas&gt;\n  &lt;schema prefix=\"oai_dc\" nsUrl=\"http://www.openarchives.org/OAI/2.0/\" \n          schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc.xsd\"/&gt;\n&lt;/schemas&gt;\n</code></pre> <p>In the case of the prefix oai_dc shown above, if a schema converter with prefix oai_dc exists in the <code>schema-conversions.xml</code> file of a GeoNetwork schema, then records that belong to this schema will be transformed and included in OAIPMH requests for the oai_dc prefix. See Creating the schema-conversions.xml file for more info.</p> <p>To add oai_dc support for the MCP, the easiest method is to copy oai_dc.xsl from the convert directory of the iso19139 schema, modify it to cope with the different namespaces and additional elements of the MCP and add it to the <code>schema-conversions.xml</code> file for the MCP.</p>"},{"location":"developer/settings/","title":"Settings hierarchy","text":""},{"location":"developer/settings/#introduction","title":"Introduction","text":"<p>GeoNetwork stores configuration settings in the Settings table. The settings are organized into a 'tree' structure where the leaf nodes of the tree are key/value pairs.</p> <p>A key is limited to 64 characters whilst a value is effectively unlimited in most databases supported by GeoNetwork.</p> <p>The root of the tree contains two nodes:</p> <ul> <li>system: contains nodes that describe system configuration settings</li> <li>harvesting: contains nodes that describe the settings used by harvesters</li> </ul> <p>In the following sections:</p> <ul> <li>the indentation is used to show hierarchy</li> <li>names in bold represent keys</li> <li> <p>the datatype of the value is shown in parenthesis after the key.</p> <ul> <li>an italic font is used to indicate types: string, integer, boolean, enumerated (values separated by a '|' represent the set of allowed values).</li> <li>a missing datatype means that the value of the node is not used.</li> </ul> </li> <li> <p>square brackets indicate cardinality. If they are missing, a cardinality of [1..1] should be inferred.</p> </li> </ul>"},{"location":"developer/settings/#system-node","title":"System node","text":"<p>Some examples of system configuration settings nodes contained in the system node are shown in the hierarchy below.</p> <ul> <li> <p>system: information on system configuration settings</p> <ul> <li> <p>site: Contains information about the site</p> </li> <li> <p>name (string): Name used to present this site to other sites. Used to fill comboboxes or lists.</p> </li> <li>organisation (string): Name of the organization/company/institute that is running GeoNetwork</li> <li> <p>siteId (string): A UUID that uniquely identifies the site. It is generated by the installer.</p> </li> <li> <p>platform: Contains information about the current software version</p> </li> <li> <p>version (string): GeoNetwork's version in the X.Y.Z format</p> </li> <li> <p>subVersion (string): A small extra description about the version, like 'alpha-1', 'beta' etc...</p> </li> <li> <p>server: Used when it is necessary to build absolute URLs to the GeoNetwork server. This is the case, for example, when creating links inside a metadata record or when providing CSW capabilities.</p> </li> <li> <p>host (string): HTTP server address</p> </li> <li> <p>port (integer): HTTP server port (can be empty which means port 80)</p> </li> <li> <p>Intranet: specify the network address details of the Intranet</p> </li> <li> <p>network (string): Intranet address</p> </li> <li> <p>netmask (string): Intranet netmask</p> </li> <li> <p>z3950: A container for Z39.50 server parameters</p> </li> <li> <p>enable (boolean): If true, GeoNetwork will start the Z30.50 server</p> </li> <li> <p>port (integer): The port opened by GeoNetwork to listen to Z39.50 requests. Usually 2100.</p> </li> <li> <p>proxy: This container specifies the proxy configuration for GeoNetwork to use when making outgoing connections</p> </li> <li> <p>use (boolean): If true, GeoNetwork will use the given proxy for outgoing connections</p> </li> <li>host (string): Proxy host name</li> <li>port (integer): Proxy host port</li> <li>username (string): Proxy credentials.</li> <li> <p>password (string): Proxy credentials.</p> </li> <li> <p>feedback: email messages sent via web feedback form or when downloading a resource.</p> </li> <li> <p>email (string): email address of person who will receive feedback</p> </li> <li> <p>mailServer: This container configures the mail server that will be used to send email</p> <ul> <li>host (string): Address of the SMTP server to use</li> <li>port (string): SMTP port on server to use</li> </ul> </li> <li> <p>removedMetadata: This container contains settings about removed metadata.</p> </li> <li> <p>dir: This folder will contain removed metadata in MEF format. It gets populated when the user deletes a metadata using the web interface.</p> </li> <li> <p>LDAP: Parameters for LDAP authentication by GeoNetwork</p> </li> <li> <p>use (boolean): If true, GeoNetwork will use LDAP authentication for usernames and passwords</p> </li> <li>host (string): LDAP host</li> <li>port (integer): Port number on LDAP host</li> <li>defaultProfile (string): Default GeoNetwork profile to use when the profile user attribute does not exist in the LDAP attributes.</li> <li>login - optional credentials used to obtain access to the LDAP service<ul> <li>userDN (string)</li> <li>password (string)</li> </ul> </li> <li>distinguishedNames - optional LDAP info used by GeoNetwork to locate user credentials<ul> <li>base (string)</li> <li>users (string)</li> </ul> </li> <li>userAttribs: A container for user attributes present into the LDAP directory that must be retrieved and used to create the user in GeoNetwork.<ul> <li>name (string)</li> <li>password (string)</li> <li>profile (string)</li> </ul> </li> </ul> </li> </ul>"},{"location":"developer/settings/#harvesting_nodes","title":"Harvesting nodes","text":"<p>All harvesters share a common set of nodes, which are retrieved by the harvesting engine for all harvesters. These common nodes are described in the hierarchy below.</p> <ul> <li> <p>harvesting</p> <ul> <li>node [0..n] (geonetwork|csw|arcsde|filesystem|geonetwork20|oaipmh| ogcwxs|thredds|webdav|wfsfeatures|z3950|z3950Config|geoPREST): Type of harvesting node</li> <li>site: A container for site information.<ul> <li>name (string): Name of harvest instance (shown in the harvester user interface).</li> <li>uuid (string): A unique identifier assigned by the system when the harvesting node is created.</li> <li>useAccount (boolean): Indicates if the harvester has to authenticate to access the data.<ul> <li>username (string): credentials to be used for authentication</li> <li>password (string): credentials to be used for authentication</li> </ul> </li> </ul> </li> <li>options:<ul> <li>every (string): Harvesting schedule - similar to the Unix CRON format</li> <li>oneRunOnly (boolean): If true, the harvester will harvest just once and then it will set the status to inactive.</li> <li>status (active|inactive): Indicates if the harvesting from this node is stopped (inactive) or if the harvester is waiting for the next scheduled harvest (active).</li> </ul> </li> <li>content: A container for options relating to processing content after harvesting but before storage in the GeoNetwork database<ul> <li>importxslt (string): Name of XSLT to apply to metadata records before being stored and indexed in GeoNetwork (note: not every harvester supports this option - see notes section for each harvester in the harvester settings descriptions below). A list of the possible XSLTs that can be used for this parameter can be obtained from the <code>xml.harvesting.info</code> service - see <code>xml_harvesting_info&amp;type=importStylesheets</code>.</li> <li>validate (boolean): If true, the harvester will validate the metadata record against the matching metadata schema in GeoNetwork. (note: not every harvester supports this option - see notes section for each harvester in the harvester settings descriptions below)</li> </ul> </li> <li>privileges [0..1]: This is a container for privileges to assign to each harvested metadata record.<ul> <li>group (integer) [0..n]: A local group. The value is the local identifier of the group. There can be several group nodes each with its own set of privileges.<ul> <li>operation (integer) [0..n]: Privilege to assign to the group. The value is the numeric id of the operation like 0=view, 1=download, 2=edit etc...</li> </ul> </li> </ul> </li> <li>categories [0..1]: This is a container for categories to assign to each harvested metadata record.<ul> <li>category (integer) [0..n]: A local category. The value is the local identifier of the category.</li> </ul> </li> <li>info: Container for status information about harvesting from this node.<ul> <li>lastRun (string): When the harvester was last run. The value is the current time in milliseconds since 1 January, 1970. If empty then the harvester has not yet been run.</li> </ul> </li> </ul> </li> </ul> <p>Settings for each of the different harvesters that show the additional elements specific to those harvesters are in the following sections.</p>"},{"location":"developer/settings/#geonetwork_harvesting","title":"Harvesting node geonetwork","text":"<p>This is the native harvesting supported by GeoNetwork 2.1 and above.</p> <ul> <li>node (string): geonetwork<ul> <li>site: Contains host and account information<ul> <li>host (string) eg. http://localhost:8080/geonetwork</li> <li>createRemoteCategory (boolean) True: If local category exists with same name as the remote category, then assign harvested metadata to that category. False: Ignore categories.</li> <li>mefFormatFull (boolean) True: harvest remote metadata as a full MEF file. ie. metadata plus thumbnails and data files uploaded with metadata.</li> <li>importXslt (string) Name and parameters of a metadata processing XSLT - see Metadata Processing services for more details.</li> </ul> </li> <li>search [0..n]: Contains the search parameters. If this element is missing, an unconstrained search will be performed.<ul> <li>freeText (string) - free text search on remote instance</li> <li>title (string) - search title on remote instance</li> <li>abstract (string) - search abstract on remote instance</li> <li>keywords (string) - search keywords on remote instance</li> <li>digital (boolean) - search for records marked 'digital' on remote instance</li> <li>hardcopy (boolean) - search for records marked 'hardcopy' on remote instance</li> <li>sourceUuid (string) - search for records that come from source with this uuid on the remote instance</li> <li>sourceName (string) - search for records that come from source with this name on the remote instance</li> </ul> </li> <li>groupsCopyPolicy [0..n]: Represents a copy policy for a remote group. It is used to maintain remote privileges on harvested metadata.<ul> <li>name (string): Internal name (not localised) of a remote group.</li> <li>policy (string): Copy policy. For the group all, policies are: copy, copyToIntranet. For all other groups, policies are: copy, createAndCopy. The Intranet group is not considered.</li> </ul> </li> </ul> </li> </ul>"},{"location":"developer/settings/#xml-example","title":"XML Example","text":"<p>Harvester settings in XML are used by the harvester services - see Harvesting services.</p> <p>Example of GeoNetwork harvester settings in XML::</p> <pre><code>&lt;node id=\"954\" type=\"geonetwork\"&gt;\n &lt;site&gt;\n   &lt;name&gt;test&lt;/name&gt;\n   &lt;uuid&gt;683bfc02-73e2-4100-a601-369936b6f82a&lt;/uuid&gt;\n   &lt;account&gt;\n     &lt;use&gt;true&lt;/use&gt;\n     &lt;username&gt;admin&lt;/username&gt;\n     &lt;password&gt;admin&lt;/password&gt;\n   &lt;/account&gt;\n   &lt;host&gt;http://localhost:8080/geonetwork&lt;/host&gt;\n   &lt;createRemoteCategory&gt;true&lt;/createRemoteCategory&gt;\n   &lt;mefFormatFull&gt;true&lt;/mefFormatFull&gt;\n   &lt;xslfilter /&gt;\n &lt;/site&gt;\n &lt;content&gt;\n   &lt;validate&gt;true&lt;/validate&gt;\n   &lt;importxslt&gt;none&lt;/importxslt&gt;\n &lt;/content&gt;\n &lt;options&gt;\n   &lt;every&gt;0 0 0/3 ? * *&lt;/every&gt;\n   &lt;oneRunOnly&gt;false&lt;/oneRunOnly&gt;\n   &lt;status&gt;inactive&lt;/status&gt;\n &lt;/options&gt;\n &lt;searches&gt;\n   &lt;search&gt;\n     &lt;freeText&gt;Maps&lt;/freeText&gt;\n     &lt;title&gt;&lt;/title&gt;\n     &lt;abstract&gt;&lt;/abstract&gt;\n     &lt;keywords&gt;&lt;/keywords&gt;\n     &lt;digital&gt;false&lt;/digital&gt;\n     &lt;hardcopy&gt;true&lt;/hardcopy&gt;\n     &lt;source&gt;\n       &lt;uuid&gt;b7ce20f2-888a-4139-8802-916730c4be06&lt;/uuid&gt;\n       &lt;name&gt;My GeoNetwork catalogue&lt;/name&gt;\n     &lt;/source&gt;\n   &lt;/search&gt;\n &lt;/searches&gt;\n &lt;categories&gt;\n   &lt;category id=\"5\" /&gt;\n &lt;/categories&gt;\n &lt;groupsCopyPolicy /&gt;\n &lt;info&gt;\n   &lt;lastRun /&gt;\n   &lt;running&gt;false&lt;/running&gt;\n &lt;/info&gt; \n&lt;/node&gt;\n</code></pre>"},{"location":"developer/settings/#notes","title":"Notes","text":"<pre><code>-    this harvester does not use the content/importXslt setting - instead a more sophisticated approach using the metadata processing services can be applied through the **importXslt** setting - for more details and an example see [Metadata Processing services](../xml_services/metadata_xml_processing.md) for more details.\n</code></pre>"},{"location":"developer/settings/#webdav_harvesting","title":"Harvesting node webdav","text":"<p>This harvester type is capable of connecting to a web server which is WebDAV enabled (WebDAV is WEB Distributed Authoring and Versioning) or WAF (Web Accessible Folder) enabled.</p> <pre><code>-    **node** (*string*): webdav\n -   **site**: Contains the URL to connect to and account information\n     -   **url** (*string*): URL to connect to. Must be well formed, starting with `http://`, `file://` or a supported protocol.\n     -   **icon** (*string*): This is the icon that will be used as the metadata source logo. The image is taken from the `images/harvesting` folder and copied to the `images/logos` folder. A list of the possible values that can be used for this parameter can be obtained from the `xml.harvesting.info` service - see `xml_harvesting_info&amp;type=icons`{.interpreted-text role=\"ref\"}.\n -   **options**\n     -   **recurse** (*boolean*): Indicates if the remote folder must be recursively scanned for metadata.\n     -   **validate** (*boolean*): If set, the harvester will validate the metadata against its schema and the metadata will be harvested only if it is valid.\n     -   **subtype** (*waf|webdav*): Indicates the type of server being harvested\n</code></pre>"},{"location":"developer/settings/#xml-example_1","title":"XML Example","text":"<p>Harvester settings in XML are used by the harvester services - see Harvesting services.</p> <p>Example of WEBDAV/WAF harvester settings in XML::</p> <pre><code>&lt;node id=\"1039\" type=\"webdav\"&gt;\n &lt;site&gt;\n   &lt;name&gt;burbble&lt;/name&gt;\n   &lt;uuid&gt;b64e006a-a26c-4268-85ec-0bf0450be966&lt;/uuid&gt;\n   &lt;account&gt;\n     &lt;use&gt;true&lt;/use&gt;\n     &lt;username&gt;apples&lt;/username&gt;\n     &lt;password&gt;oranges&lt;/password&gt;\n   &lt;/account&gt;\n   &lt;url&gt;http://davtest.com/webdav&lt;/url&gt;\n   &lt;icon&gt;webdav.gif&lt;/icon&gt;\n &lt;/site&gt;\n &lt;content&gt;\n   &lt;validate&gt;true&lt;/validate&gt;\n   &lt;importxslt&gt;none&lt;/importxslt&gt;\n &lt;/content&gt;\n &lt;options&gt;\n   &lt;every&gt;0 0 0 ? * *&lt;/every&gt;\n   &lt;oneRunOnly&gt;false&lt;/oneRunOnly&gt;\n   &lt;status&gt;inactive&lt;/status&gt;\n   &lt;validate&gt;true&lt;/validate&gt;\n   &lt;recurse&gt;true&lt;/recurse&gt;\n   &lt;subtype&gt;webdav&lt;/subtype&gt;\n &lt;/options&gt;\n &lt;privileges&gt;\n   &lt;group id=\"1\"&gt;\n     &lt;operation name=\"view\" /&gt;\n   &lt;/group&gt;\n &lt;/privileges&gt;\n &lt;categories&gt;\n   &lt;category id=\"2\" /&gt;\n &lt;/categories&gt;\n &lt;info&gt;\n   &lt;lastRun /&gt;\n   &lt;running&gt;false&lt;/running&gt;\n &lt;/info&gt;\n&lt;/node&gt;\n</code></pre>"},{"location":"developer/settings/#notes_1","title":"Notes","text":"<pre><code>-    this harvester does not use the content/importXslt setting\n</code></pre>"},{"location":"developer/settings/#csw_harvesting","title":"Harvesting node csw","text":"<p>This harvester type is capable of querying an OGC Catalogue Services for the Web (CSW) server and harvesting metadata.</p> <pre><code>-    **node** (*string*): csw\n -   **site**\n     -   **capabUrl** (*string*): URL of the GetCapabilities statement. This will be used to retrieve the operations and server address.\n     -   **icon** (*string*): This is the icon that will be used as the metadata source logo. The image is taken from the `images/harvesting` folder and copied to the `images/logos` folder. A list of the possible values that can be used for this parameter can be obtained from the `xml.harvesting.info` service - see `xml_harvesting_info&amp;type=icons`{.interpreted-text role=\"ref\"}.\n -   **search** [0..n]: Contains search parameters. If this element is missing, an unconstrained search will be performed.\n     -   **freeText** (*string*)\n     -   **title** (*string*)\n     -   **abstract** (*string*)\n     -   **subject** (*string*)\n     -   **minscale** (*integer*) - minimum scale denominator\n     -   **maxscale** (*integer*) - maximum scale denominator\n</code></pre>"},{"location":"developer/settings/#xml-example_2","title":"XML Example","text":"<p>Harvester settings in XML are used by the harvester services - see Harvesting services. Example of CSW harvester settings in XML::</p> <pre><code>&lt;node id=\"1122\" type=\"csw\"&gt;\n &lt;site&gt;\n   &lt;name&gt;blonks&lt;/name&gt;\n   &lt;uuid&gt;723953dc-1308-4905-abc0-9869f18af132&lt;/uuid&gt;\n   &lt;account&gt;\n     &lt;use&gt;true&lt;/use&gt;\n     &lt;username&gt;frogmouth&lt;/username&gt;\n     &lt;password&gt;tawny&lt;/password&gt;\n   &lt;/account&gt;\n   &lt;capabilitiesUrl&gt;http://cswserver.com/services/csw?request=GetCapabilities&amp;amp;service=CSW&lt;/capabilitiesUrl&gt;\n   &lt;icon&gt;csw.gif&lt;/icon&gt;\n &lt;/site&gt;\n &lt;content&gt;\n   &lt;validate&gt;false&lt;/validate&gt;\n   &lt;importxslt&gt;none&lt;/importxslt&gt;\n &lt;/content&gt;\n &lt;options&gt;\n   &lt;every&gt;0 0 0 ? * *&lt;/every&gt;\n   &lt;oneRunOnly&gt;false&lt;/oneRunOnly&gt;\n   &lt;status&gt;inactive&lt;/status&gt;\n &lt;/options&gt;\n &lt;searches&gt;\n   &lt;search&gt;\n     &lt;freeText&gt;cobblers&lt;/freeText&gt;\n     &lt;title /&gt;\n     &lt;abstract /&gt;\n     &lt;subject /&gt;\n     &lt;minscale&gt;25000&lt;/minscale&gt;\n     &lt;maxscale&gt;400000&lt;/maxscale&gt;\n   &lt;/search&gt;\n &lt;/searches&gt;\n &lt;privileges&gt;\n   &lt;group id=\"1\"&gt;\n     &lt;operation name=\"view\" /&gt;\n   &lt;/group&gt;\n &lt;/privileges&gt;\n &lt;categories&gt;\n   &lt;category id=\"2\" /&gt;\n &lt;/categories&gt;\n &lt;info&gt;\n   &lt;lastRun /&gt;\n   &lt;running&gt;false&lt;/running&gt;\n &lt;/info&gt;\n&lt;/node&gt;\n</code></pre>"},{"location":"developer/settings/#notes_2","title":"Notes","text":"<pre><code>-    this harvester does not use the content/importXslt setting\n</code></pre>"},{"location":"developer/settings/#z3950_harvesting","title":"Harvesting node z3950","text":"<p>This harvester type is capable of querying one or more Z3950 servers and harvesting metadata.</p> <pre><code>-    **node** (*string*): z3950\n -   **site**\n     -   **query** (*string*): Z3950 query in Prefix Query Format (mandatory). See the discussion on PQF in the Z3950 Harvester section of the Users Manual and/or &lt;http://www.indexdata.com/yaz/doc/tools.html#PQF&gt;.\n     -   **icon** (*string*): This is the icon that will be used as the metadata source logo. The image is taken from the `images/harvesting` folder and copied to the `images/logos` folder. A list of the possible values that can be used for this parameter can be obtained from the `xml.harvesting.info` service - see `xml_harvesting_info&amp;type=icons`{.interpreted-text role=\"ref\"}.\n     -   **repositories**\n         -   **repository** [0..n]: Contains the Z3950 repository ids that will be harvested. Z3950 repository ids in GeoNetwork can be obtained through the `xml.info`{.interpreted-text role=\"ref\"} service.\n</code></pre>"},{"location":"developer/settings/#xml-example_3","title":"XML Example","text":"<p>Harvester settings in XML are used by the harvester services - see Harvesting services. Example of Z3950 harvester settings in XML::</p> <pre><code>&lt;node id=\"1090\" type=\"z3950\"&gt;\n &lt;site&gt;\n   &lt;name&gt;testz3950&lt;/name&gt;\n   &lt;uuid&gt;8554ec2b-2b80-4f9e-9d9d-028e2407ee89&lt;/uuid&gt;\n   &lt;account&gt;\n     &lt;use&gt;true&lt;/use&gt;\n     &lt;username /&gt;\n     &lt;password /&gt;\n   &lt;/account&gt;\n   &lt;query&gt;@attrset geo @attr 1=1016 @attr 4=6 @attr 2=3 \"water\"&lt;/query&gt;\n   &lt;icon&gt;Z3950.gif&lt;/icon&gt;\n   &lt;repositories&gt;\n     &lt;repository id=\"act\" /&gt;\n     &lt;repository id=\"geonetwork-auscope\" /&gt;\n     &lt;repository id=\"product\" /&gt;\n     &lt;repository id=\"publication\" /&gt;\n     &lt;repository id=\"source\" /&gt;\n     &lt;repository id=\"geonetwork-aims\" /&gt;\n   &lt;/repositories&gt;\n &lt;/site&gt;\n &lt;content&gt;\n   &lt;validate&gt;false&lt;/validate&gt;\n   &lt;importxslt&gt;none&lt;/importxslt&gt;\n &lt;/content&gt;\n &lt;options&gt;\n   &lt;every&gt;0 0 0 ? * *&lt;/every&gt;\n   &lt;oneRunOnly&gt;false&lt;/oneRunOnly&gt;\n   &lt;status&gt;inactive&lt;/status&gt;\n &lt;/options&gt;\n &lt;privileges&gt;\n   &lt;group id=\"1\"&gt;\n     &lt;operation name=\"view\" /&gt;\n     &lt;operation name=\"dynamic\" /&gt;\n     &lt;operation name=\"featured\" /&gt;\n   &lt;/group&gt;\n &lt;/privileges&gt;\n &lt;categories&gt;\n   &lt;category id=\"2\" /&gt;\n &lt;/categories&gt;\n &lt;info&gt;\n   &lt;lastRun /&gt;\n   &lt;running&gt;false&lt;/running&gt;\n &lt;/info&gt;\n&lt;/node&gt;\n</code></pre>"},{"location":"developer/settings/#oaipmh_harvesting","title":"Harvesting node oaipmh","text":"<p>This harvester type is capable of querying an OAIPMH (Open Archives Initiative Protocol for Metadata Harvesting version 2.0) server and harvesting metadata.</p> <pre><code>-    **node** (*string*): oaipmh\n -   **site**\n     -   **url** (*string*): OAIPMH server URL\n     -   **icon** (*string*): This is the icon that will be used as the metadata source logo. The image is taken from the `images/harvesting` folder and copied to the `images/logos` folder. A list of the possible values that can be used for this parameter can be obtained from the `xml.harvesting.info` service - see `xml_harvesting_info&amp;type=icons`{.interpreted-text role=\"ref\"}.\n -   **options**\n     -   **validate** (*boolean*): Validate metadata before saving to database. This option will be deprecated in favour of content/validate.\n -   **search** [0..n]: Contains search parameters which because they are constrained to follow the OAIPMH version 2.0 standard, are curiously limited to a date range, prefix and metadata set name. If this element is missing, an unconstrained search will be performed.\n     -   **from** (*string*) from date search\n     -   **until** (*string*) to date search\n     -   **set** (*string*) metadata set name on OAIPMH server (possible values can be retrieved using &lt;http://your_oaipmhservername?verb=ListSets&gt;)\n     -   **prefix** (*string*) metadata prefix name on OAIPMH server (possible values can be retrieved using &lt;http://your_oaipmhservername?verb=ListMetadataFormats&gt;)\n</code></pre>"},{"location":"developer/settings/#xml-example_4","title":"XML Example","text":"<p>Harvester settings in XML are used by the harvester services - see Harvesting services. Example of OAIPMH harvester settings in XML::</p> <pre><code>&lt;node id=\"1152\" type=\"oaipmh\"&gt;\n &lt;site&gt;\n   &lt;name&gt;oaitest&lt;/name&gt;\n   &lt;uuid&gt;0a3e4a4a-4c4c-4f82-860f-551b6cf12341&lt;/uuid&gt;\n   &lt;account&gt;\n     &lt;use&gt;true&lt;/use&gt;\n     &lt;username /&gt;\n     &lt;password /&gt;\n   &lt;/account&gt;\n   &lt;url&gt;http://localhost:6060/joai&lt;/url&gt;\n   &lt;icon&gt;oai-mhp.gif&lt;/icon&gt;\n &lt;/site&gt;\n &lt;content&gt;\n   &lt;validate&gt;false&lt;/validate&gt;\n   &lt;importxslt&gt;{IMPORTXSLT}&lt;/importxslt&gt;\n &lt;/content&gt;\n &lt;options&gt;\n   &lt;every&gt;0 0 0 ? * *&lt;/every&gt;\n   &lt;oneRunOnly&gt;false&lt;/oneRunOnly&gt;\n   &lt;status&gt;inactive&lt;/status&gt;\n   &lt;validate&gt;false&lt;/validate&gt;\n &lt;/options&gt;\n &lt;searches&gt;\n   &lt;search&gt;\n     &lt;from&gt;2013-01-08&lt;/from&gt;\n     &lt;until&gt;2013-01-30&lt;/until&gt;\n     &lt;set&gt;iso19139&lt;/set&gt;\n     &lt;prefix&gt;gmd&lt;/prefix&gt;\n     &lt;stylesheet /&gt;\n   &lt;/search&gt;\n &lt;/searches&gt;\n &lt;privileges&gt;\n   &lt;group id=\"1\"&gt;\n     &lt;operation name=\"view\" /&gt;\n   &lt;/group&gt;\n &lt;/privileges&gt;\n &lt;categories&gt;\n   &lt;category id=\"2\" /&gt;\n &lt;/categories&gt;\n &lt;info&gt;\n   &lt;lastRun /&gt;\n   &lt;running&gt;false&lt;/running&gt;\n &lt;/info&gt;\n&lt;/node&gt;\n</code></pre>"},{"location":"developer/settings/#notes_3","title":"Notes","text":"<pre><code>-    this harvester does not use the content/importXslt setting\n-    this harvester does not use the content/validate setting - this will change\n</code></pre>"},{"location":"developer/settings/#thredds_harvesting","title":"Harvesting node thredds","text":"<p>This harvester type is capable of harvesting metadata from a THREDDS (Thematic Real-time Environmental Data Directory Service). The metadata fragments are:</p> <ul> <li>transformed into ISO19115/19139 (or profile) metadata fragments</li> <li>copied or linked into an ISO19115/19139 (or profile) template</li> </ul> <p>The harvester supports metadata fragments following the Unidata Data Discovery Conventions (http://www.unidata.ucar.edu/software/netcdf-java/formats/DataDiscoveryAttConvention.html) from two types of THREDDS datasets:</p> <ul> <li>collections: essentially datasets that contain other datasets (like directories in a filesystem tree)</li> <li>atomics: datasets that do not contain other datasets (like files in a filesystem tree)</li> </ul> <p>The settings for a THREDDS harvester type are:</p> <pre><code>-    **node** (*string*): thredds\n -   **site**\n     -   **url** (*string*): THREDDS catalog server URL - should always be the URL of an XML THREDDS catalog eg. &lt;http://motherlode.ucar.edu:8080/thredds/catalog/satellite/3.9/WEST-CONUS_4km/catalog.xml&gt; - HTML URLs will **not** work!\n     -   **icon** (*string*): This is the icon that will be used as the metadata source logo. The image is taken from the `images/harvesting` folder and copied to the `images/logos` folder. A list of the possible values that can be used for this parameter can be obtained from the `xml.harvesting.info` service - see `xml_harvesting_info&amp;type=icons`{.interpreted-text role=\"ref\"}.\n -   **options**\n     -   **lang** (*string*) - three letter language code describing language of metadata being harvested (almost always **eng**) - this value is used to set the metadata language in the records harvested from THREDDS\n     -   **topic** (*string*) - ISO topic category describing the harvested metadata\n     -   **createThumbnails** (*boolean*) - If true and the THREDDS catalog delivers WMS images for a dataset whose metadata is being harvested then a thumbnail will be created from the WMS for the harvested metadata\n     -   **createServiceMd** (*boolean*) - If true then a skeleton ISO19119 service metadata record will be created for the services specified in the THREDDS catalog.\n     -   **createCollectionDatasetMd** (*boolean*) - If true then metadata records will be created using harvested metadata fragments from collection datasets in the THREDDS catalog.\n     -   **collectionGeneration** (*fragments|default*) - Use *fragments*. *default* refers to DIF metadata extraction which will be deprecated.\n     -   **outputSchemaOnCollectionsFragments** (*string*) Metadata schema of ISO records that will be created from THREDDS catalog collection metadata. A list of possible values for this parameter can be obtained from the `xml.harvesting.info` service, see `xml_harvesting_info&amp;type=threddsFragmentSchemas`{.interpreted-text role=\"ref\"}.\n     -   **collectionMetadataTemplate** (*integer*) Template record that harvested fragments will copied or linked into to create metadata records. Use &lt;http://your_geonetwork/geonetwork/srv/eng/xml.info?type=templates&gt; to get a list of template metadata record ids that can be used for this setting.\n     -   **createCollectionSubtemplates** (*boolean*) - If true then subtemplates are created from the metadata fragments harvested from the THREDDS catalog datasets. The subtemplates are stored in the GeoNetwork database and linked into the **collectionMetadataTemplate** template record to create the harvested metadata records. If false, then subtemplates are not created, instead the harvested fragments are copied into the **collectionMetadataTemplate** record to create normal metadata records.\n     -   **collectionFragmentStylesheet** (*string*) Stylesheet that turns collection metadata fragments in the THREDDS catalog into ISO metadata fragments. A list of possible values for this parameter can be obtained from the `xml.harvesting.info` service, see `xml_harvesting_info&amp;type=threddsFragmentStylesheets`{.interpreted-text role=\"ref\"}.\n     -   **createAtomicDatasetMd** (*boolean*) - If true then metadata records will be created using harvested metadata fragments from atom datasets in the THREDDS catalog.\n     -   **atomicGeneration** (*fragments|default*) - Use *fragments*. *default* refers to DIF metadata extraction which will be deprecated.\n     -   **outputSchemaOnAtomicFragments** (*string*) Metadata schema of ISO records that will be created from THREDDS catalog atomic metadata. A list of possible values for this parameter can be obtained from the `xml.harvesting.info` service, see `xml_harvesting_info&amp;type=threddsFragmentSchemas`{.interpreted-text role=\"ref\"}.\n     -   **atomicMetadataTemplate** (*integer*) Template record that harvested fragments will copied or linked into to create metadata records. Use &lt;http://your_geonetwork/geonetwork/srv/eng/xml.info?type=templates&gt; to get a list of template metadata record ids that can be used for this setting.\n     -   **createAtomicSubtemplates** (*boolean*) - If true then subtemplates are created from the metadata fragments harvested from the THREDDS catalog atoms. The subtemplates are stored in the GeoNetwork database and linked into the **atomicMetadataTemplate** template record to create the harvested metadata records. If false, then subtemplates are not created, instead the harvested fragments are copied into the **atomicMetadataTemplate** record to create normal metadata records.\n     -   **atomicFragmentStylesheet** (*string*) Stylesheet that turns atom metadata fragments in the THREDDS catalog into ISO metadata fragments. A list of possible values for this parameter can be obtained from the `xml.harvesting.info` service, see `xml_harvesting_info&amp;type=threddsFragmentStylesheets`{.interpreted-text role=\"ref\"}.\n</code></pre>"},{"location":"developer/settings/#xml-example_5","title":"XML Example","text":"<p>Harvester settings in XML are used by the harvester services - see Harvesting services. Example of THREDDS harvester settings in XML:</p> <pre><code>&lt;node id=\"977\" type=\"thredds\"&gt;\n &lt;site&gt;\n   &lt;name&gt;test thredds with motherlode&lt;/name&gt;\n   &lt;uuid&gt;b3307257-6b2a-48e7-80f5-74acadeff66f&lt;/uuid&gt;\n   &lt;account&gt;\n     &lt;use&gt;true&lt;/use&gt;\n     &lt;username /&gt;\n     &lt;password /&gt;\n   &lt;/account&gt;\n   &lt;url&gt;http://motherlode.ucar.edu:8080/thredds/catalog/satellite/3.9/WEST-CONUS_4km/catalog.xml&lt;/url&gt;\n   &lt;icon&gt;thredds.gif&lt;/icon&gt;\n &lt;/site&gt;\n &lt;content&gt;\n   &lt;validate&gt;false&lt;/validate&gt;\n   &lt;importxslt&gt;{IMPORTXSLT}&lt;/importxslt&gt;\n &lt;/content&gt;\n &lt;options&gt;\n   &lt;every&gt;0 0 0 ? * *&lt;/every&gt;\n   &lt;oneRunOnly&gt;false&lt;/oneRunOnly&gt;\n   &lt;status&gt;inactive&lt;/status&gt;\n   &lt;lang&gt;eng&lt;/lang&gt;\n   &lt;topic&gt;environment&lt;/topic&gt;\n   &lt;createThumbnails&gt;true&lt;/createThumbnails&gt;\n   &lt;createServiceMd&gt;true&lt;/createServiceMd&gt;\n   &lt;createCollectionDatasetMd&gt;true&lt;/createCollectionDatasetMd&gt;\n   &lt;createAtomicDatasetMd&gt;true&lt;/createAtomicDatasetMd&gt;\n   &lt;ignoreHarvestOnAtomics&gt;true&lt;/ignoreHarvestOnAtomics&gt;\n   &lt;atomicGeneration&gt;fragments&lt;/atomicGeneration&gt;\n   &lt;modifiedOnly&gt;true&lt;/modifiedOnly&gt;\n   &lt;atomicFragmentStylesheet&gt;thredds-metadata.xsl&lt;/atomicFragmentStylesheet&gt;\n   &lt;atomicMetadataTemplate&gt;7&lt;/atomicMetadataTemplate&gt;\n   &lt;createAtomicSubtemplates&gt;true&lt;/createAtomicSubtemplates&gt;\n   &lt;outputSchemaOnAtomicsDIF /&gt;\n   &lt;outputSchemaOnAtomicsFragments&gt;iso19139&lt;/outputSchemaOnAtomicsFragments&gt;\n   &lt;ignoreHarvestOnCollections&gt;true&lt;/ignoreHarvestOnCollections&gt;\n   &lt;collectionGeneration&gt;fragments&lt;/collectionGeneration&gt;\n   &lt;collectionFragmentStylesheet&gt;thredds-metadata.xsl&lt;/collectionFragmentStylesheet&gt;\n   &lt;collectionMetadataTemplate&gt;7&lt;/collectionMetadataTemplate&gt;\n   &lt;createCollectionSubtemplates&gt;true&lt;/createCollectionSubtemplates&gt;\n   &lt;outputSchemaOnCollectionsDIF /&gt;\n   &lt;outputSchemaOnCollectionsFragments&gt;iso19139&lt;/outputSchemaOnCollectionsFragments&gt;\n   &lt;datasetCategory&gt;2&lt;/datasetCategory&gt;\n &lt;/options&gt;\n &lt;privileges&gt;\n   &lt;group id=\"1\"&gt;\n     &lt;operation name=\"view\" /&gt;\n   &lt;/group&gt;\n &lt;/privileges&gt;\n &lt;categories&gt;\n   &lt;category id=\"3\" /&gt;\n &lt;/categories&gt;\n &lt;info&gt;\n   &lt;lastRun /&gt;\n   &lt;running&gt;false&lt;/running&gt;\n &lt;/info&gt;\n&lt;/node&gt;\n</code></pre>"},{"location":"developer/settings/#notes_4","title":"Notes","text":"<pre><code>-    this harvester does not use the content/importXslt setting\n-    this harvester does not use the content/validate setting\n</code></pre>"},{"location":"developer/settings/#wfsfeatures_harvesting","title":"Harvesting node wfsfeatures","text":"<p>This harvester type is capable of querying and harvesting metadata from the GetFeature response from an OGC Web Feature Service (WFS). The metadata fragments are:</p> <ul> <li>transformed into ISO19115/19139 (or profile) metadata fragments</li> <li>copied or linked into an ISO19115/19139 (or profile) template</li> </ul> <p>The settings for a WFS Features harvester type are:</p> <pre><code>-    **node** (*string*): wfsfeatures\n -   **site**\n     -   **url** (*string*): OGC WFS service URL. eg. &lt;http://localhost:7070/deegree/services&gt; - the harvester adds the necessary parameters to call the GetFeature service with the query provided from the **options**.\n     -   **icon** (*string*): This is the icon that will be used as the metadata source logo. The image is taken from the `images/harvesting` folder and copied to the `images/logos` folder. A list of the possible values that can be used for this parameter can be obtained from the `xml.harvesting.info` service - see `xml_harvesting_info&amp;type=icons`{.interpreted-text role=\"ref\"}.\n -   **options**\n     -   **lang** (*string*) - three letter language code describing language of metadata being harvested (almost always **eng**) - this value is used to set the metadata language in the records harvested from THREDDS\n     -   **query** (*string*) - An OGC WFS GetFeature query\n     -   **outputSchema** (*string*) Metadata schema of ISO records that will be created from WFS GetFeature harvester. A list of possible values for this parameter can be obtained from the `xml.harvesting.info` service, see `xml_harvesting_info&amp;type=wfsFragmentSchemas`{.interpreted-text role=\"ref\"}.\n     -   **stylesheet** (*string*) Stylesheet that turns WFS Features into ISO metadata fragments. A list of possible values for this parameter can be obtained from the `xml.harvesting.info` service, see `xml_harvesting_info&amp;type=wfsFragmentStylesheets`{.interpreted-text role=\"ref\"}.\n     -   **streamFeatures** (*boolean*) - If true then responses will be saved to disk and features will be extracted using the streaming XML parser. Use for large WFS GetFeatures responses.\n     -   **createSubtemplates** (*boolean*) - If true then subtemplates are created from the metadata fragments harvested from the WFS GetFeatures response. The subtemplates are stored in the GeoNetwork database and linked into the **templateId** template record to create the harvested metadata records. If false, then subtemplates are not created, instead the harvested fragments are copied into the **templateId** record to create normal metadata records.\n     -   **templateId** (*integer*) Template record that harvested fragments will copied or linked into to create metadata records. Use &lt;http://your_geonetwork/geonetwork/srv/eng/xml.info?type=templates&gt; to get a list of template metadata record ids that can be used for this setting.\n     -   **recordsCategory** (*integer*) Category id of GeoNetwork category that will be assigned to the metadata records created by the harvester. Use &lt;http://your_geonetwork/geonetwork/srv/eng/xml.info?type=categories&gt; to get a list of category ids that can be used for this setting.\n</code></pre>"},{"location":"developer/settings/#xml-example_6","title":"XML Example","text":"<p>Harvester settings in XML are used by the harvester services - see Harvesting services. Example of WFS Features harvester settings in XML:</p> <pre><code>&lt;node id=\"1201\" type=\"wfsfeatures\"&gt;\n &lt;site&gt;\n   &lt;name&gt;test wfs&lt;/name&gt;\n   &lt;uuid&gt;588ea4fa-a105-40fd-9697-8082d23cc967&lt;/uuid&gt;\n   &lt;account&gt;\n     &lt;use&gt;true&lt;/use&gt;\n     &lt;username /&gt;\n     &lt;password /&gt;\n   &lt;/account&gt;\n   &lt;url&gt;http://localhost:6060/deegree/services&lt;/url&gt;\n   &lt;icon&gt;wfs.gif&lt;/icon&gt;\n &lt;/site&gt;\n &lt;content&gt;\n   &lt;validate&gt;false&lt;/validate&gt;\n   &lt;importxslt&gt;{IMPORTXSLT}&lt;/importxslt&gt;\n &lt;/content&gt;\n &lt;options&gt;\n   &lt;every&gt;0 0 0 ? * *&lt;/every&gt;\n   &lt;oneRunOnly&gt;false&lt;/oneRunOnly&gt;\n   &lt;status&gt;inactive&lt;/status&gt;\n   &lt;lang&gt;eng&lt;/lang&gt;\n   &lt;query&gt;&amp;lt;wfs:GetFeature service=\"WFS\" version=\"1.1.0\"\n       xmlns:wfs=\"http://www.opengis.net/wfs\"&amp;gt;\n    &amp;lt;wfs:Query typeName=\"gboundaries\"/&amp;gt;&amp;lt;/wfs:GetFeature&amp;gt;&lt;/query&gt;\n   &lt;outputSchema&gt;iso19139&lt;/outputSchema&gt;\n   &lt;stylesheet&gt;geoserver_boundary_fragments.xsl&lt;/stylesheet&gt;\n   &lt;streamFeatures&gt;false&lt;/streamFeatures&gt;\n   &lt;createSubtemplates&gt;true&lt;/createSubtemplates&gt;\n   &lt;templateId&gt;2&lt;/templateId&gt;\n   &lt;recordsCategory&gt;2&lt;/recordsCategory&gt;\n &lt;/options&gt;\n &lt;privileges&gt;\n   &lt;group id=\"1\"&gt;\n     &lt;operation name=\"view\" /&gt;\n     &lt;operation name=\"dynamic\" /&gt;\n     &lt;operation name=\"featured\" /&gt;\n   &lt;/group&gt;\n &lt;/privileges&gt;\n &lt;categories&gt;\n   &lt;category id=\"2\" /&gt;\n &lt;/categories&gt;\n &lt;info&gt;\n   &lt;lastRun /&gt;\n   &lt;running&gt;false&lt;/running&gt;\n &lt;/info&gt;\n&lt;/node&gt;\n</code></pre>"},{"location":"developer/settings/#notes_5","title":"Notes","text":"<pre><code>-    this harvester does not use the content/importXslt setting\n-    this harvester does not use the content/validate setting\n</code></pre>"},{"location":"developer/settings/#filesystem_harvesting","title":"Harvesting node filesystem","text":"<p>This harvester type is capable of querying and harvesting metadata (filename *.xml) from a directory tree on a filesystem accessible to the GeoNetwork server.</p> <p>The settings for the filesystem harvester type are:</p> <pre><code>-    **node** (*string*): filesystem\n -   **site**\n     -   **directory** (*string*): This is the filesystem directory (on the server) from which metadata files (*.xml) will be harvested.\n     -   **recurse** (*boolean*): If true, then any directories in the fileystem directory will be checked for *.xml files (and any directories in those directories etc etc).\n     -   **nodelete** (*boolean*): If true, then metadata from previous executions of the filesystem harvester will be left in the catalog (ie. they will not be deleted)\n     -   **icon** (*string*): This is the icon that will be used as the metadata source logo. The image is taken from the `images/harvesting` folder and copied to the `images/logos` folder. A list of the possible values that can be used for this parameter can be obtained from the `xml.harvesting.info` service - see `xml_harvesting_info&amp;type=icons`{.interpreted-text role=\"ref\"}.\n</code></pre>"},{"location":"developer/settings/#xml-example_7","title":"XML Example","text":"<p>Harvester settings in XML are used by the harvester services - see Harvesting services. Example of Filesystem harvester settings in XML:</p> <pre><code>&lt;node id=\"1234\" type=\"filesystem\"&gt;\n &lt;site&gt;\n   &lt;name&gt;/Users filesystem harvester&lt;/name&gt;\n   &lt;uuid&gt;c7b7660a-337a-4aa1-843b-648280ad8d86&lt;/uuid&gt;\n   &lt;account&gt;\n     &lt;use&gt;false&lt;/use&gt;\n     &lt;username /&gt;\n     &lt;password /&gt;\n   &lt;/account&gt;\n   &lt;directory&gt;/Users&lt;/directory&gt;\n   &lt;recurse&gt;true&lt;/recurse&gt;\n   &lt;nodelete&gt;true&lt;/nodelete&gt;\n   &lt;icon&gt;filesystem.gif&lt;/icon&gt;\n &lt;/site&gt;\n &lt;content&gt;\n   &lt;validate&gt;true&lt;/validate&gt;\n   &lt;importxslt&gt;DIF-to-ISO19139.xsl&lt;/importxslt&gt;\n &lt;/content&gt;\n &lt;options&gt;\n   &lt;every&gt;0 0 0 ? * *&lt;/every&gt;\n   &lt;oneRunOnly&gt;false&lt;/oneRunOnly&gt;\n   &lt;status&gt;inactive&lt;/status&gt;\n &lt;/options&gt;\n &lt;searches /&gt;\n &lt;privileges&gt;\n   &lt;group id=\"1\"&gt;\n     &lt;operation name=\"view\" /&gt;\n   &lt;/group&gt;\n &lt;/privileges&gt;\n &lt;categories&gt;\n   &lt;category id=\"2\" /&gt;\n &lt;/categories&gt;\n &lt;info&gt;\n   &lt;lastRun /&gt;\n   &lt;running&gt;false&lt;/running&gt;\n &lt;/info&gt;\n&lt;/node&gt;\n</code></pre>"},{"location":"developer/settings/#arcsde_harvesting","title":"Harvesting node arcsde","text":"<p>This harvester type is capable of harvesting metadata from an arcsde server.</p> <p>The settings for the arcsde harvester type are:</p> <pre><code>-    **node** (*string*): arcsde\n -   **site**\n     -   **server** (*string*): This is the name of the arcde server.\n     -   **port** (*integer*): Port number of arcsde server.\n     -   **username** (*string*): arcsde username\n     -   **password** (*string*): arcsde password\n     -   **database** (*string*): Name of arcsde database\n     -   **icon** (*string*): This is the icon that will be used as the metadata source logo. The image is taken from the `images/harvesting` folder and copied to the `images/logos` folder. A list of the possible values that can be used for this parameter can be obtained from the `xml.harvesting.info` service - see `xml_harvesting_info&amp;type=icons`{.interpreted-text role=\"ref\"}.\n</code></pre>"},{"location":"developer/settings/#xml-example_8","title":"XML Example","text":"<p>Harvester settings in XML are used by the harvester services - see Harvesting services. Example of arcsde harvester settings in XML:</p> <pre><code>&lt;node id=\"1259\" type=\"arcsde\"&gt;\n &lt;site&gt;\n   &lt;name&gt;test arcsde harvester&lt;/name&gt;\n   &lt;uuid&gt;5b5070d3-464a-484e-941a-e56812e46431&lt;/uuid&gt;\n   &lt;account&gt;\n     &lt;use&gt;false&lt;/use&gt;\n     &lt;username /&gt;\n     &lt;password /&gt;\n   &lt;/account&gt;\n   &lt;server&gt;arcsde_server.esri.com&lt;/server&gt;\n   &lt;port&gt;5151&lt;/port&gt;\n   &lt;username&gt;sde_user&lt;/username&gt;\n   &lt;password&gt;sde_password&lt;/password&gt;\n   &lt;database&gt;esri_sde&lt;/database&gt;\n   &lt;icon&gt;esri.gif&lt;/icon&gt;\n &lt;/site&gt;\n &lt;content&gt;\n   &lt;validate&gt;true&lt;/validate&gt;\n   &lt;importxslt&gt;none&lt;/importxslt&gt;\n &lt;/content&gt;\n &lt;options&gt;\n   &lt;every&gt;0 0 0 ? * *&lt;/every&gt;\n   &lt;oneRunOnly&gt;false&lt;/oneRunOnly&gt;\n   &lt;status&gt;inactive&lt;/status&gt;\n &lt;/options&gt;\n &lt;searches /&gt;\n &lt;categories&gt;\n   &lt;category id=\"4\" /&gt;\n &lt;/categories&gt;\n &lt;info&gt;\n   &lt;lastRun /&gt;\n   &lt;running&gt;false&lt;/running&gt;\n &lt;/info&gt;\n&lt;/node&gt;\n</code></pre>"},{"location":"developer/settings/#notes_6","title":"Notes","text":"<pre><code>-    this harvester does not use the content/importXslt setting\n-    ArcSDE java API libraries need to be installed by the user in GeoNetwork (folder `INSTALL_DIR/web/geonetwork/WEB-INF/lib`), as these are proprietary libraries not distributed with GeoNetwork. The following jars are required:\n\n-     jpe_sdk.jar\n-     jsde_sdk.jar\n</code></pre>"},{"location":"developer/settings/#ogcwxs_harvesting","title":"Harvesting node ogcwxs","text":"<p>This harvester type is capable of harvesting metadata from the GetCapabilities response of OGC services.</p> <p>The settings for an OGCWxS harvester type are:</p> <pre><code>-    **node** (*string*): ogcwxs\n -   **site**\n     -   **url** (*string*): OGC WxS service URL entry point. eg. &lt;http://localhost:7070/deegree/services&gt; - the harvester adds the necessary parameters to call the GetCapabilities service.\n     -   **ogctype** (*WMS1.0.0|WMS1.1.1|WMS1.3.0|WFS1.0.0|WFS1.1.0|* *|WCS1.0.0|WPS0.4.0|WPS1.0.0|CSW2.0.2|SOS1.0.0*): Type and version of OGC service being harvested.\n     -   **icon** (*string*): This is the icon that will be used as the metadata source logo. The image is taken from the `images/harvesting` folder and copied to the `images/logos` folder. A list of the possible values that can be used for this parameter can be obtained from the `xml.harvesting.info` service - see `xml_harvesting_info&amp;type=icons`{.interpreted-text role=\"ref\"}.\n -   **options**\n     -   **lang** (*string*) - three letter language code describing language of metadata being harvested - this value is used to set the metadata language in the records created by this harvester. Use &lt;http://your_geonetwork/geonetwork/srv/eng/xml.info?type=isolanguages&gt; to get a list of language codes that can be used for this setting.\n     -   **topic** (*string*) - ISO Topic Category. List of values comes from codelist of ISO topic category element (gmd:topicCategory).\n     -   **createThumbnails** (*boolean*) - if true and service is a WMS then thumbnails will be created for dataset metadata, if false then thumbnails will not be created\n     -   **useLayer** (*boolean*) - Create metadata for layer elements using GetCapabilities information\n     -   **useLayerMd** (*boolean*) - Create metadata for layer elements using remote metadata provided in the MetadataURL attribute (if the remote metadata doesn't exist/isn't recognized then GetCapabilities info will be used).\n     -   **datasetCategory** - (*integer*) Category id of GeoNetwork category that will be assigned to the dataset metadata records created by the harvester. Use &lt;http://your_geonetwork/geonetwork/srv/eng/xml.info?type=categories&gt; to get a list of category ids that can be used for this setting.\n     -   **outputSchema** (*string*) Metadata schema of ISO records that will be created from OGCWxS GetCapabilities harvester. A list of possible values for this parameter can be obtained from the `xml.harvesting.info` service, see `xml_harvesting_info&amp;type=ogcwxsOutputSchemas`{.interpreted-text role=\"ref\"}.\n</code></pre>"},{"location":"developer/settings/#xml-example_9","title":"XML Example","text":"<p>Harvester settings in XML are used by the harvester services - see Harvesting services. Example of OGCWxS GetCapabilities harvester settings in XML:</p> <pre><code>&lt;node id=\"1138\" type=\"ogcwxs\"&gt;\n &lt;site&gt;\n   &lt;name&gt;test ogcwxs&lt;/name&gt;\n   &lt;uuid&gt;87852766-536a-40b7-875a-3ab5ff24fa78&lt;/uuid&gt;\n   &lt;account&gt;\n     &lt;use&gt;false&lt;/use&gt;\n     &lt;username /&gt;\n     &lt;password /&gt;\n   &lt;/account&gt;\n   &lt;url&gt;http://localhost:6060/deegree2/services&lt;/url&gt;\n   &lt;ogctype&gt;WFS1.1.0&lt;/ogctype&gt;\n   &lt;icon&gt;default.gif&lt;/icon&gt;\n &lt;/site&gt;\n &lt;content&gt;\n   &lt;validate&gt;false&lt;/validate&gt;\n   &lt;importxslt&gt;none&lt;/importxslt&gt;\n &lt;/content&gt;\n &lt;options&gt;\n   &lt;every&gt;0 0 0 ? * *&lt;/every&gt;\n   &lt;oneRunOnly&gt;true&lt;/oneRunOnly&gt;\n   &lt;status&gt;inactive&lt;/status&gt;\n   &lt;lang&gt;eng&lt;/lang&gt;\n   &lt;topic&gt;elevation&lt;/topic&gt;\n   &lt;createThumbnails&gt;true&lt;/createThumbnails&gt;\n   &lt;useLayer&gt;true&lt;/useLayer&gt;\n   &lt;useLayerMd&gt;true&lt;/useLayerMd&gt;\n   &lt;datasetCategory&gt;2&lt;/datasetCategory&gt;\n   &lt;outputSchema&gt;iso19139&lt;/outputSchema&gt;\n &lt;/options&gt;\n &lt;privileges&gt;\n   &lt;group id=\"1\"&gt;\n     &lt;operation name=\"view\" /&gt;\n     &lt;operation name=\"dynamic\" /&gt;\n     &lt;operation name=\"featured\" /&gt;\n   &lt;/group&gt;\n &lt;/privileges&gt;\n &lt;categories&gt;\n   &lt;category id=\"3\" /&gt;\n &lt;/categories&gt;\n &lt;info&gt;\n   &lt;lastRun /&gt;\n   &lt;running&gt;false&lt;/running&gt;\n &lt;/info&gt;\n&lt;/node&gt;\n</code></pre>"},{"location":"developer/settings/#geoportal_rest_harvesting","title":"Harvesting node geoPREST","text":"<p>This harvester type is capable of querying a GeoPortal 9.3.x site and harvesting metadata using the GeoPortal REST API.</p> <pre><code>-    **node** (*string*): geoPREST\n -   **site**\n     -   **baseUrl** (*string*): Base URL of the GeoPortal server site. eg. &lt;http://yoursite.com/geoportal&gt;. REST URLs will be built from this URL.\n     -   **icon** (*string*): This is the icon that will be used as the metadata source logo. The image is taken from the `images/harvesting` folder and copied to the `images/logos` folder. A list of the possible values that can be used for this parameter can be obtained from the `xml.harvesting.info` service - see `xml_harvesting_info&amp;type=icons`{.interpreted-text role=\"ref\"}.\n -   **search** [0..n]: Contains search parameters. If this element is missing, no results will be returned. You can use the Lucene query syntax documented at &lt;http://webhelp.esri.com/geoportal_extension/9.3.1/index.htm#srch_lucene.htm&gt;.\n     -   **freeText** (*string*)\n</code></pre>"},{"location":"developer/settings/#xml-example_10","title":"XML Example","text":"<p>Harvester settings in XML are used by the harvester services - see Harvesting services. Example of geoPREST harvester settings in XML::</p> <pre><code>&lt;node id=\"978\" type=\"geoPREST\"&gt;\n &lt;site&gt;\n   &lt;name&gt;qldtest&lt;/name&gt;\n   &lt;uuid&gt;4b9de966-1d5f-4133-97da-f4232fb7761a&lt;/uuid&gt;\n   &lt;account&gt;\n     &lt;use&gt;true&lt;/use&gt;\n     &lt;username /&gt;\n     &lt;password /&gt;\n   &lt;/account&gt;\n   &lt;baseUrl&gt;http://qspatial.information.qld.gov.au/geoportal&lt;/baseUrl&gt;\n   &lt;icon&gt;default.gif&lt;/icon&gt;\n &lt;/site&gt;\n &lt;content&gt;\n   &lt;validate&gt;false&lt;/validate&gt;\n   &lt;importxslt&gt;none&lt;/importxslt&gt;\n &lt;/content&gt;\n &lt;options&gt;\n   &lt;every&gt;0 0 0 ? * *&lt;/every&gt;\n   &lt;oneRunOnly&gt;true&lt;/oneRunOnly&gt;\n   &lt;status&gt;inactive&lt;/status&gt;\n &lt;/options&gt;\n &lt;searches&gt;\n   &lt;search&gt;\n     &lt;freeText&gt;Barrier Reef&lt;/freeText&gt;\n   &lt;/search&gt;\n   &lt;search&gt;\n     &lt;freeText&gt;Cadastral&lt;/freeText&gt;\n   &lt;/search&gt;\n &lt;/searches&gt;\n &lt;privileges&gt;\n   &lt;group id=\"1\"&gt;\n     &lt;operation name=\"view\" /&gt;\n     &lt;operation name=\"dynamic\" /&gt;\n     &lt;operation name=\"featured\" /&gt;\n   &lt;/group&gt;\n &lt;/privileges&gt;\n &lt;categories&gt;\n   &lt;category id=\"2\" /&gt;\n &lt;/categories&gt;\n &lt;info&gt;\n   &lt;lastRun /&gt;\n   &lt;running&gt;false&lt;/running&gt;\n   &lt;result&gt;\n     &lt;total&gt;119&lt;/total&gt;\n     &lt;added&gt;87&lt;/added&gt;\n     &lt;updated&gt;32&lt;/updated&gt;\n     &lt;unchanged&gt;0&lt;/unchanged&gt;\n     &lt;unknownSchema&gt;0&lt;/unknownSchema&gt;\n     &lt;removed&gt;0&lt;/removed&gt;\n     &lt;unretrievable&gt;0&lt;/unretrievable&gt;\n     &lt;badFormat&gt;0&lt;/badFormat&gt;\n     &lt;doesNotValidate&gt;0&lt;/doesNotValidate&gt;\n   &lt;/result&gt;\n &lt;/info&gt;\n&lt;/node&gt;\n</code></pre>"},{"location":"developer/settings/#notes_7","title":"Notes","text":"<ul> <li> <p>this harvester uses two REST services from the GeoPortal API:</p> <ul> <li><code>rest/find/document</code> with searchText parameter to return an RSS listing of metadata records that meet the search criteria</li> <li><code>rest/document</code> with id parameter from each result returned in the RSS listing</li> </ul> </li> <li> <p>this harvester has been tested with GeoPortal 9.3.x. It should be used for that version of GeoPortal in preference to the CSW harvester.</p> </li> </ul>"},{"location":"developer/userinterface/","title":"User Interface","text":"<p>There are four different user interfaces on geonetwork:</p> <ul> <li>Classic - Perfect for hard environments, uses less javascript.</li> <li>Search - Uses the new widgets library. More responsive than the classic UI. Example Search</li> <li>TabSearch - Similar to the Search UI, but desktop-like as it uses tabs. Example TabSearch</li> <li>HTML5UI - Also based on widgets, makes use of latest web technologies.</li> </ul> <p>Compatibility table:</p> Compatibility &gt; IE &gt; Chrome &gt; Firefox &gt; Safari &gt; 7 &gt; 8 &gt; 9 &gt; 10 Classic &gt; X &gt; X &gt; X &gt; X &gt; X &gt; X Search &gt; X &gt; X &gt; X &gt; X &gt; X &gt; X TabSearch &gt; X &gt; X &gt; X &gt; X &gt; X &gt; X HTML5UI &gt; x &gt; X &gt; X &gt; X &gt; X &gt; X <p>Full compatibility: X</p> <p>Compatibility with penalties: x</p> <p>Blank spaces means no information provided for that case.</p>"},{"location":"developer/userinterface/#classic","title":"Classic","text":"<p>This is the default user interface in GeoNetwork. It is a complete user interface with all the functionalities the rest of the user interfaces have, but it is prepared to work on the hardest environments, using as less javascript and Ajax as possible, for example.</p> <p>You don't have to do anything special to run this user interface, as it is the default one.</p>"},{"location":"developer/userinterface/#search","title":"Search","text":"To use this UI, you have to compile the web project with widgets profile activated, like: <p>mvn clean package -Pwidgets</p> <p></p> <ul> <li>Widgets</li> </ul>"},{"location":"developer/userinterface/#tabsearch","title":"TabSearch","text":"To use this UI, you have to compile the web project with widgets-tab profile activated, like: <p>mvn clean package -Pwidgets-tab</p> <p></p> <ul> <li>Widgets</li> </ul>"},{"location":"developer/userinterface/#html5ui","title":"HTML5UI","text":"To use this UI, you have to compile the web project with html5ui profile activated, like: <p>mvn clean package -Phtml5ui</p> <p></p> <ul> <li>Widgets</li> </ul>"},{"location":"developer/userinterface/html5ui/","title":"HTML 5 UI","text":"<p>This is an html5 based UI which uses the wigets from geonetwork and the library ExtJS.</p> <ul> <li>Widgets</li> </ul> <p>It contains two maps: preview map and big map. You can access the big map clicking on the preview map. Both maps have synchronized layers, so if you add or remove (or change style) on one map layer, you will see that the other map also changes.</p> <p>Tested in Chrome, Firefox and IE&gt;8 (also works but with some penalties on IE7).</p>"},{"location":"developer/userinterface/html5ui/#changing-style","title":"Changing Style","text":"<p>Basic changing styling is pretty easy with this UI:</p>"},{"location":"developer/userinterface/html5ui/#colors","title":"Colors","text":"<p>There is a file on web-client/src/main/resources/apps/html5ui/css/colors.css which contains all the colors of the app.</p>"},{"location":"developer/userinterface/html5ui/#page-design","title":"Page design","text":"<p>The html is loaded from web/src/main/webapp/xsl/search.xsl This xsl is interpreted by jeeves and transformed to show the basic page. The page scheme is basically the same on all links, so if you change the position of some html elements, they will be changed on all views.</p> <p>Don't forget that some of the elements are also placed with css.</p> <p>Specific css for this UI (not shared with other UIs like search or tabsearch) is placed on web-client/src/main/resources/apps/html5ui/css/main.css</p>"},{"location":"developer/userinterface/html5ui/#results-view-templates","title":"Results view templates","text":"<p>They are on web/src/main/resources/apps/html5ui/js/Templates.js</p>"},{"location":"developer/userinterface/html5ui/#add-more-tabs","title":"Add more tabs","text":"<p>To add more tabs just look on search.xsl around line 240 (id=\"main-navigation\") and add a new element like this:</p> <pre><code>&lt;li&gt;\n    &lt;a id=\"new-tab\" href=\"//TODO\"&gt;\n        &lt;xsl:value-of select=\"/root/gui/strings/new-tab\" /&gt;\n    &lt;/a&gt;\n&lt;/li&gt;\n</code></pre> <p>The value of the string will be taken from the strings.xml file that corresponds to the language used.</p>"},{"location":"developer/userinterface/html5ui/#add-a-footer-link","title":"Add a footer link","text":"<p>Look for the div element with id = \"footer\" and just add it:</p> <pre><code>&lt;li&gt;\n    &lt;a href=\"http://geonetwork-opensource.org/\"&gt;GeoNetwork OpenSource&lt;/a&gt;\n&lt;/li&gt;\n</code></pre>"},{"location":"developer/userinterface/html5ui/#maps-and-other-elements-change-display-behaviour","title":"Maps and other elements: change display behaviour","text":"<p>Maps are always loaded even if they are not displayed. You can change this behaviour and allow (for example) the big map to be shown at all times. This is the same for all elements you see that disappear.</p> <p>To change this behaviour you should take a look at GlobalFunctions.js file. For each \"view\" you have one function that shows it and hides it. You can change them to allow, for example, that the big map is not hidden when results are shown:</p> <ul> <li>showBrowse</li> <li>hideBrowse</li> <li>showAdvancedSearch</li> <li>hideAdvancedSearch</li> <li>showBigMap</li> <li>...</li> </ul> If you add a new \"view\", you should update all this functions so the view is <p>hidden or shown when you want.</p>"},{"location":"developer/userinterface/html5ui/#settings","title":"Settings","text":"<p>There are a few configurations of this user interface defined on two javascript files.</p>"},{"location":"developer/userinterface/html5ui/#jssettingsjs","title":"js/Settings.js","text":"<p>You can find here some global configuration settings for the UI. Usually you won't have to change any of them.</p> <p>There are constants like:</p> <ul> <li>GeoNetwork.Settings.facetListConfig: used to configure the keywords for the facet search.</li> <li>OpenLayers.ProxyHostURL: (relative or absolute) path to url required by openlayers.</li> </ul>"},{"location":"developer/userinterface/html5ui/#jsmapsettingsjs","title":"js/map/Settings.js","text":"<p>You can find here some specific map configuration settings for the UI. You can use this file to set up the kind of projection and default base layers the maps will use.</p> <p>There are constants like:</p> <ul> <li>GeoNetwork.map.PROJECTION: Basic projection for maps. EPSG 900913 by default.</li> <li>GeoNetwork.map.BACKGROUND_LAYERS: Base layers for the maps.</li> <li>GeoNetwork.map.MAIN_MAP_OPTIONS: Used by the constructor of the main (big) map.</li> <li>GeoNetwork.map.MAP_OPTIONS: When the user interface creates a new secondary map, it uses this options on the constructor. Right now it works for the mini-map, but will be used on each view a secondary map is shown.</li> </ul>"},{"location":"developer/userinterface/html5ui/#changing-more-complex-features","title":"Changing more complex features","text":""},{"location":"developer/userinterface/html5ui/#debugging","title":"Debugging","text":"<p>To debug javascript you only have to add a \"debug\" or \"debug=true\" parameter to the url like this: http://....../srv/eng/search?debug</p>"},{"location":"developer/userinterface/html5ui/#adding-more-widgets","title":"Adding more widgets","text":"<p>Widgets are usually added on the file /web-client/src/main/resources/apps/html5ui/js/App.js or one of its children (see next section).</p>"},{"location":"developer/userinterface/html5ui/#global-variable-app","title":"Global variable app","text":"<p>App.js creates the app global variable wich has (or should have) all the information needed for the app to run.</p> <p>It also initializes some secondary objects which contains information and loads more widgets:</p> <pre><code>init : function() {\n\n    this.initializeEnvironment();\n\n    // Initialize utils\n    this.loginApp = new GeoNetwork.loginApp();\n    this.loginApp.init();\n    this.mapApp = new GeoNetwork.mapApp();\n    this.mapApp.init();\n    this.searchApp = new GeoNetwork.searchApp();\n    this.searchApp.init();\n\n    if (urlParameters.create !== undefined &amp;&amp; catalogue.isIdentified()) {\n        var actionCtn = Ext.getCmp('resultsPanel').getTopToolbar();\n        actionCtn.createMetadataAction.handler.apply(actionCtn);\n    }\n}\n</code></pre>"},{"location":"developer/userinterface/html5ui/#apploginapp","title":"app.loginApp","text":"<p>Should contain everything related to the authentication of the user like control buttons to log in and log out and handles the cookie.</p>"},{"location":"developer/userinterface/html5ui/#appmapapp","title":"app.mapApp","text":"<p>Should control everything related to maps. For example, if you want to add a new layer to the maps you should look here.</p> <p>Also initializes the maps (preview and big).</p>"},{"location":"developer/userinterface/html5ui/#appsearchapp","title":"app.searchApp","text":"<p>Closely related to Catalogue.js, it launches searches and initializes the results view. To change the advanced search you have to look here too.</p>"},{"location":"developer/userinterface/html5ui/#more-info","title":"More info","text":""},{"location":"developer/userinterface/html5ui/#history","title":"History","text":"<p>The ExtJS History plugin is also used on this UI. It is not quite stable (not at all on IE) but it can be modified to allow back button from browser to work.</p>"},{"location":"developer/userinterface/html5ui/#what-is-the-div-idonly_for_spiders","title":"What is the div id=\"only_for_spiders\"?","text":"<p>As the name says, this is for spiders or crawlers. When you access with the direct link to a metadata, that div will be used to load plain xml data so browsers can process it. Don't worry, if you are human you will not see it at all.</p>"},{"location":"developer/userinterface/widgets/","title":"Widgets","text":"<p>The GeoNetwork widget framework provides a list of independent pieces of code that let you build a geonetwork user interface.</p>"},{"location":"developer/userinterface/widgets/#add-widget","title":"Add widget","text":"<p>Widgets are (usually) pieces of html that will be shown on your user interface. You should place them in some html structure so they are visually arranged.</p> <p></p> <p>The widgets are prepared with some configuration options, so you can select some of the visual aspects. For example, on the picture above, you an select the number of tags on the cloud or the number of items shown on the \"latest\" section.</p> <p>To add a widget you should wait for the page to be loaded. This may be approached with the onReady function of ExtJS:</p> <pre><code>Ext.onReady(function() {\n   new GeoNetwork.TagCloudView({\n        catalogue : catalogue,\n        query : 'fast=true&amp;summaryOnly=true&amp;from=1&amp;to=4',\n        renderTo : 'cloud-tag',\n        onSuccess : 'app.loadResults'\n    });\n});\n</code></pre> <p>On this example, we just have to set up four properties on the constructor: the catalogue variable which makes all , the query which will be sent to the server to provide the items to show, the renderTo id of the div where the tag cloud will be drawn and the onSuccess function which will decorate and give style to the results of the tag cloud search.</p> <p>You can find the whole API of widgets here.</p>"},{"location":"developer/userinterface/widgets/#create-a-new-widget","title":"Create a new widget","text":"<p>You can create new widgets to add to your customized user interface. Using the same example as before, you can see that you can easily create new widgets.</p> <p>You just have to take care of two things:</p> <ul> <li>Visualization: define an html div where your widget will display information</li> <li>Manipulation of information: add some functionality (like a search connector) so the visualization has data to show.</li> </ul>"},{"location":"developer/userinterface/widgets/#using-outside-geonetwork","title":"Using outside GeoNetwork","text":"<p>Although it is a testing functionality, in fact you can use this same widgets on your own webpage. You just have to make sure that all dependencies are fulfilled and the settings are properly set up.</p> <p>As development will go on, this functionality will be made easier and documentation will be filled up.</p> <p>//TODO some simple examples</p>"},{"location":"developer/xml_services/","title":"XML Services","text":""},{"location":"developer/xml_services/category_xml_services/","title":"Category services","text":""},{"location":"developer/xml_services/category_xml_services/#category-list-xmlinfotypecategories","title":"Category List (xml.info&amp;type=categories)","text":"<p>The xml.info service can be used to retrieve the categories available in GeoNetwork. See <code>xml.info</code>.</p>"},{"location":"developer/xml_services/category_xml_services/#category-maintenance","title":"Category maintenance","text":""},{"location":"developer/xml_services/category_xml_services/#createupdate-a-category-xmlcategorycreateupdate","title":"Create/update a category (xml.category.create.update)","text":"<p>The xml.category.create.update service can be used to create a new category and update the information about an existing category. Only users with Administrator profile can create/update categories.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/category_xml_services/#request","title":"Request","text":"<p>Parameters:</p> <ul> <li>id: Category identifier to update. If not provided a new category is created with name provided.</li> <li>name: (mandatory) Name of the category</li> </ul> <p>Category update request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.category.create.update\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;request&gt;\n    &lt;id&gt;2&lt;/id&gt;\n    &lt;name&gt;folios&lt;/name&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/category_xml_services/#response","title":"Response","text":"<p>If the request executed successfully, then an HTTP 200 status code is returned along with an XML document that confirms the operation that has taken place. An example of a response to an update request is::</p> <pre><code>&lt;response&gt;\n  &lt;operation&gt;updated&lt;/operation&gt;\n&lt;/response&gt;\n</code></pre> <p>An example of a response to a create request is::</p> <pre><code>&lt;response&gt;\n  &lt;operation&gt;added&lt;/operation&gt;\n&lt;/response&gt;\n</code></pre> <p>If the request fails, then a HTTP 500 status code error is returned and the response contains an XML document with the details of the exception/what went wrong. An example of such a response is::</p> <pre><code>&lt;error id=\"missing-parameter\"&gt;\n   &lt;message&gt;name&lt;/message&gt;\n   &lt;class&gt;MissingParameterEx&lt;/class&gt;\n   .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/category_xml_services/#errors","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile is not permitted to execute the service. Returns 500 HTTP code</li> <li>Missing parameter (error id: missing-parameter), when mandatory parameters are not provided. Returns 500 HTTP code</li> <li>bad-parameter name, when name it's empty. Returns 500 HTTP code</li> <li>ERROR: duplicate key violates unique constraint \"categories_name_key\", when trying to create a new category using an existing category name. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/category_xml_services/#update-label-translations-xmlcategoryupdate","title":"Update label translations (xml.category.update)","text":"<p>The xml.category.update service can be used to update translations of a category name. Only users with Administrator profile can update category name translations.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/category_xml_services/#request_1","title":"Request","text":"<p>Parameters:</p> <ul> <li>category: Container for category information</li> <li>id: (mandatory) Category identifier to update</li> <li>label: (mandatory) This is just a container to hold the category names translated in the languages supported by GeoNetwork. Each translated label is enclosed in a tag that identifies the language code</li> </ul> <p>Category label update request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.category.update\n\nMime-type:\napplication/xml\n\nPost request:  \n&lt;request&gt;\n    &lt;category id=\"2\"&gt;\n        &lt;label&gt;\n            &lt;eng&gt;folios&lt;/eng&gt;\n        &lt;/label&gt;\n    &lt;/category&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/category_xml_services/#response_1","title":"Response","text":"<p>Category label update response example:</p> <pre><code>&lt;ok /&gt;\n</code></pre>"},{"location":"developer/xml_services/category_xml_services/#errors_1","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> <li>Missing parameter (error id: missing-parameter), when mandatory parameters are not provided. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/category_xml_services/#get-a-category-xmlcategoryget","title":"Get a category (xml.category.get)","text":"<p>The xml.category.get service can be used to retrieve information on an existing category.</p> <p>Requires authentification: Yes</p>"},{"location":"developer/xml_services/category_xml_services/#request_2","title":"Request","text":"<p>Parameters:</p> <ul> <li>id: (mandatory) Category identifier to retrieve</li> </ul> <p>Category get request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.category.get\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;request&gt;\n    &lt;id&gt;2&lt;/id&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/category_xml_services/#response_2","title":"Response","text":"<p>If the request executed succesfully then an HTTP 200 status code is returned and an XML document containing the category information is returned. An example response is::</p> <pre><code>&lt;response&gt;\n  &lt;record&gt;\n    &lt;id&gt;2&lt;/id&gt;\n    &lt;name&gt;datasets&lt;/name&gt;\n    &lt;label&gt;\n      &lt;ara&gt;Datasets&lt;/ara&gt;\n      &lt;cat&gt;Conjunts de dades&lt;/cat&gt;\n      &lt;eng&gt;Datasets&lt;/eng&gt;\n      .....\n    &lt;/label&gt;\n  &lt;/record&gt;\n&lt;/response&gt;\n</code></pre> <p>If the request fails then an HTTP 500 status code error is returned and the response contains an XML document with the details of the exception/what went wrong. An example error response is::</p> <pre><code>&lt;error id=\"missing-parameter\"&gt;\n  &lt;message&gt;id&lt;/message&gt;\n  &lt;class&gt;MissingParameterEx&lt;/class&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/category_xml_services/#errors_2","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> <li>Missing parameter (error id: missing-parameter), when mandatory parameters are not provided. Returns 500 HTTP code</li> <li>bad-parameter id, when id parameter is empty/invalid. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/category_xml_services/#remove-a-category-xmlcategoryremove","title":"Remove a category (xml.category.remove)","text":"<p>The xml.category.remove service can be used to remove an existing category. Only users with Administrator profile can delete categories.</p> <p>Requires authentification: Yes</p>"},{"location":"developer/xml_services/category_xml_services/#request_3","title":"Request","text":"<p>Parameters:</p> <ul> <li>id: (mandatory) Category identifier to delete</li> </ul> <p>Category remove request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.category.remove\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;request&gt;\n    &lt;id&gt;2&lt;/id&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/category_xml_services/#response_3","title":"Response","text":"<p>If the request executed succesfully then an HTTP 200 status code is returned and an XML document confirming the remove operation is returned. An example response is::</p> <pre><code>&lt;response&gt;\n  &lt;operation&gt;removed&lt;/operation&gt;\n&lt;/response&gt;\n</code></pre> <p>If the request fails then an HTTP 500 status code error is returned and the response contains an XML document with the details of the exception/what went wrong. An example error response is::</p> <pre><code>&lt;error id=\"missing-parameter\"&gt;\n  &lt;message&gt;id&lt;/message&gt;\n  &lt;class&gt;MissingParameterEx&lt;/class&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/category_xml_services/#errors_3","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> <li>Missing parameter (error id: missing-parameter), when mandatory parameters are not provided. Returns 500 HTTP code</li> <li>bad-parameter id, when id parameter is empty/invalid. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/csw_services/","title":"CSW service","text":"<p>GeoNetwork opensource catalog publishes metadata using the OGC CSW (Catalog Services for the Web) protocol supporting HTTP binding to invoke the operations.</p> <p>The protocol operations are described in the document OpenGIS\u00ae Catalogue Services Specification:</p> <p>http://portal.opengeospatial.org/files/?artifact_id=20555</p> <p>GeoNetwork is compliant with the 2.0.2 version of the specification, supporting the following CSW operations:</p> <ul> <li>GetCapabilities</li> <li>DescribeRecord</li> <li>GetRecordById</li> <li>GetRecords</li> <li>Harvest</li> <li>Transaction</li> </ul> <p>This chapter briefly describes the different operations supported in GeoNetwork and gives some usage examples. To get a complete reference of the operations and parameters of each CSW operation refer to the document OpenGIS\u00ae Catalogue Services Specification.</p> <p>The invocation of the operations from a Java client is analogous as described in the chapter for XML services.</p>"},{"location":"developer/xml_services/csw_services/#csw-operations","title":"CSW operations","text":"<p>The CSW operations are divided in 2 types: Discovery and Publication. The Discovery operations are used to query the server about its capacities and to search and retrieve metadata from it. The Publication opertions (Harvest and Transaction) are used to insert metadata into the catalog.</p> <p>The CSW operations can be accesed using POST, GET methods and SOAP encoding.</p> <p>The GeoNetwork opensource catalog CSW Discovery service operations are accessible through the url:</p> <p>http://localhost:8080/geonetwork/srv/eng/csw</p>"},{"location":"developer/xml_services/csw_services/#GetCapabilities","title":"GetCapabilities","text":"<p>GetCapabilities operation allows CSW clients to retrieve service metadata from a server. The response to a GetCapabilities request is an XML document containing service metadata about the server.</p>"},{"location":"developer/xml_services/csw_services/#request-examples","title":"Request examples","text":"<p>GET request:</p> <pre><code>http://localhost:8080/geonetwork/srv/eng/csw?request=GetCapabilities&amp;service=CSW&amp;acceptVersions=2.0.2&amp;acceptFormats=application%2Fxml\n</code></pre> <p>POST request:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/csw\n\nContent-type:\napplication/xml\n\nPost data:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;csw:GetCapabilities xmlns:csw=\"http://www.opengis.net/cat/csw/2.0.2\" service=\"CSW\"&gt;\n&lt;ows:AcceptVersions xmlns:ows=\"http://www.opengis.net/ows\"&gt;\n&lt;ows:Version&gt;2.0.2&lt;/ows:Version&gt;\n&lt;/ows:AcceptVersions&gt;\n&lt;ows:AcceptFormats xmlns:ows=\"http://www.opengis.net/ows\"&gt;\n&lt;ows:OutputFormat&gt;application/xml&lt;/ows:OutputFormat&gt;\n&lt;/ows:AcceptFormats&gt;\n&lt;/csw:GetCapabilities&gt;\n</code></pre> <p>SOAP request:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/csw\n\nContent-type:\napplication/soap+xml\n\nPost data:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;env:Envelope xmlns:env=\"http://www.w3.org/2003/05/soap-envelope\"&gt;\n&lt;env:Body&gt;\n&lt;csw:GetCapabilities xmlns:csw=\"http://www.opengis.net/cat/csw/2.0.2\"\nservice=\"CSW\"&gt;\n&lt;ows:AcceptVersions xmlns:ows=\"http://www.opengis.net/ows\"&gt;\n&lt;ows:Version&gt;2.0.2&lt;/ows:Version&gt;\n&lt;/ows:AcceptVersions&gt;\n&lt;ows:AcceptFormats xmlns:ows=\"http://www.opengis.net/ows\"&gt;\n&lt;ows:OutputFormat&gt;application/xml&lt;/ows:OutputFormat&gt;\n&lt;/ows:AcceptFormats&gt;\n&lt;/csw:GetCapabilities&gt;\n&lt;/env:Body&gt;\n&lt;/env:Envelope&gt;\n</code></pre>"},{"location":"developer/xml_services/csw_services/#DescribeRecord","title":"DescribeRecord","text":"<p>DescribeRecord operation allows a client to discover elements of the information model supported by the target catalogue service. The operation allows some or all of the information model to be described.</p>"},{"location":"developer/xml_services/csw_services/#request-examples_1","title":"Request examples","text":"<p>GET request:</p> <pre><code>http://localhost:8080/geonetwork/srv/eng/csw?request=DescribeRecord&amp;service=CSW&amp;version=2.0.2&amp;outputFormat=application%2Fxml&amp;schemaLanguage=http%3A%2F%2Fwww.w3.org%2FXML%2FSchema&amp;namespace=csw%3Ahttp%3A%2F%2Fwww.opengis.net%2Fcat%2Fcsw%2F2.0.2\n</code></pre> <p>POST request:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/csw\n\nContent-type:\napplication/xml\n\nPost data:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;csw:DescribeRecord xmlns:csw=\"http://www.opengis.net/cat/csw/2.0.2\" service=\"CSW\" version=\"2.0.2\" outputFormat=\"application/xml\" schemaLanguage=\"http://www.w3.org/XML/Schema\" /&gt;\n</code></pre> <p>SOAP request:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/csw\n\nContent-type:\napplication/soap+xml\n\nPost data:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;env:Envelope xmlns:env=\"http://www.w3.org/2003/05/soap-envelope\"&gt;\n  &lt;env:Body&gt;\n    &lt;csw:DescribeRecord xmlns:csw=\"http://www.opengis.net/cat/csw/2.0.2\" service=\"CSW\" version=\"2.0.2\" outputFormat=\"application/xml\" schemaLanguage=\"http://www.w3.org/XML/Schema\" /&gt;\n  &lt;/env:Body&gt;\n&lt;/env:Envelope&gt;\n</code></pre>"},{"location":"developer/xml_services/csw_services/#GetRecordById","title":"GetRecordById","text":"<p>GetRecordById request retrieves the default representation of catalogue metadata records using their identifier.</p> <p>To retrieve non public metadata a previous xml.user.login service invocation is required. See <code>login service &lt;xml.user.login&gt;</code>.</p>"},{"location":"developer/xml_services/csw_services/#request-examples_2","title":"Request examples","text":"<p>GET request:</p> <pre><code>http://localhost:8080/geonetwork/srv/eng/csw?request=GetRecordById&amp;service=CSW&amp;version=2.0.2&amp;elementSetName=full&amp;id=5df54bf0-3a7d-44bf-9abf-84d772da8df1\n</code></pre> <p>POST request:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/csw\n\nContent-type:\napplication/xml\n\nPost data:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n  &lt;csw:GetRecordById xmlns:csw=\"http://www.opengis.net/cat/csw/2.0.2\" service=\"CSW\" version=\"2.0.2\"&gt;\n  &lt;csw:Id&gt;5df54bf0-3a7d-44bf-9abf-84d772da8df1&lt;/csw:Id&gt;\n  &lt;csw:ElementSetName&gt;full&lt;/csw:ElementSetName&gt;\n&lt;/csw:GetRecordById&gt;\n</code></pre> <p>SOAP request:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/csw\n\nContent-type:\napplication/soap+xml\n\nPost data:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;env:Envelope xmlns:env=\"http://www.w3.org/2003/05/soap-envelope\"&gt;\n  &lt;env:Body&gt;\n    &lt;csw:GetRecordById xmlns:csw=\"http://www.opengis.net/cat/csw/2.0.2\" service=\"CSW\" version=\"2.0.2\"&gt;\n      &lt;csw:Id&gt;5df54bf0-3a7d-44bf-9abf-84d772da8df1&lt;/csw:Id&gt;\n      &lt;csw:ElementSetName&gt;full&lt;/csw:ElementSetName&gt;\n    &lt;/csw:GetRecordById&gt;\n  &lt;/env:Body&gt;\n&lt;/env:Envelope&gt;\n</code></pre>"},{"location":"developer/xml_services/csw_services/#GetRecords","title":"GetRecords","text":"<p>GetRecords request allows to query the catalogue metadata records specifying a query in OCG Filter or CQL languages.</p> <p>To retrieve non public metadata a previous xml.user.login service invocation is required. See <code>login service &lt;xml.user.login&gt;</code>.</p>"},{"location":"developer/xml_services/csw_services/#request-examples_3","title":"Request examples","text":"<p>GET request (using CQL language):</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/csw?request=GetRecords&amp;service=CSW&amp;version=2.0.2&amp;namespace=xmlns%28csw%3Dhttp%3A%2F%2Fwww.opengis.net%2Fcat%2Fcsw%2F2.0.2%29%2Cxmlns%28gmd%3Dhttp%3A%2F%2Fwww.isotc211.org%2F2005%2Fgmd%29&amp;constraint=AnyText+like+%25africa%25&amp;constraintLanguage=CQL_TEXT&amp;constraint_language_version=1.1.0&amp;typeNames=csw%3ARecord\n</code></pre> <p>POST request:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/csw\n\nContent-type:\napplication/xml\n\nPost data:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;csw:GetRecords xmlns:csw=\"http://www.opengis.net/cat/csw/2.0.2\" service=\"CSW\" version=\"2.0.2\"&gt;\n  &lt;csw:Query typeNames=\"csw:Record\"&gt;\n    &lt;csw:Constraint version=\"1.1.0\"&gt;\n      &lt;Filter xmlns=\"http://www.opengis.net/ogc\" xmlns:gml=\"http://www.opengis.net/gml\"&gt;\n        &lt;PropertyIsLike wildCard=\"%\" singleChar=\"_\" escape=\"\\\"&gt;\n          &lt;PropertyName&gt;AnyText&lt;/PropertyName&gt;\n          &lt;Literal&gt;%africa%&lt;/Literal&gt;\n        &lt;/PropertyIsLike&gt;\n      &lt;/Filter&gt;\n    &lt;/csw:Constraint&gt;\n  &lt;/csw:Query&gt;\n&lt;/csw:GetRecords&gt;\n</code></pre> <p>SOAP request:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/csw\n\nContent-type:\napplication/soap+xml\n\nPost data:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;env:Envelope xmlns:env=\"http://www.w3.org/2003/05/soap-envelope\"&gt;\n  &lt;env:Body&gt;\n    &lt;csw:GetRecords xmlns:csw=\"http://www.opengis.net/cat/csw/2.0.2\" service=\"CSW\" version=\"2.0.2\"&gt;\n      &lt;csw:Query typeNames=\"csw:Record\"&gt;\n        &lt;csw:Constraint version=\"1.1.0\"&gt;\n          &lt;Filter xmlns=\"http://www.opengis.net/ogc\" xmlns:gml=\"http://www.opengis.net/gml\"&gt;\n            &lt;PropertyIsLike wildCard=\"%\" singleChar=\"_\" escape=\"\\\"&gt;\n              &lt;PropertyName&gt;AnyText&lt;/PropertyName&gt;\n              &lt;Literal&gt;%africa%&lt;/Literal&gt;\n            &lt;/PropertyIsLike&gt;\n          &lt;/Filter&gt;\n        &lt;/csw:Constraint&gt;\n      &lt;/csw:Query&gt;\n    &lt;/csw:GetRecords&gt;\n  &lt;/env:Body&gt;\n&lt;/env:Envelope&gt;\n</code></pre> <p>The GeoNetwork opensource catalog CSW Publication service operations are accessible through the url:</p> <p>http://localhost:8080/geonetwork/srv/eng/csw-publication</p>"},{"location":"developer/xml_services/csw_services/#Harvest","title":"Harvest","text":"<p>The Harvest operation defines an interface for indirectly creating, modifying and deleting catalogue records by invoking a CSW client harvesting run from the server to a specified target. It can be run in either synchronous or asynchronous mode and the harvesting run can be executed just once or periodically. This operation requires user authentification to be invoked.</p>"},{"location":"developer/xml_services/csw_services/#synchronous-one-run-harvest-example","title":"Synchronous one-run Harvest example","text":"<p>POST request:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/csw-publication\n\nContent-type:\napplication/xml\n\nPost data:\n  &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n  &lt;csw:Harvest xmlns:csw=\"http://www.opengis.net/cat/csw/2.0.2\" xmlns:gmd=\"http://www.isotc211.org/2005/gmd\" service=\"CSW\" version=\"2.0.2\"&gt;\n      &lt;csw:Source&gt;http://[ URL to the target CSW server ]?request=GetCapabilities&amp;amp;service=CSW&amp;amp;version=2.0.2&lt;/csw:Source&gt;\n      &lt;csw:ResourceType&gt;http://www.isotc211.org/schemas/2005/gmd/&lt;/csw:ResourceType&gt;\n  &lt;/csw:Harvest&gt;\n</code></pre> <p>GET request:</p> <pre><code>Url:\n  http://localhost:8080/geonetwork/srv/eng/csw-publication?request=Harvest&amp;service=CSW&amp;version=2.0.2&amp;Source=http://[ URL to the target CSW server ]&amp;ResourceType=http://www.isotc211.org/schemas/2005/gmd/\n</code></pre> <p>Response:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;csw:HarvestResponse xmlns:csw=\"http://www.opengis.net/cat/csw/2.0.2\"&gt;\n    &lt;csw:TransactionResponse&gt;\n        &lt;csw:TransactionSummary&gt;\n            &lt;csw:totalInserted&gt;22&lt;/csw:totalInserted&gt;\n            &lt;csw:totalUpdated&gt;0&lt;/csw:totalUpdated&gt;\n            &lt;csw:totalDeleted&gt;0&lt;/csw:totalDeleted&gt;\n        &lt;/csw:TransactionSummary&gt;\n    &lt;/csw:TransactionResponse&gt;\n&lt;/csw:HarvestResponse&gt;\n</code></pre>"},{"location":"developer/xml_services/csw_services/#aynchronous-one-run-harvest-example","title":"Aynchronous one-run Harvest example","text":"<p>POST request:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/csw-publication\n\nContent-type:\napplication/xml\n\nPost data:\n  &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n  &lt;csw:Harvest xmlns:csw=\"http://www.opengis.net/cat/csw/2.0.2\" xmlns:gmd=\"http://www.isotc211.org/2005/gmd\" service=\"CSW\" version=\"2.0.2\"&gt;\n      &lt;csw:Source&gt;http://[ URL to the target CSW server ]?request=GetCapabilities&amp;amp;service=CSW&amp;amp;version=2.0.2&lt;/csw:Source&gt;\n      &lt;csw:ResourceType&gt;http://www.isotc211.org/schemas/2005/gmd/&lt;/csw:ResourceType&gt;\n      &lt;csw:ResponseHandler&gt;[ URI or email address of response handler ]&lt;/csw:ResponseHandler&gt;\n  &lt;/csw:Harvest&gt;\n</code></pre> <p>GET request:</p> <pre><code>Url:\n  http://localhost:8080/geonetwork/srv/eng/csw-publication?request=Harvest&amp;service=CSW&amp;version=2.0.2&amp;Source=http://[ URL to the target CSW server ]&amp;ResourceType=http://www.isotc211.org/schemas/2005/gmd/&amp;ResponseHandler=[ URI or email address of response handler ]\n</code></pre> <p>Response:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;csw:HarvestResponse xmlns:csw=\"http://www.opengis.net/cat/csw/2.0.2\"&gt;\n  &lt;csw:Acknowledgement timeStamp=\"2011-12-05T15:13:59\"&gt;\n    &lt;csw:EchoedRequest&gt;\n        &lt;csw:Harvest xmlns:csw=\"http://www.opengis.net/cat/csw/2.0.2\" xmlns:gmd=\"http://www.isotc211.org/2005/gmd\" service=\"CSW\" version=\"2.0.2\"&gt;\n            &lt;csw:Source&gt;http://[ URL to the target CSW server ]?request=GetCapabilities&amp;amp;service=CSW&amp;amp;version=2.0.2&lt;/csw:Source&gt;\n            &lt;csw:ResourceType&gt;http://www.isotc211.org/schemas/2005/gmd/&lt;/csw:ResourceType&gt;\n            &lt;csw:ResponseHandler&gt;[ URI or email address of response handler ]&lt;/csw:ResponseHandler&gt;\n        &lt;/csw:Harvest&gt;\n    &lt;/csw:EchoedRequest&gt;\n    &lt;csw:RequestId&gt;e7684bec-1fa9-4053-814f-7ae970d7a4a1&lt;/csw:RequestId&gt;\n  &lt;/csw:Acknowledgement&gt;\n&lt;/csw:HarvestResponse&gt;\n</code></pre>"},{"location":"developer/xml_services/csw_services/#Transaction","title":"Transaction","text":"<p>The Transaction operation defines an interface for creating, modifying and deleting catalogue records. This operation requires user authentification to be invoqued.</p>"},{"location":"developer/xml_services/csw_services/#insert-operation-example","title":"Insert operation example","text":"<p>POST request:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/csw-publication\n\nContent-type:\napplication/xml\n\nPost data:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;csw:Transaction xmlns:csw=\"http://www.opengis.net/cat/csw/2.0.2\" version=\"2.0.2\" service=\"CSW\"&gt;\n  &lt;csw:Insert&gt;\n    &lt;gmd:MD_Metadata xmlns:gmd=\"http://www.isotc211.org/2005/gmd\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:gml=\"http://www.opengis.net/gml\" ....&gt;\n    ...\n    &lt;/gmd:MD_Metadata&gt;\n  &lt;/csw:Insert&gt;\n&lt;/csw:Transaction&gt;\n</code></pre> <p>Response:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;csw:TransactionResponse xmlns:csw=\"http://www.opengis.net/cat/csw/2.0.2\"&gt;\n  &lt;csw:TransactionSummary&gt;\n    &lt;csw:totalInserted&gt;1&lt;/csw:totalInserted&gt;\n    &lt;csw:totalUpdated&gt;0&lt;/csw:totalUpdated&gt;\n    &lt;csw:totalDeleted&gt;0&lt;/csw:totalDeleted&gt;\n  &lt;/csw:TransactionSummary&gt;\n&lt;/csw:TransactionResponse&gt;\n</code></pre>"},{"location":"developer/xml_services/csw_services/#update-operation-example","title":"Update operation example","text":"<p>POST request:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/csw-publication\n\nContent-type:\napplication/xml\n\nPost data:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;csw:Transaction xmlns:csw=\"http://www.opengis.net/cat/csw/2.0.2\" version=\"2.0.2\" service=\"CSW\"&gt;\n  &lt;csw:Update&gt;\n    &lt;gmd:MD_Metadata xmlns:gmd=\"http://www.isotc211.org/2005/gmd\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:gml=\"http://www.opengis.net/gml\" ....&gt;\n    ...\n    &lt;/gmd:MD_Metadata&gt;\n    &lt;csw:Constraint version=\"1.1.0\"&gt;\n      &lt;ogc:Filter&gt;\n        &lt;ogc:PropertyIsEqualTo&gt;\n          &lt;ogc:PropertyName&gt;title&lt;/ogc:PropertyName&gt;\n          &lt;ogc:Literal&gt;Eurasia&lt;/ogc:Literal&gt;\n        &lt;/ogc:PropertyIsEqualTo&gt;\n      &lt;/ogc:Filter&gt;\n    &lt;/csw:Constraint&gt;\n  &lt;/csw:Update&gt;\n&lt;/csw:Transaction&gt;\n</code></pre> <p>Response:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;csw:TransactionResponse xmlns:csw=\"http://www.opengis.net/cat/csw/2.0.2\"&gt;\n  &lt;csw:TransactionSummary&gt;\n    &lt;csw:totalInserted&gt;0&lt;/csw:totalInserted&gt;\n    &lt;csw:totalUpdated&gt;1&lt;/csw:totalUpdated&gt;\n    &lt;csw:totalDeleted&gt;0&lt;/csw:totalDeleted&gt;\n  &lt;/csw:TransactionSummary&gt;\n&lt;/csw:TransactionResponse&gt;\n</code></pre>"},{"location":"developer/xml_services/csw_services/#delete-operation-example","title":"Delete operation example","text":"<p>POST request:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/csw-publication\n\nContent-type:\napplication/xml\n\nPost data:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;csw:Transaction xmlns:csw=\"http://www.opengis.net/cat/csw/2.0.2\" xmlns:ogc=\"http://www.opengis.net/ogc\" version=\"2.0.2\" service=\"CSW\"&gt;\n  &lt;csw:Delete&gt;\n    &lt;csw:Constraint version=\"1.1.0\"&gt;\n      &lt;ogc:Filter&gt;\n        &lt;ogc:PropertyIsEqualTo&gt;\n          &lt;ogc:PropertyName&gt;title&lt;/ogc:PropertyName&gt;\n          &lt;ogc:Literal&gt;africa&lt;/ogc:Literal&gt;\n        &lt;/ogc:PropertyIsEqualTo&gt;\n      &lt;/ogc:Filter&gt;\n    &lt;/csw:Constraint&gt;\n  &lt;/csw:Delete&gt;\n&lt;/csw:Transaction&gt;\n</code></pre> <p>Response:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;csw:TransactionResponse xmlns:csw=\"http://www.opengis.net/cat/csw/2.0.2\"&gt;\n  &lt;csw:TransactionSummary&gt;\n    &lt;csw:totalInserted&gt;0&lt;/csw:totalInserted&gt;\n    &lt;csw:totalUpdated&gt;0&lt;/csw:totalUpdated&gt;\n    &lt;csw:totalDeleted&gt;1&lt;/csw:totalDeleted&gt;\n  &lt;/csw:TransactionSummary&gt;\n&lt;/csw:TransactionResponse&gt;\n</code></pre>"},{"location":"developer/xml_services/csw_services/#errors","title":"Errors","text":"<ul> <li>User is not authenticated:<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;ows:ExceptionReport xmlns:ows=\"http://www.opengis.net/ows\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" version=\"1.0.0\" xsi:schemaLocation=  \"http://www.opengis.net/ows http://schemas.opengis.net/ows/1.0.0/owsExceptionReport.xsd\"&gt;\n  &lt;ows:Exception exceptionCode=\"NoApplicableCode\"&gt;\n    &lt;ows:ExceptionText&gt;Cannot process transaction: User not authenticated.&lt;/ows:ExceptionText&gt;\n  &lt;/ows:Exception&gt;\n&lt;/ows:ExceptionReport&gt;\n</code></pre> </li> </ul>"},{"location":"developer/xml_services/group_xml_services/","title":"Group services","text":""},{"location":"developer/xml_services/group_xml_services/#group-list-xmlinfotypegroups","title":"Group List (xml.info&amp;type=groups)","text":"<p>The xml.info service can be used to retrieve the user groups available in GeoNetwork. See <code>xml.info</code>.</p>"},{"location":"developer/xml_services/group_xml_services/#group-maintenance","title":"Group maintenance","text":""},{"location":"developer/xml_services/group_xml_services/#createupdate-a-group-xmlgroupcreateupdate","title":"Create/update a group (xml.group.create.update)","text":"<p>The xml.group.create.update service can be used to create a new group and update the information about an existing group. Only users with Administrator profile can create/update groups.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/group_xml_services/#request","title":"Request","text":"<p>Parameters:</p> <ul> <li>id: Group identifier to update. If not provided a new group is created with the name, description and email parameters provided.</li> <li>name: (mandatory) Name of the group</li> <li>description: Group description</li> <li>email: email address for group notifications</li> </ul> <p>Group update request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.group.create.update\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;request&gt;\n    &lt;id&gt;2&lt;/id&gt;\n    &lt;name&gt;sample&lt;/name&gt;\n    &lt;description&gt;Demo group&lt;/description&gt;\n    &lt;email&gt;group@mail.net&lt;/email&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/group_xml_services/#response","title":"Response","text":"<p>If the request executed successfully, then an HTTP 200 status code is returned along with an XML document that confirms the operation that has taken place. An example of a response to an update request is::</p> <pre><code>&lt;response&gt;\n  &lt;operation&gt;updated&lt;/operation&gt;\n&lt;/response&gt;\n</code></pre> <p>An example of a response to a create request is::</p> <pre><code>&lt;response&gt;\n  &lt;operation&gt;added&lt;/operation&gt;\n&lt;/response&gt;\n</code></pre> <p>If the request fails, then a HTTP 500 status code error is returned and the response contains an XML document with the details of the exception/what went wrong. An example of such a response is::</p> <pre><code>&lt;error id=\"missing-parameter\"&gt;\n   &lt;message&gt;name&lt;/message&gt;\n   &lt;class&gt;MissingParameterEx&lt;/class&gt;\n   .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/group_xml_services/#errors","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile is not permitted to execute the service. Returns 500 HTTP code</li> <li>Missing parameter (error id: missing-parameter), when mandatory parameters are not provided. Returns 500 HTTP code</li> <li>bad-parameter name, when name it's empty. Returns 500 HTTP code</li> <li>ERROR: duplicate key violates unique constraint \"groups_name_key\", when trying to create a new group using an existing group name. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/group_xml_services/#update-label-translations-xmlgroupupdate","title":"Update label translations (xml.group.update)","text":"<p>The xml.group.update service can be used to update translations of a group name. Only users with Administrator profile can update group name translations.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/group_xml_services/#request_1","title":"Request","text":"<p>Parameters:</p> <ul> <li>group: Container for group information</li> <li>id: (mandatory) Group identifier to update</li> <li>label: (mandatory) This is just a container to hold the group names translated in the languages supported by GeoNetwork. Each translated label is enclosed in a tag that identifies the language code</li> </ul> <p>Group label update request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.group.update\n\nMime-type:\napplication/xml\n\nPost request:  \n&lt;request&gt;\n    &lt;group id=\"2\"&gt;\n        &lt;label&gt;\n            &lt;es&gt;Grupo de ejemplo&lt;/es&gt;\n        &lt;/label&gt;\n    &lt;/group&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/group_xml_services/#response_1","title":"Response","text":"<p>Group label update response example:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;ok /&gt;\n</code></pre>"},{"location":"developer/xml_services/group_xml_services/#errors_1","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> <li>Missing parameter (error id: missing-parameter), when mandatory parameters are not provided. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/group_xml_services/#get-a-group-xmlgroupget","title":"Get a group (xml.group.get)","text":"<p>The xml.group.get service can be used to retrieve information on an existing group.</p> <p>Requires authentification: Yes</p>"},{"location":"developer/xml_services/group_xml_services/#request_2","title":"Request","text":"<p>Parameters:</p> <ul> <li>id: (mandatory) Group identifier to retrieve</li> </ul> <p>Group get request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.group.get\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;request&gt;\n    &lt;id&gt;2&lt;/id&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/group_xml_services/#response_2","title":"Response","text":"<p>If the request executed succesfully then an HTTP 200 status code is returned and an XML document containing the group information is returned. An example response is::</p> <pre><code>&lt;response&gt;\n  &lt;record&gt;\n    &lt;id&gt;1&lt;/id&gt;\n    &lt;name&gt;all&lt;/name&gt;\n    &lt;description/&gt;\n    &lt;email/&gt;\n    &lt;referrer/&gt;\n    &lt;label&gt;\n      &lt;ara&gt;All&lt;/ara&gt;\n      &lt;cat&gt;All&lt;/cat&gt;\n      &lt;chi&gt;All&lt;/chi&gt;\n      &lt;dut&gt;Iedereen&lt;/dut&gt;\n      &lt;eng&gt;All&lt;/eng&gt;\n      .....\n    &lt;/label&gt;\n  &lt;/record&gt;\n&lt;/response&gt;\n</code></pre> <p>If the request fails then an HTTP 500 status code error is returned and the response contains an XML document with the details of the exception/what went wrong. An example error response is::</p> <pre><code>&lt;error id=\"missing-parameter\"&gt;\n  &lt;message&gt;id&lt;/message&gt;\n  &lt;class&gt;MissingParameterEx&lt;/class&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/group_xml_services/#errors_2","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> <li>Missing parameter (error id: missing-parameter), when mandatory parameters are not provided. Returns 500 HTTP code</li> <li>bad-parameter id, when id parameter is empty/invalid. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/group_xml_services/#remove-a-group-xmlgroupremove","title":"Remove a group (xml.group.remove)","text":"<p>The xml.group.remove service can be used to remove an existing group. Only users with Administrator profile can delete groups.</p> <p>Requires authentification: Yes</p>"},{"location":"developer/xml_services/group_xml_services/#request_3","title":"Request","text":"<p>Parameters:</p> <ul> <li>id: (mandatory) Group identifier to delete</li> </ul> <p>Group remove request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.group.remove\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;request&gt;\n    &lt;id&gt;2&lt;/id&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/group_xml_services/#response_3","title":"Response","text":"<p>If the request executed succesfully then an HTTP 200 status code is returned and an XML document confirming the remove operation is returned. An example response is::</p> <pre><code>&lt;response&gt;\n  &lt;operation&gt;removed&lt;/operation&gt;\n&lt;/response&gt;\n</code></pre> <p>If the request fails then an HTTP 500 status code error is returned and the response contains an XML document with the details of the exception/what went wrong. An example error response is::</p> <pre><code>&lt;error id=\"missing-parameter\"&gt;\n  &lt;message&gt;id&lt;/message&gt;\n  &lt;class&gt;MissingParameterEx&lt;/class&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/group_xml_services/#errors_3","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> <li>Missing parameter (error id: missing-parameter), when mandatory parameters are not provided. Returns 500 HTTP code</li> <li>bad-parameter id, when id parameter is empty/invalid. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/java_xml_services/","title":"Java development with XML services","text":"<p>In this chapter are shown some examples to access GeoNetwork XML services in Java. Apache http commons library is used to send the requests and retrieve the results.</p>"},{"location":"developer/xml_services/java_xml_services/#retrieve-groups-list","title":"Retrieve groups list","text":"<p>This example shows a simple request, without requiring authentication, to retrieve the GeoNetwork groups.</p>"},{"location":"developer/xml_services/java_xml_services/#source","title":"Source","text":"<pre><code>package org.geonetwork.xmlservices.client;\n\nimport org.apache.commons.httpclient.HttpClient;\nimport org.apache.commons.httpclient.methods.PostMethod;\nimport org.apache.commons.httpclient.methods.StringRequestEntity;\nimport org.jdom.Document;\nimport org.jdom.Element;\n\npublic class GetGroupsClient {\n\n  public static void main(String args[]) {\n    **// Create request xml**\n    Element request = new Element(\"request\");\n    **// Create PostMethod specifying service url**\n    String serviceUrl = \"http://localhost:8080/geonetwork/srv/en/xml.group.list\";\n    PostMethod post = new PostMethod(serviceUrl);\n\n    try {\n      String postData = Xml.getString(new Document(request));\n\n      **// Set post data, mime-type and encoding**\n      post.setRequestEntity(new StringRequestEntity(postData, \"application/xml\", \"UTF8\"));\n\n      **// Send request**\n      HttpClient httpclient = new HttpClient();\n      int result = httpclient.executeMethod(post);\n\n      **// Display status code**\n      System.out.println(\"Response status code: \" + result);\n\n      **// Display response**\n      System.out.println(\"Response body: \");\n      System.out.println(post.getResponseBodyAsString());\n\n    } catch (Exception ex) {\n      ex.printStackTrace();\n\n    } finally {\n      **// Release current connection to the connection pool\n      // once you are done**\n      post.releaseConnection();\n    }\n  }\n}\n</code></pre>"},{"location":"developer/xml_services/java_xml_services/#output","title":"Output","text":"<pre><code>Response status code: 200\n\nResponse body:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n  &lt;response&gt;\n  &lt;record&gt;\n    &lt;id&gt;2&lt;/id&gt;\n    &lt;name&gt;sample&lt;/name&gt;\n    &lt;description&gt;Demo group&lt;/description&gt;\n    &lt;email&gt;group@mail.net&lt;/email&gt;\n    &lt;referrer /&gt;\n    &lt;label&gt;\n      &lt;en&gt;Sample group&lt;/en&gt;\n      &lt;fr&gt;Sample group&lt;/fr&gt;\n      &lt;es&gt;Sample group&lt;/es&gt;\n      &lt;de&gt;Beispielgruppe&lt;/de&gt;\n      &lt;nl&gt;Voorbeeldgroep&lt;/nl&gt;\n    &lt;/label&gt;\n  &lt;/record&gt;\n&lt;/response&gt;\n</code></pre>"},{"location":"developer/xml_services/java_xml_services/#create-a-new-user-exception-management","title":"Create a new user (exception management)","text":"<p>This example show a request to create a new user, that requires authentication to complete succesfully. The request is executed without authentication to capture the exception returned by GeoNetwork.</p>"},{"location":"developer/xml_services/java_xml_services/#source_1","title":"Source","text":"<pre><code>package org.geonetwork.xmlservices.client;\n\nimport org.apache.commons.httpclient.HttpClient;\nimport org.apache.commons.httpclient.HttpStatus;\nimport org.apache.commons.httpclient.methods.PostMethod;\nimport org.apache.commons.httpclient.methods.StringRequestEntity;\nimport org.jdom.Document;\nimport org.jdom.Element;\n\npublic class CreateUserClient {\n  public static void main(String args[]) {\n\n  **// Create request** xml\n  Element request = new Element(\"request\")\n  .addContent(new Element(\"operation\").setText(\"newuser\"))\n  .addContent(new Element(\"username\").setText(\"samantha\"))\n  .addContent(new Element(\"password\").setText(\"editor2\"))\n  .addContent(new Element(\"profile\").setText(\"Editor\"))\n  .addContent(new Element(\"name\").setText(\"Samantha\"))\n  .addContent(new Element(\"city\").setText(\"Amsterdam\"))\n  .addContent(new Element(\"country\").setText(\"Netherlands\"))\n  .addContent(new Element(\"email\").setText(\"samantha@mail.net\"));\n\n  **// Create PostMethod specifying service url**\n  String serviceUrl = \"http://localhost:8080/geonetwork/srv/en/user.update\";\n  PostMethod post = new PostMethod(serviceUrl);\n\n  try {\n    String postData = Xml.getString(new Document(request));\n\n    **// Set post data, mime-type and encoding**\n    post.setRequestEntity(new StringRequestEntity(postData, \"application/xml\", \"UTF8\"));\n\n    **// Send request**\n    HttpClient httpclient = new HttpClient();\n    int result = httpclient.executeMethod(post);\n\n    **// Display status code**\n    System.out.println(\"Response status code: \" + result);\n\n    **// Display response**\n    System.out.println(\"Response body: \");\n    String responseBody = post.getResponseBodyAsString();\n    System.out.println(responseBody);\n\n    if (result != HttpStatus.SC_OK) {\n      **// Process exception**\n      Element response = Xml.loadString(responseBody, false);\n      System.out.println(\"Error code: \" +\n      response.getAttribute(\"id\").getValue());\n      System.out.println(\"Error message: \" +\n      response.getChildText(\"message\"));\n    }\n\n    } catch (Exception ex) {\n      ex.printStackTrace();\n\n    } finally {\n      // Release current connection to the connection pool\n      // once you are done\n      post.releaseConnection();\n    }\n  }\n}\n</code></pre>"},{"location":"developer/xml_services/java_xml_services/#output_1","title":"Output","text":"<pre><code>Response status code: 401\n\nResponse body:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;error id=\"service-not-allowed\"&gt;\n  &lt;message&gt;Service not allowed&lt;/message&gt;\n  &lt;class&gt;ServiceNotAllowedEx&lt;/class&gt;\n  &lt;stack&gt;\n    &lt;at class=\"jeeves.server.dispatchers.ServiceManager\" file=\"ServiceManager.java\" line=\"374\" method=\"dispatch\" /&gt;\n    &lt;at class=\"jeeves.server.JeevesEngine\" file=\"JeevesEngine.java\" line=\"621\" method=\"dispatch\" /&gt;\n    &lt;at class=\"jeeves.server.sources.http.JeevesServlet\" file=\"JeevesServlet.java\" line=\"174\" method=\"execute\" /&gt;\n    &lt;at class=\"jeeves.server.sources.http.JeevesServlet\" file=\"JeevesServlet.java\" line=\"99\" method=\"doPost\" /&gt;\n    &lt;at class=\"javax.servlet.http.HttpServlet\" file=\"HttpServlet.java\" line=\"727\" method=\"service\" /&gt;\n    &lt;at class=\"javax.servlet.http.HttpServlet\" file=\"HttpServlet.java\" line=\"820\" method=\"service\" /&gt;\n    &lt;at class=\"org.mortbay.jetty.servlet.ServletHolder\" file=\"ServletHolder.java\" line=\"502\" method=\"handle\" /&gt;\n    &lt;at class=\"org.mortbay.jetty.servlet.ServletHandler\" file=\"ServletHandler.java\" line=\"363\" method=\"handle\" /&gt;\n    &lt;at class=\"org.mortbay.jetty.security.SecurityHandler\" file=\"SecurityHandler.java\" line=\"216\" method=\"handle\" /&gt;\n    &lt;at class=\"org.mortbay.jetty.servlet.SessionHandler\" file=\"SessionHandler.java\" line=\"181\" method=\"handle\" /&gt;\n  &lt;/stack&gt;\n  &lt;object&gt;user.update&lt;/object&gt;\n  &lt;request&gt;\n    &lt;language&gt;en&lt;/language&gt;\n    &lt;service&gt;user.update&lt;/service&gt;\n  &lt;/request&gt;\n&lt;/error&gt;\n</code></pre> <p>Error code: service-not-allowed Error message: Service not allowed</p>"},{"location":"developer/xml_services/java_xml_services/#create-a-new-user-sending-credentials","title":"Create a new user (sending credentials)","text":"<p>This example show a request to create a new user, that requires authentication to complete succesfully.</p> <p>In this example httpClient it's used first to send a login request to GeoNetwork, getting with JSESSIONID cookie. Nexts requests send to GeoNetwork using httpClient send the JSESSIONID cookie, and are managed as authenticated requests.</p>"},{"location":"developer/xml_services/java_xml_services/#source_2","title":"Source","text":"<pre><code>package org.geonetwork.xmlservices.client;\n\nimport org.apache.commons.httpclient.Credentials;\nimport org.apache.commons.httpclient.HttpClient;\nimport org.apache.commons.httpclient.HttpStatus;\nimport org.apache.commons.httpclient.UsernamePasswordCredentials;\nimport org.apache.commons.httpclient.auth.AuthScope;\nimport org.apache.commons.httpclient.methods.PostMethod;\nimport org.apache.commons.httpclient.methods.StringRequestEntity;\nimport org.jdom.Document;\nimport org.jdom.Element;\n\npublic class CreateUserClientAuth {\n  private HttpClient httpclient;\n\n  CreateUserClientAuth() {\n    httpclient = new HttpClient();\n  }\n\n  **/**\n  * Authenticates the user in GeoNetwork and send a request\n  * that needs authentication to create a new user\n  *\n  */**\n  public void sendRequest() {\n    **// Authenticate user**\n    if (!login()) System.exit(-1);\n\n    **// Create request XML**\n    Element request = new Element(\"request\")\n    .addContent(new Element(\"operation\").setText(\"newuser\"))\n    .addContent(new Element(\"username\").setText(\"samantha\"))\n    .addContent(new Element(\"password\").setText(\"editor2\"))\n    .addContent(new Element(\"profile\").setText(\"Editor\"))\n    .addContent(new Element(\"name\").setText(\"Samantha\"))\n    .addContent(new Element(\"city\").setText(\"Amsterdam\"))\n    .addContent(new Element(\"country\").setText(\"Netherlands\"))\n    .addContent(new Element(\"email\").setText(\"samantha@mail.net\"));\n\n    **// Create PostMethod specifying service url**\n    String serviceUrl = \"http://localhost:8080/geonetwork/srv/en/user.update\";\n    PostMethod post = new PostMethod(serviceUrl);\n\n    try {\n      String postData = Xml.getString(new Document(request));\n\n      **// Set post data, mime-type and encoding**\n      post.setRequestEntity(new StringRequestEntity(postData, \"application/xml\", \"UTF8\"));\n\n      **// Send request**\n      **(httpClient has been set in\n      // login request with JSESSIONID cookie)**\n      int result = httpclient.executeMethod(post);\n\n      **// Display status code**\n      System.out.println(\"Create user response status code: \" + result);\n\n      if (result != HttpStatus.SC_OK) {\n        **// Process exception**\n        String responseBody = post.getResponseBodyAsString();\n        Element response = Xml.loadString(responseBody, false);\n        System.out.println(\"Error code: \" +\n        response.getAttribute(\"id\").getValue());\n        System.out.println(\"Error message: \" +\n        response.getChildText(\"message\"));\n      }\n\n    } catch (Exception ex) {\n      ex.printStackTrace();\n\n    } finally {\n      **// Release current connection to the connection pool\n      // once you are done**\n      post.releaseConnection();\n    }\n  }\n\n  **/**\n  * Logins a user in GeoNetwork\n  *\n  * After login **httpClient** gets with JSSESIONID cookie. Using it\n  * for nexts requests, these are managed as \"authenticated requests\"\n  *\n  * @return  True if login it's ok, false otherwise\n  */**\n  private boolean login() {\n    **// Create request XML**\n    Element request = new Element(\"request\")\n    .addContent(new Element(\"username\").setText(\"admin\"))\n    .addContent(new Element(\"password\").setText(\"admin\"));\n\n    **// Create PostMethod specifying login service url**\n    String loginUrl =\n    \"http://localhost:8080/geonetwork/srv/en/xml.user.login\";\n    PostMethod post = new PostMethod(loginUrl);\n\n    try {\n      String postData = Xml.getString(new Document(request));\n\n      **// Set post data, mime-type and encoding**\n      post.setRequestEntity(new StringRequestEntity(postData,\n      \"application/xml\", \"UTF8\"));\n\n      **// Send login request**\n      int result = httpclient.executeMethod(post);\n\n      **// Display status code and authentication session cookie**\n      System.out.println(\"Login response status code: \" + result);\n      System.out.println(\"Authentication session cookie: \" +\n      httpclient.getState().getCookies()[0]);\n\n      return (result == HttpStatus.SC_OK);\n\n    } catch (Exception ex) {\n      ex.printStackTrace();\n      return false;\n\n    } finally {\n      // Release current connection to the connection pool\n      // once you are done\n      post.releaseConnection();\n    }\n\n  }\n\n  public static void main(String args[]) {\n    CreateUserClientAuth request = new CreateUserClientAuth();\n\n    request.sendRequest();\n  }\n}\n</code></pre>"},{"location":"developer/xml_services/java_xml_services/#output_2","title":"Output","text":"<pre><code>Login response status code: 200\nAuthentication session cookie: JSESSIONID=ozj8iyva0agv\nCreate user response status code: 200\n</code></pre> <p>Trying to run again the program, as the user it's just created we get an exception:</p> <pre><code>Login response status code: 200\nAuthentication session cookie: JSESSIONID=1q09kwg0r6fqe\nCreate user response status code: 500\n</code></pre> <p>Error response:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;error id=\"error\"&gt;\n  &lt;message&gt;ERROR: duplicate key violates unique constraint \"users_username_key\"&lt;/message&gt;\n  &lt;class&gt;PSQLException&lt;/class&gt;\n  &lt;stack&gt;\n    &lt;at class=\"org.postgresql.core.v3.QueryExecutorImpl\" file=\"QueryExecutorImpl.java\" line=\"1548\" method=\"receiveErrorResponse\" /&gt;\n    &lt;at class=\"org.postgresql.core.v3.QueryExecutorImpl\" file=\"QueryExecutorImpl.java\" line=\"1316\" method=\"processResults\" /&gt;\n    &lt;at class=\"org.postgresql.core.v3.QueryExecutorImpl\" file=\"QueryExecutorImpl.java\" line=\"191\" method=\"execute\" /&gt;\n    &lt;at class=\"org.postgresql.jdbc2.AbstractJdbc2Statement\" file=\"AbstractJdbc2Statement.java\" line=\"452\" method=\"execute\" /&gt;\n    &lt;at class=\"org.postgresql.jdbc2.AbstractJdbc2Statement\" file=\"AbstractJdbc2Statement.java\" line=\"351\"\n    method=\"executeWithFlags\" /&gt;\n    &lt;at class=\"org.postgresql.jdbc2.AbstractJdbc2Statement\" file=\"AbstractJdbc2Statement.java\" line=\"305\"\n    method=\"executeUpdate\" /&gt;\n    &lt;at class=\"jeeves.resources.dbms.Dbms\" file=\"Dbms.java\" line=\"261\" method=\"execute\" /&gt;\n    &lt;at class=\"org.fao.geonet.services.user.Update\" file=\"Update.java\" line=\"134\" method=\"exec\" /&gt;\n    &lt;at class=\"jeeves.server.dispatchers.ServiceInfo\" file=\"ServiceInfo.java\" line=\"238\" method=\"execService\" /&gt;\n    &lt;at class=\"jeeves.server.dispatchers.ServiceInfo\" file=\"ServiceInfo.java\" line=\"141\" method=\"execServices\" /&gt;\n  &lt;/stack&gt;\n  &lt;request&gt;\n    &lt;language&gt;en&lt;/language&gt;\n    &lt;service&gt;user.update&lt;/service&gt;\n  &lt;/request&gt;\n&lt;/error&gt;\n</code></pre> <p>Error code: error Error message: ERROR: duplicate key violates unique constraint \"users_username_key\"</p>"},{"location":"developer/xml_services/login_xml_services/","title":"Login and Logout services","text":""},{"location":"developer/xml_services/login_xml_services/#login-services","title":"Login services","text":""},{"location":"developer/xml_services/login_xml_services/#xml.user.login","title":"GeoNetwork standard login (xml.user.login)","text":"<p>The xml.user.login service is used to authenticate the user in GeoNetwork. Authenticated users can use XML services that require authentication such as those used to maintain group or user information.</p>"},{"location":"developer/xml_services/login_xml_services/#request","title":"Request","text":"<p>Parameters:</p> <ul> <li>username (mandatory): Login for the user to authenticate</li> <li>password (mandatory): Password for the user to authenticate</li> </ul> <p>Login request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/en/xml.user.login\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n    &lt;username&gt;admin&lt;/username&gt;\n    &lt;password&gt;admin&lt;/password&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/login_xml_services/#response","title":"Response","text":"<p>When user authentication is successful HTTP status code 200 is returned along with an XML response as follows:</p> <pre><code>&lt;ok/&gt;\n</code></pre> <p>If the response headers are examined, they will look something like the following::</p> <pre><code>Expires: Thu, 01 Jan 1970 00:00:00 GMT\nSet-Cookie: JSESSIONID=1xh3kpownhmjh;Path=/geonetwork\nContent-Type: application/xml; charset=UTF-8\nPragma: no-cache\nCache-Control: no-cache\nTransfer-Encoding: chunked\n</code></pre> <p>The authentication process sets the JSESSIONID cookie with the authentication token. This token should be sent as part of the request to all services that need authentication.</p> <p>If the execution of the login request is not successful then an HTTP 500 status code error is returned along with an XML document that describes the exception/what went wrong. An example of such a response is::</p> <pre><code>&lt;error id=\"user-login\"&gt;\n  &lt;message&gt;User login failed&lt;/message&gt;\n  &lt;class&gt;UserLoginEx&lt;/class&gt;\n  &lt;stack&gt;\n    &lt;at class=\"org.fao.geonet.services.login.Login\" file=\"Login.java\" line=\"90\" method=\"exec\" /&gt;\n    &lt;at class=\"jeeves.server.dispatchers.ServiceInfo\" file=\"ServiceInfo.java\" line=\"238\" method=\"execService\" /&gt;\n    &lt;at class=\"jeeves.server.dispatchers.ServiceInfo\" file=\"ServiceInfo.java\" line=\"141\" method=\"execServices\" /&gt;\n    &lt;at class=\"jeeves.server.dispatchers.ServiceManager\" file=\"ServiceManager.java\" line=\"377\" method=\"dispatch\" /&gt;\n    &lt;at class=\"jeeves.server.JeevesEngine\" file=\"JeevesEngine.java\" line=\"621\" method=\"dispatch\" /&gt;\n    &lt;at class=\"jeeves.server.sources.http.JeevesServlet\" file=\"JeevesServlet.java\" line=\"174\" method=\"execute\" /&gt;\n    &lt;at class=\"jeeves.server.sources.http.JeevesServlet\" file=\"JeevesServlet.java\" line=\"99\" method=\"doPost\" /&gt;\n    &lt;at class=\"javax.servlet.http.HttpServlet\" file=\"HttpServlet.java\" line=\"727\" method=\"service\" /&gt;\n    &lt;at class=\"javax.servlet.http.HttpServlet\" file=\"HttpServlet.java\" line=\"820\" method=\"service\" /&gt;\n    &lt;at class=\"org.mortbay.jetty.servlet.ServletHolder\" file=\"ServletHolder.java\" line=\"502\" method=\"handle\" /&gt;\n  &lt;/stack&gt;\n  &lt;object&gt;admin2&lt;/object&gt;\n  &lt;request&gt;\n    &lt;language&gt;en&lt;/language&gt;\n    &lt;service&gt;user.login&lt;/service&gt;\n  &lt;/request&gt;\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/login_xml_services/#errors","title":"Errors","text":"<ul> <li>Missing parameter (error id: missing-parameter), when mandatory parameters are not send. Returns 500 HTTP code</li> <li>bad-parameter XXXX, when an empty username or password is provided. Returns 500 HTTP code</li> <li>User login failed (error id: user-login), when login information is not valid. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/login_xml_services/#logout-service","title":"Logout service","text":""},{"location":"developer/xml_services/login_xml_services/#logout-xmluserlogout","title":"Logout (xml.user.logout)","text":"<p>The xml.user.logout service clears the user authentication session, removing the JSESSIONID cookie.</p>"},{"location":"developer/xml_services/login_xml_services/#request_1","title":"Request","text":"<p>Parameters:</p> <ul> <li>None:This request requires no parameters however the JSESSIONID token obtained from <code>xml.user.login</code> should be included as this is the session that will be cleared..</li> </ul> <p>Logout request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/en/xml.user.logout\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request/&gt;\n</code></pre>"},{"location":"developer/xml_services/login_xml_services/#response_1","title":"Response","text":"<p>Logout response example:</p> <pre><code>&lt;ok /&gt;\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_categories/","title":"Metadata Category services","text":""},{"location":"developer/xml_services/metadata_xml_categories/#update-categories-of-a-metadata-record-xmlmetadatacategory","title":"Update Categories of a metadata record (xml.metadata.category)","text":"<p>The xml.metadata.category service updates the categories of a metadata record using the list of categories provided.</p> <p>Note</p> <p>The previously assigned categories will be removed. If versioning for the metadata record is on, then the previously assigned categories will be available in the version history.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/metadata_xml_categories/#request","title":"Request","text":"<p>Parameters:</p> <ul> <li>id or uuid: Identifier of metadata to update</li> <li>_C: (can be multiple elements)<ul> <li>C: Category identifier (integer). A list of categories and identifiers is stored in the categories table. It can be retrieved using the <code>xml.info</code> service.</li> </ul> </li> </ul> <p>Request example:</p> <p>POST:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.category\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;id&gt;6&lt;/id&gt;\n  &lt;_1/&gt;\n  &lt;_2/&gt;\n&lt;/request&gt;\n</code></pre> <p>GET:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.category?id=6&amp;_1&amp;_2\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_categories/#response","title":"Response","text":"<p>Successful response (HTTP code 200) contains the identifier of the metadata whose categories have been updated.</p> <p>Example:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;id&gt;6&lt;/id&gt;\n&lt;/request&gt;\n</code></pre> <p>Unsuccessful response (HTTP code 500) is an XML document with details of the exception/problem that occurred:</p> <p>Example:</p> <pre><code>&lt;error id=\"metadata-not-found\"&gt;\n  &lt;message&gt;Metadata not found&lt;/message&gt;\n  &lt;class&gt;MetadataNotFoundEx&lt;/class&gt;\n  .....\n  &lt;object&gt;Metadata not found --&gt; 6&lt;/object&gt;\n  &lt;request&gt;\n     &lt;language&gt;eng&lt;/language&gt;\n     &lt;service&gt;xml.metadata.category&lt;/service&gt;\n  &lt;/request&gt;\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_categories/#errors","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code.</li> <li>Metadata not found (error id: metadata-not-found) if a metadata record with the identifier provided does not exist. Returns 500 HTTP code.</li> </ul>"},{"location":"developer/xml_services/metadata_xml_categories/#metadata.batch.update.categories","title":"Batch update categories (xml.metadata.batch.update.categories)","text":"<p>The xml.metadata.batch.update.categories service updates the categories of a selected set of metadata using the categories sent as parameters.</p> <p>Note</p> <p>This service requires a previous call to the <code>xml.metadata.select</code> service (see <code>metadata.select</code>) to select the metadata records to update.</p> <p>Note</p> <p>Only those metadata records for which the user running the service has ownership rights on will be updated and all categories previously assigned will be deleted. If metadata versioning is on then category changes will be recorded in the version history.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/metadata_xml_categories/#request_1","title":"Request","text":"<p>Parameters:</p> <ul> <li>_C: (can be multiple elements)<ul> <li>C: Category identifier (integer). A list of categories and identifiers is stored in the categories table. It can be retrieved using the <code>xml.info</code> service.</li> </ul> </li> </ul> <p>Example request:</p> <p>POST:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.batch.update.categories\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;_1/&gt;\n  &lt;_2/&gt;\n&lt;/request&gt;\n</code></pre> <p>GET:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.batch.update.categories?_1&amp;_2\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_categories/#response_1","title":"Response","text":"<p>If the request executed successfully then HTTP 200 status code is returned and an XML document with a summary of how the metadata records in the selected set have been processed. An example of such a response is shown below:</p> <pre><code>&lt;response&gt;\n    &lt;done&gt;5&lt;/done&gt;\n  &lt;notOwner&gt;0&lt;/notOwner&gt;\n  &lt;notFound&gt;0&lt;/notFound&gt;\n&lt;/response&gt;\n</code></pre> <p>The response fields are:</p> <ul> <li>done - number of metadata records successfully updated</li> <li>notOwner - number of metadata records skipped because the user running this service did not have ownership rights</li> <li>notFound - number of metadata records skipped because they were not found (may have been deleted)</li> </ul> <p>If the request fails an HTTP status code error is returned and the response is an XML document with the exception. An example of such a response is shown below:</p> <pre><code>&lt;error id=\"service-not-allowed\"&gt;\n  &lt;message&gt;Service not allowed&lt;/message&gt;\n  .....\n  &lt;object&gt;xml.metadata.batch.update.categories&lt;/object&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_categories/#errors_1","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/metadata_xml_insert_update_delete/","title":"Metadata insert, update and delete services","text":"<p>These services provide insert, update and delete operations for metadata records. They could be used by a metadata editing program external to GeoNetwork.</p> <p>This is the Create, Update, Delete part of the metadata CRUD operations in GeoNetwork. For read/retrieve operations (the R in CRUD) see Search and Retrieve Metadata services.</p>"},{"location":"developer/xml_services/metadata_xml_insert_update_delete/#insert-metadata-xmlmetadatainsert","title":"Insert metadata (xml.metadata.insert)","text":"<p>The xml.metadata.insert service allows you to insert a new record into the catalogue.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/metadata_xml_insert_update_delete/#request","title":"Request","text":"<p>Parameters:</p> <ul> <li> <p>data: (mandatory) Contains the metadata record</p> </li> <li> <p>group (mandatory): Owner group identifier for metadata</p> </li> <li> <p>isTemplate: indicates if the metadata content is a new template or not. Default value: \"n\"</p> </li> <li> <p>title: Metadata title. Only required if isTemplate = \"y\"</p> </li> <li> <p>category (mandatory): Metadata category. Use \"_none\" value to don't assign any category</p> </li> <li> <p>styleSheet (mandatory): Stylesheet name to transform the metadata before inserting in the catalog. Use \"_none\" if you don't have a stylesheet to apply</p> </li> <li> <p>validate: Indicates if the metadata should be validated before inserting in the catalog. Values: on, off (default)</p> </li> <li> <p>uuidAction:</p> <ul> <li>nothing (default value): uses the metadata uuid in the xml file, if the uuid already exists in the database throws an exception.</li> <li>overwrite: if the uuid exists in the database, overwrites the metadata with the inserted one.</li> <li>generateUUID: generates a new uuid for the metadata to be inserted.</li> </ul> </li> </ul> <p>Insert metadata request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/metadata.insert\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;group&gt;2&lt;/group&gt;\n  &lt;category&gt;_none_&lt;/category&gt;\n  &lt;styleSheet&gt;_none_&lt;/styleSheet&gt;\n  &lt;data&gt;&lt;![CDATA[\n    &lt;gmd:MD_Metadata xmlns:gmd=\"http://www.isotc211.org/2005/gmd\"\n                 xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    ...\n       &lt;/gmd:DQ_DataQuality&gt;\n      &lt;/gmd:dataQualityInfo&gt;\n    &lt;/gmd:MD_Metadata&gt;]]&gt;\n  &lt;/data&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_insert_update_delete/#response","title":"Response","text":"<p>If request is executed successfully HTTP 200 status code is returned along with an XML document with id details of the record inserted. Example success response:</p> <pre><code>&lt;response&gt;\n  &lt;id&gt;31&lt;/id&gt;\n  &lt;uuid&gt;9c623013-8d90-4e61-ae61-8e96800f3b08&lt;/uuid&gt;\n&lt;/response&gt;\n</code></pre> <p>If request fails an HTTP status code 500 is returned and the response contains an XML document with the exception. Example error response:</p> <pre><code>&lt;error id=\"error\"&gt;\n  &lt;message&gt;Unique index or primary key violation: \"CONSTRAINT_INDEX_1 ON PUBLIC.METADATA(UUID)\"; SQL statement: INSERT INTO Metadata (id, schemaId, data, createDate, changeDate, source, uuid, is Template, isHarvested, root, owner, doctype, groupOwner) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [23001-152]&lt;/message&gt;\n  &lt;class&gt;JdbcSQLException&lt;/class&gt;\n  &lt;stack&gt;..&lt;/stack&gt;\n  &lt;request&gt;...&lt;/request&gt;\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p> <p>If validate parameter is set to \"on\" and the provided metadata is not valid with respect to the XSD and schematrons in use for the metadata schema then an exception report is returned.</p> <p>Example validation metadata report:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;error id=\"xsd-validation-error\"&gt;\n  &lt;message&gt;XSD Validation error(s)&lt;/message&gt;\n  &lt;class&gt;XSDValidationErrorEx&lt;/class&gt;\n  &lt;stack&gt;\n    &lt;at class=\"org.fao.geonet.services.metadata.ImportFromDir\"\n      file=\"ImportFromDir.java\" line=\"297\" method=\"validateIt\" /&gt;\n    &lt;at class=\"org.fao.geonet.services.metadata.ImportFromDir\"\n      file=\"ImportFromDir.java\" line=\"281\" method=\"validateIt\" /&gt;\n    &lt;at class=\"org.fao.geonet.services.metadata.Insert\"\n      file=\"Insert.java\" line=\"102\" method=\"exec\" /&gt;\n    &lt;at class=\"jeeves.server.dispatchers.ServiceInfo\"\n      file=\"ServiceInfo.java\" line=\"238\" method=\"execService\" /&gt;\n    &lt;at class=\"jeeves.server.dispatchers.ServiceInfo\"\n      file=\"ServiceInfo.java\" line=\"141\" method=\"execServices\" /&gt;\n    &lt;at class=\"jeeves.server.dispatchers.ServiceManager\"\n      file=\"ServiceManager.java\" line=\"377\" method=\"dispatch\" /&gt;\n    &lt;at class=\"jeeves.server.JeevesEngine\"\n      file=\"JeevesEngine.java\" line=\"621\" method=\"dispatch\" /&gt;\n    &lt;at class=\"jeeves.server.sources.http.JeevesServlet\"\n      file=\"JeevesServlet.java\" line=\"174\" method=\"execute\" /&gt;\n    &lt;at class=\"jeeves.server.sources.http.JeevesServlet\"\n      file=\"JeevesServlet.java\" line=\"99\" method=\"doPost\" /&gt;\n    &lt;at class=\"javax.servlet.http.HttpServlet\"\n      file=\"HttpServlet.java\" line=\"727\" method=\"service\" /&gt;\n  &lt;/stack&gt;\n  &lt;object&gt;\n    &lt;xsderrors&gt;\n      &lt;error&gt;\n        &lt;message&gt;ERROR(1) org.xml.sax.SAXParseException: cvc-datatype-valid.1.2.1: '' is not a valid value for 'dateTime'. (Element: gco:DateTime with parent element: gmd:date)&lt;/message&gt;\n        &lt;xpath&gt;gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:DateTime&lt;/xpath&gt;\n      &lt;/error&gt;\n      &lt;error&gt;\n        &lt;message&gt;ERROR(2) org.xml.sax.SAXParseException: cvc-type.3.1.3: The value '' of element 'gco:DateTime' is not valid. (Element: gco:DateTime with parent element: gmd:date)&lt;/message&gt;\n        &lt;xpath&gt;gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:DateTime&lt;/xpath&gt;\n      &lt;/error&gt;\n      &lt;error&gt;\n        &lt;message&gt;ERROR(3) org.xml.sax.SAXParseException: cvc-datatype-valid.1.2.1: '' is not a valid value for 'integer'. (Element: gco:Integer with parent element: gmd:denominator)&lt;/message&gt;\n        &lt;xpath&gt;gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution/gmd:MD_Resolution/gmd:equivalentScale/gmd:MD_RepresentativeFraction/gmd:denominator/gco:Integer&lt;/xpath&gt;\n      &lt;/error&gt;\n      &lt;error&gt;\n        &lt;message&gt;ERROR(4) org.xml.sax.SAXParseException: cvc-type.3.1.3: The value '' of element 'gco:Integer' is not valid. (Element: gco:Integer with parent element: gmd:denominator)&lt;/message&gt;\n        &lt;xpath&gt;gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution/gmd:MD_Resolution/gmd:equivalentScale/gmd:MD_RepresentativeFraction/gmd:denominator/gco:Integer&lt;/xpath&gt;\n      &lt;/error&gt;\n    &lt;/xsderrors&gt;\n  &lt;/object&gt;\n  &lt;request&gt;\n    &lt;language&gt;eng&lt;/language&gt;\n    &lt;service&gt;xml.metadata.insert&lt;/service&gt;\n  &lt;/request&gt;\n&lt;/error&gt;\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_insert_update_delete/#errors","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> <li>Missing parameter (error id: missing-parameter), when mandatory parameters are not provided. Returns 500 HTTP code</li> <li>bad-parameter XXXX, when a mandatory parameter is empty. Returns 500 HTTP code</li> <li>ERROR: duplicate key violates unique constraint \"metadata_uuid_key\", if another metadata record in catalog has the same uuid of the metadata record being inserted. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/metadata_xml_insert_update_delete/#update-metadata-xmlmetadataupdate","title":"Update metadata (xml.metadata.update)","text":"<p>The xml.metadata.update service allows you to update a metadata record in the catalog.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/metadata_xml_insert_update_delete/#request_1","title":"Request","text":"<p>Parameters:</p> <ul> <li>id or uuid: (mandatory) Identifier of the metadata to update</li> <li>version: (mandatory) This parameter is used by the GeoNetwork editor to avoid concurrent updates to the same metadata record. This is not accessible to the service user at present so this parameter can be set to any integer value.</li> <li>isTemplate: indicates if the metadata content is a new template or not. Default value: \"n\"</li> <li>showValidationErrors: Indicates if the metadata should be validated before updating in the catalog.</li> <li>minor: If the metadata update is a minor change (changedate will not be updated, notification of change in metadata will not be sent) then this parameter should be set to \"true\", \"false\" otherwise.</li> <li>title: Metadata title (for templates)</li> <li>data (mandatory) Contains the metadata record.</li> </ul> <p>Update metadata request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.update\n\nMime-type:\napplication/xml\n\nPost request:\n\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;id&gt;11&lt;/id&gt;\n  &lt;version&gt;1&lt;/version&gt;\n  &lt;data&gt;&lt;![CDATA[\n    &lt;gmd:MD_Metadata xmlns:gmd=\"http://www.isotc211.org/2005/gmd\"\n                     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\n    ...\n\n          &lt;/gmd:DQ_DataQuality&gt;\n      &lt;/gmd:dataQualityInfo&gt;\n    &lt;/gmd:MD_Metadata&gt;]]&gt;\n  &lt;/data&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_insert_update_delete/#response_1","title":"Response","text":"<p>If request is executed successfully HTTP 200 status code is returned and an XML document with details of the successful request. Example success response:</p> <pre><code>&lt;response&gt;\n  &lt;id&gt;32&lt;/id&gt;\n  &lt;showvalidationerrors&gt;false&lt;/showvalidationerrors&gt;\n  &lt;minor&gt;false&lt;/minor&gt;\n&lt;/response&gt;\n</code></pre> <p>If request fails an HTTP status code 500 (server error) is returned and the response is an XML document with the exception. Example error response:</p> <pre><code>&lt;error id=\"bad-parameter\"&gt;\n  &lt;message&gt;id&lt;/message&gt;\n  &lt;class&gt;BadParameterEx&lt;/class&gt;\n  &lt;stack&gt;...&lt;/stack&gt;\n  &lt;request&gt;...&lt;/request&gt;\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_insert_update_delete/#errors_1","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or his profile has no rights to execute the service. Returns 500 HTTP code</li> <li>Missing parameter (error id: missing-parameter), when mandatory parameters are not provided. Returns 500 HTTP code</li> <li>bad-parameter XXXX, when a mandatory parameter is empty or when the update id doesn't exist. Returns 500 HTTP code</li> <li>Concurrent update (error id: client), when the version number provided is different from the current version number (Metadata record is in use by another user). Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/metadata_xml_insert_update_delete/#delete-metadata-xmlmetadatadelete","title":"Delete metadata (xml.metadata.delete)","text":"<p>The xml.metadata.delete service removes a metadata record from the catalog. The metadata record is backed up in MEF format in <code>GEONETWORK_DATA_DIR/removed</code>.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/metadata_xml_insert_update_delete/#request_2","title":"Request","text":"<p>Parameters:</p> <ul> <li>id or uuid: (mandatory) Identifier of the metadata to delete</li> </ul> <p>Example request:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.delete\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;id&gt;10&lt;/id&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_insert_update_delete/#response_2","title":"Response","text":"<p>If request executed successfully HTTP 200 status code is returned and an XML document with details of what has been deleted. Example success response:</p> <pre><code>&lt;response&gt;\n  &lt;id&gt;32&lt;/id&gt;\n&lt;/response&gt;\n</code></pre> <p>If request fails an HTTP 500 status code error is returned and the response is an XML document with the exception. Example error response:</p> <pre><code>&lt;error id=\"metadata-not-found\"&gt;\n  &lt;message&gt;Metadata not found&lt;/message&gt;\n  &lt;class&gt;MetadataNotFoundEx&lt;/class&gt;\n  &lt;stack&gt;...&lt;/stack&gt;\n  &lt;request&gt;...&lt;/request&gt;\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_insert_update_delete/#errors_2","title":"Errors","text":"<ul> <li> <p>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</p> </li> <li> <p>Metadata not found (error id: metadata-not-found), if the identifier provided did not correspond to an existing metadata record. Returns 500 HTTP code</p> </li> <li> <p>Operation not allowed (error id: operation-not-allowed), when the user is not authorized to edit the metadata. To edit a metadata one of the following must be true:</p> <ul> <li>The user is the metadata owner</li> <li>The user is an Administrator</li> <li>The user has edit rights over the metadata</li> <li>The user is a Reviewer and/or UserAdmin and the metadata groupOwner is one of his groups</li> </ul> <p>Returns 500 HTTP code.</p> </li> </ul>"},{"location":"developer/xml_services/metadata_xml_insert_update_delete/#metadata.batch.delete","title":"Batch Delete (xml.metadata.batch.delete)","text":"<p>The xml.metadata.batch.delete service deletes the metadata records in the selected set.</p> <p>Note</p> <p>This service requires a previous call to the <code>xml.metadata.select</code> service (see <code>metadata.select</code>) to select the metadata records to delete.</p> <p>Note</p> <p>Only those metadata records for which the user running the service has ownership rights on will be deleted. If metadata versioning is on then deletions will be recorded in the version history.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/metadata_xml_insert_update_delete/#request_3","title":"Request","text":"<p>Parameters: None</p> <p>Example request:</p> <p>POST:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.batch.delete\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request/&gt;\n</code></pre> <p>GET:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.batch.delete\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_insert_update_delete/#response_3","title":"Response","text":"<p>If the request executed successfully then HTTP 200 status code is returned and an XML document with a summary of how the metadata records in the selected set have been processed. An example of such a response is shown below:</p> <pre><code>&lt;response&gt;\n    &lt;done&gt;5&lt;/done&gt;\n  &lt;notOwner&gt;0&lt;/notOwner&gt;\n  &lt;notFound&gt;0&lt;/notFound&gt;\n&lt;/response&gt;\n</code></pre> <p>The response fields are:</p> <ul> <li>done - number of metadata records successfully deleted</li> <li>notOwner - number of metadata records skipped because the user running this service did not have ownership rights</li> <li>notFound - number of metadata records skipped because they were not found (may have been deleted)</li> </ul> <p>If the request fails an HTTP 500 status code error is returned and the response is an XML document with the exception. An example of such a response is shown below:</p> <pre><code>&lt;error id=\"service-not-allowed\"&gt;\n  Service not allowed\n  &lt;object&gt;xml.metadata.batch.delete&lt;/object&gt;\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_insert_update_delete/#errors_3","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/metadata_xml_ownership/","title":"Metadata Ownership services","text":"<p>These services allow retrieval and management of metadata ownership where the 'owner' of a metadata record is the user who created it. Only users with Administrator and UserAdmin profiles can execute these services.</p>"},{"location":"developer/xml_services/metadata_xml_ownership/#metadata.batch.newowner","title":"Batch new owner (xml.metadata.batch.newowner)","text":"<p>The xml.metadata.batch.newowner service allows you to set the owner of a selected set of metadata records.</p> <p>Note</p> <p>This service requires a previous call to the <code>xml.metadata.select</code> service (see <code>metadata.select</code>) to select metadata records.</p> <p>Note</p> <p>Only those metadata records for which the user running the service has ownership rights on will be updated. If metadata versioning is on then ownership changes will be recorded in the version history.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/metadata_xml_ownership/#request","title":"Request","text":"<p>Once the metadata records have been selected the xml.metadata.batch.newowner service can be invoked with the following parameters:</p> <ul> <li>user: (mandatory) New owner user identifier</li> <li>group: (mandatory) New owner group user identifier</li> </ul> <p>Request example:</p> <p>POST:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.batch.newowner\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;user&gt;2&lt;/user&gt;\n  &lt;group&gt;2&lt;/group&gt;\n&lt;/request&gt;\n</code></pre> <p>GET:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.batch.newowner?user=1&amp;group=1\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_ownership/#response","title":"Response","text":"<p>If the request executed successfully then HTTP 200 status code is returned and an XML document with a summary of how the metadata records in the selected set have been processed. An example of such a response is shown below:</p> <pre><code>&lt;response&gt;\n  &lt;done&gt;5&lt;/done&gt;\n  &lt;notOwner&gt;0&lt;/notOwner&gt;\n  &lt;notFound&gt;0&lt;/notFound&gt;\n&lt;/response&gt;\n</code></pre> <p>The response fields are:</p> <ul> <li>done - number of metadata records successfully updated</li> <li>notOwner - number of metadata records skipped because the user running this service did not have ownership rights</li> <li>notFound - number of metadata records skipped because they were not found (may have been deleted)</li> </ul> <p>If the request fails an HTTP 500 status code error is returned and the response is an XML document with the exception. An example of such a response is shown below:</p> <pre><code>&lt;error id=\"service-not-allowed\"&gt;\n  &lt;message&gt;Service not allowed&lt;/message&gt;\n  &lt;class&gt;ServiceNotAllowedEx&lt;/class&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_ownership/#errors","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/metadata_xml_ownership/#transfer-ownership-xmlownershiptransfer","title":"Transfer ownership (xml.ownership.transfer)","text":"<p>The xml.ownership.transfer service can be used to transfer ownership and privileges of metadata from one user to another. This service should be used with data retrieved from previous invocations to the services <code>xml.ownership.editors &lt;xml.ownership.editors&gt;</code> and <code>xml.ownership.groups &lt;xml.ownership.groups&gt;</code> as described below.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/metadata_xml_ownership/#request_1","title":"Request","text":"<p>Parameters:</p> <ul> <li>sourceUser: (mandatory) Identifier of the user whose metadata will be transferred to a new owner</li> <li>sourceGroup: (mandatory) Identifier of one of the user groups of sourceUser</li> <li>targetUser: (mandatory) Identifier of the user who will become the new owner of the metadata currently owned by sourceUser</li> <li>targetGroup: (mandatory) Identifier of one of the user groups of the targetUser</li> </ul> <p>Example: In the next example we are going to transfer the ownership and privileges of metadata owned of user John (id=2) in group RWS (id=5) to user Samantha(id=7) in group NLR (id=6)</p> <p>Transfer ownership request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.ownership.transfer\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;sourceUser&gt;2&lt;/sourceUser&gt;\n  &lt;sourceGroup&gt;5&lt;/sourceGroup&gt;\n  &lt;targetUser&gt;7&lt;/targetUser&gt;\n  &lt;targetGroup&gt;6&lt;/targetGroup&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_ownership/#response_1","title":"Response","text":"<p>The response contains the following fields:</p> <ul> <li>response: This is the container for the response<ul> <li>privileges: Number of privileges transferred from source group to target group</li> <li>metadata: Number of metadata records transferred from source user to target user</li> </ul> </li> </ul> <p>Transfer ownership response example:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;response&gt;\n  &lt;privileges&gt;4&lt;/privileges&gt;\n  &lt;metadata&gt;2&lt;/metadata&gt;\n&lt;/response&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_ownership/#errors_1","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or his profile has no rights to execute the service. Returns 500 HTTP code</li> <li>Missing parameter (error id: missing-parameter), when mandatory parameters are not provided. Returns 500 HTTP code</li> <li>bad-parameter XXXX, when a mandatory parameter is empty or invalid. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/metadata_xml_ownership/#xml.ownership.editors","title":"Retrieve metadata owners (xml.ownership.editors)","text":"<p>The xml.ownership.editors service can be used to retrieve the users with editor profile that own metadata records.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/metadata_xml_ownership/#request_2","title":"Request","text":"<p>Parameters:</p> <ul> <li>None</li> </ul> <p>Retrieve metadata owners request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.ownership.editors\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request /&gt;\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_ownership/#response_2","title":"Response","text":"<p>Successful execution returns HTTP status code 200 and an XML document with the results. The elements of the response are as follows:</p> <ul> <li>root: This is the container for the response<ul> <li>editor: Container for each editor user information<ul> <li>id: User identifier</li> <li>username: User login</li> <li>name: User name</li> <li>surname: User surname</li> <li>profile: User profile</li> </ul> </li> </ul> </li> </ul> <p>Example:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;root&gt;\n  &lt;editor&gt;\n    &lt;id&gt;1&lt;/id&gt;\n    &lt;username&gt;admin&lt;/username&gt;\n    &lt;name&gt;admin&lt;/name&gt;\n    &lt;surname&gt;admin&lt;/surname&gt;\n    &lt;profile&gt;Administrator&lt;/profile&gt;\n  &lt;/editor&gt;\n  &lt;editor&gt;\n    &lt;id&gt;2&lt;/id&gt;\n    &lt;username&gt;samantha&lt;/username&gt;\n    &lt;name&gt;Samantha&lt;/name&gt;\n    &lt;surname&gt;Smith&lt;/surname&gt;\n    &lt;profile&gt;Editor&lt;/profile&gt;\n  &lt;/editor&gt;\n&lt;/root&gt;\n</code></pre> <p>Unsuccessful execution returns HTTP 500 status code error and an XML document describing the exception that occurred. An example of such an error response is::</p> <pre><code>&lt;error id=\"service-not-allowed\"&gt;\n  &lt;message&gt;Service not allowed&lt;/message&gt;\n  &lt;class&gt;ServiceNotAllowedEx&lt;/class&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_ownership/#errors_2","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or his profile has no rights to execute the service. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/metadata_xml_ownership/#xml.ownership.groups","title":"Retrieve groups &amp; users that can be used in metadata ownership transfer (xml.ownership.groups)","text":"<p>The xml.ownership.groups service retrieves:</p> <ul> <li>all groups that have been assigned privileges over the metadata records owned by the specified user - these will be the source groups from which ownership can be transferred</li> <li>all groups to which the user running the service belongs to. A list of the users assigned to the group who have the editor profile is provided with each group. These are the target groups and editors to which ownership can be transferred.</li> </ul> <p>Typically the <code>xml.ownership.editors</code> service is used to extract the user ids of editors that are used as parameters to retrieve more detailed information about source groups and target groups &amp; editors.</p>"},{"location":"developer/xml_services/metadata_xml_ownership/#request_3","title":"Request","text":"<p>Parameters:</p> <ul> <li>id: (mandatory) User identifier of the user from whom metadata records will be transferred</li> <li>The user id of the user running this service will be used to obtain a list of target groups and editors to which the metadata records belonging to user id can be transferred.</li> </ul> <p>Retrieve ownership groups request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.ownership.groups\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;id&gt;2&lt;/id&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_ownership/#response_3","title":"Response","text":"<p>Successful execution returns HTTP status code 200 and an XML document with the results. The elements of the response are as follows:</p> <ul> <li>root: This is the container for the response</li> <li> <p>response: This is the container for the response</p> </li> <li> <p>group: A group which has privileges over the metadata records owned by the user with user id id (can be multiple group elements). These groups can be used as the source group list for the transfer ownership service.</p> <ul> <li>id, name, description, email, referrer, label: Group information</li> </ul> </li> <li> <p>targetGroup: A user group to which the user running this service has been assigned (can be multiple targetGroup elements). The groups can be used as the target group list and the editors from the groups can be target editors for the transfer ownership service.</p> <ul> <li>id, name, description, email, referrer, label: Group information</li> <li>editor: Users from the group that can edit metadata (can be multiple editor elements)<ul> <li>id,surname, name: Metadata user owner information</li> </ul> </li> </ul> </li> </ul> <p>Response example:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;response&gt;\n  &lt;group&gt;\n    &lt;id&gt;3&lt;/id&gt;\n    &lt;name&gt;bigmetadatausers&lt;/name&gt;\n    &lt;description&gt;Big Metadata User Groups&lt;/description&gt;\n    &lt;email&gt;bigmetadatagroup@mail.net&lt;/email&gt;\n    &lt;referrer /&gt;\n    &lt;label&gt;\n      &lt;en&gt;Big Metadata Users&lt;/en&gt;\n    &lt;/label&gt;\n  &lt;/group&gt;\n  &lt;targetGroup&gt;\n    &lt;id&gt;2&lt;/id&gt;\n    &lt;name&gt;sample&lt;/name&gt;\n    &lt;description&gt;Demo group&lt;/description&gt;\n    &lt;email&gt;group@mail.net&lt;/email&gt;\n    &lt;referrer /&gt;\n    &lt;label&gt;\n      &lt;en&gt;Sample group&lt;/en&gt;\n    &lt;/label&gt;\n    &lt;editor&gt;\n      &lt;id&gt;12&lt;/id&gt;\n      &lt;surname /&gt;\n      &lt;name /&gt;\n    &lt;/editor&gt;\n    &lt;editor&gt;\n      &lt;id&gt;13&lt;/id&gt;\n      &lt;surname /&gt;\n      &lt;name&gt;Samantha&lt;/name&gt;\n    &lt;/editor&gt;\n  &lt;/targetGroup&gt;\n  &lt;targetGroup&gt;\n    &lt;id&gt;6&lt;/id&gt;\n    &lt;name&gt;RWS&lt;/name&gt;\n    &lt;description /&gt;\n    &lt;email /&gt;\n    &lt;referrer /&gt;\n    &lt;label&gt;\n      &lt;en&gt;RWS&lt;/en&gt;\n    &lt;/label&gt;\n    &lt;editor&gt;\n      &lt;id&gt;7&lt;/id&gt;\n      &lt;surname /&gt;\n      &lt;name&gt;Samantha&lt;/name&gt;\n    &lt;/editor&gt;\n  &lt;/targetGroup&gt;\n  ...\n&lt;/response&gt;\n</code></pre> <p>Unsuccessful execution returns HTTP 500 status code error and an XML document describing the exception that occurred. An example of such an error response is::</p> <pre><code>&lt;error id=\"service-not-allowed\"&gt;\n  &lt;message&gt;Service not allowed&lt;/message&gt;\n  &lt;class&gt;ServiceNotAllowedEx&lt;/class&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_ownership/#errors_3","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or his profile has no rights to execute the service. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/metadata_xml_privileges/","title":"Metadata Privilege services","text":""},{"location":"developer/xml_services/metadata_xml_privileges/#update-privileges-on-a-metadata-record-xmlmetadataprivileges","title":"Update privileges on a metadata record (xml.metadata.privileges)","text":"<p>The xml.metadata.privileges service updates the privileges on a metadata record using a list of groups and privileges sent as parameters.</p> <p>Note</p> <p>All previously assigned privileges will be deleted. If versioning for the metadata record is on, then the previously assigned privileges will be available in the version history.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/metadata_xml_privileges/#request","title":"Request","text":"<p>Parameters:</p> <ul> <li>id or uuid: Identifier of metadata to update</li> <li> <p>_G_O: (can be multiple elements)</p> </li> <li> <p>G: Group identifier</p> </li> <li>O: Privilege (Operation) identifier. Privilege identifiers: </li> <li>0: view</li> <li>1: download</li> <li>2: editing</li> <li>3: notify</li> <li>4: dynamic</li> <li>5: featured </li> <li>Group and Operation Identifiers can be obtained using <code>xml.info</code> service.</li> </ul> <p>Request example:</p> <p>POST:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.privileges\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;id&gt;6&lt;/id&gt;\n  &lt;_1_2 /&gt;\n  &lt;_1_1 /&gt;\n&lt;/request&gt;\n</code></pre> <p>GET:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.privileges?id=6&amp;_1_2&amp;_1_1\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_privileges/#response","title":"Response","text":"<p>If the request executed successfully then the XML response contains the identifier of the metadata whose privileges have been updated.</p> <p>Example:</p> <pre><code>&lt;response&gt;\n  &lt;id&gt;6&lt;/id&gt;\n&lt;/response&gt;\n</code></pre> <p>If the request was unsuccessful then the XML response contains details of the error returned. An example of such a response is:</p> <pre><code>&lt;error id=\"metadata-not-found\"&gt;\n  &lt;message&gt;Metadata not found&lt;/message&gt;\n  &lt;class&gt;MetadataNotFoundEx&lt;/class&gt; \n  .....\n  &lt;object&gt;6&lt;/object&gt;\n  &lt;request&gt;\n    &lt;language&gt;eng&lt;/language&gt;\n    &lt;service&gt;xml.metadata.privileges&lt;/service&gt;\n  &lt;/request&gt;\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_privileges/#errors","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> <li>Metadata not found (error id: metadata-not-found) if a metadata record with the identifier provided does not exist. Returns 500 HTTP code</li> <li>ERROR: insert or update on table \"operationallowed\" violates foreign key 'operationallowed_operationid_fkey \u00bb, if an operation identifier provided is not valid. Returns 500 HTTP code</li> <li>ERROR: insert or update on table \"operationallowed\" violates foreign key 'operationallowed_groupid_fkey \u00bb, if a group identifier provided is not valid. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/metadata_xml_privileges/#metadata.batch.update.privileges","title":"Batch update privileges (xml.metadata.batch.update.privileges)","text":"<p>The xml.metadata.batch.update.privileges service updates the privileges on a selected set of metadata using the list of groups and privileges sent as parameters.</p> <p>Note</p> <p>This service requires a previous call to the <code>xml.metadata.select</code> service (see <code>metadata.select</code>) to select metadata records.</p> <p>Note</p> <p>Only those metadata records for which the user running the service has ownership rights on will be updated and all privileges previously assigned will be deleted.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/metadata_xml_privileges/#request_1","title":"Request","text":"<p>Parameters:</p> <ul> <li> <p>_G_O: (can be multiple elements)</p> </li> <li> <p>G: Group identifier</p> </li> <li>O: Privilege (Operation) identifier. Privilege identifiers: </li> <li>0: view</li> <li>1: download</li> <li>2: editing</li> <li>3: notify</li> <li>4: dynamic</li> <li>5: featured </li> <li>Group and Operation Identifiers can be obtained using <code>xml.info</code> service.</li> </ul> <p>Example request:</p> <p>POST:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.batch.update.privileges\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;_1_2 /&gt;\n  &lt;_1_1 /&gt;\n&lt;/request&gt;\n</code></pre> <p>GET:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.batch.update.privileges?_1_2&amp;_1_1\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_privileges/#response_1","title":"Response","text":"<p>If the request executed successfully then HTTP 200 status code is returned and an XML document with a summary of how the metadata records in the selected set have been processed. An example of such a response is shown below:</p> <pre><code>&lt;response&gt;\n  &lt;done&gt;5&lt;/done&gt;\n  &lt;notOwner&gt;0&lt;/notOwner&gt;\n  &lt;notFound&gt;0&lt;/notFound&gt;\n&lt;/response&gt;\n</code></pre> <p>The response fields are:</p> <ul> <li>done - number of metadata records successfully updated</li> <li>notOwner - number of metadata records skipped because the user running this service did not have ownership rights</li> <li>notFound - number of metadata records skipped because they were not found (may have been deleted)</li> </ul> <p>If the request fails an HTTP 500 status code error is returned and the response is an XML document with the exception. An example of such a response is shown below:</p> <pre><code>&lt;error id=\"service-not-allowed\"&gt;\n  &lt;message&gt;Service not allowed&lt;/message&gt;\n  .....\n  &lt;object&gt;xml.metadata.batch.update.privileges&lt;/object&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_privileges/#errors_1","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> <li>ERROR: insert or update on table \"operationallowed\" violates foreign key 'operationallowed_operationid_fkey \u00bb, if an operation identifier provided is not valid. Returns 500 HTTP code</li> <li>ERROR: insert or update on table \"operationallowed\" violates foreign key 'operationallowed_groupid_fkey \u00bb, if a group identifier provided is not valid. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/metadata_xml_processing/","title":"Metadata Processing services","text":"<p>These services allow processing of one or more metadata records using an XSLT.</p>"},{"location":"developer/xml_services/metadata_xml_processing/#rules-for-constructing-a-process-xslt-for-use-with-these-services","title":"Rules for constructing a process XSLT for use with these services","text":"<p>Typically an XSLT used with this service will accept some parameters then filter the elements of the metadata record being processed, changing some elements and copying the rest. So the rules for constructing such an XSLT are:</p> <ul> <li>Accept parameters using <code>xsl:param</code> - values for these will be specified as part of the request. eg. <code>&lt;xsl:param name=\"url\"/&gt;</code></li> <li>Add templates that match and process the required metadata elements. For example:</li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> </p> <ul> <li>Include a template that matches all content, refers any specific matches to templates provided in the previous step or just copies the metadata elements (nodes) and attributes without changing them.</li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> </p> <ul> <li>Put the process XSLT into the process directory of the relevant metadata schema plugin. eg. if your process XSLT applies to iso19139 metadata records then it should be in the process directory of the iso19139 schema (<code>GEONETWORK_DATA_DIR/config/schema_plugins/iso19139/process</code>).</li> </ul>"},{"location":"developer/xml_services/metadata_xml_processing/#process-a-metadata-record-with-an-xslt-xmlmetadataprocessing","title":"Process a metadata record with an XSLT (xml.metadata.processing)","text":"<p>This service applies an XSLT to a metadata record specified by id or uuid.</p>"},{"location":"developer/xml_services/metadata_xml_processing/#request","title":"Request","text":"<p>Parameters:</p> <ul> <li>id or uuid: Identifier of metadata to process.</li> <li>save: Set to '1' to save the processed metadata (default), '0' will not save the processed metadata and will return the processed metadata for inspection.</li> <li>process: Name of an XSLT in the process directory of a metadata schema in GeoNetwork. For example, <code>anonymizer.xsl</code> exists in the process directory of metadata schema iso19139 - to use this XSLT you would specific <code>anonymizer</code> as the process parameter value.</li> <li>Parameters of the process XSLT in order. Each parameter of the process XSLT needs to be specified with a value if no default exists in the process XSLT or with no value if the default is suitable. You will need to examine the process XSLT to determine which parameters to specify and what the default values are if any.</li> </ul> <p>Example request for the anonymizer process XSLT:</p> <p>POST:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.processing\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;id&gt;6&lt;/id&gt;\n  &lt;save&gt;0&lt;/save&gt;\n  &lt;process&gt;anonymizer&lt;/process&gt;\n  &lt;email&gt;john.p.bead@bonce.com&lt;email/&gt;\n&lt;/request&gt;\n</code></pre> <p>GET:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.processing?&amp;id=6&amp;save=0&amp;process=anonymizer&amp;email=john.p.bead%40bonce.com\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_processing/#response","title":"Response","text":"<p>If the processing specified in the request succeeded and the parameter <code>save</code> was set to '1' or left out, then the XML response contains the id of the metadata record that was processed. For example:</p> <pre><code>&lt;response&gt;\n &lt;id&gt;1&lt;/id&gt;\n&lt;/response&gt;\n</code></pre> <p>If the processing specified in the request succeeded and the parameter <code>save</code> was set to '0', then the XML response contains the id of the metadata record and the processed metadata record. For example, if processing an iso19139 metadata record then the response would contain the processed iso19139 metadata record as follows:</p> <pre><code>&lt;response&gt;\n &lt;id&gt;2&lt;/id&gt;\n &lt;record&gt;\n   &lt;gmd:MD_Metadata ...&gt;\n     .....\n   &lt;/gmd:MD_Metadata&gt;\n &lt;/record&gt;\n&lt;/response&gt;\n</code></pre> <p>If the processing specified in the request failed, an XML error response is returned with the reason. For example, here is the response when processing was requested on a metadata record belonging to a metadata schema that does not have the specified processing XSLT:</p> <pre><code>&lt;error id=\"bad-parameter\"&gt;\n  &lt;message&gt;Processing failed&lt;/message&gt;\n  .....\n  &lt;object&gt;Not found:0, Not owner:0, No process found:1.&lt;/object&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_processing/#errors","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> <li>Bad Parameter (error id: bad-parameter), when the processing (XSLT transform) returns an empty metadata record (explanation is returned in XML - see example response above). Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/metadata_xml_processing/#metadata.batch.processing","title":"Batch process metadata records with an XSLT (xml.metadata.batch.processing)","text":"<p>The xml.metadata.batch.processing service applies an XSLT to each metadata record in a selected set of metadata records.</p> <p>Note</p> <p>This service requires a previous call to the <code>xml.metadata.select</code> service (see <code>metadata.select</code>) to select metadata records.</p> <p>Note</p> <p>This service is only available to users with UserAdmin or Administrator profile.</p> <p>Note</p> <p>Only those metadata records for which the user running the service has editing rights on will be processed. If metadata versioning is on then any changes to the metadata records will be recorded in the version history.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/metadata_xml_processing/#request_1","title":"Request","text":"<p>Parameters:</p> <ul> <li>save: Set to '1' to save the processed metadata (default), '0' will not save the processed metadata.</li> <li>process: Name of an XSLT in the process directory of a metadata schema in GeoNetwork. For example, the anonymizer XSLT exists in the process directory of metadata schema iso19139 - to use this XSLT you would specific <code>anonymizer</code> as the process parameter value.</li> <li>Parameters of the process XSLT in order. Each parameter of the process XSLT needs to be specified with a value if no default exists in the process XSLT or with no value if the default is suitable. You will need to examine the process XSLT to determine which parameters to specify and what the default values are if any.</li> </ul> <p>Example request for the anonymizer process XSLT:</p> <p>POST:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.batch.processing\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;save&gt;0&lt;/save&gt;\n  &lt;process&gt;anonymizer&lt;/process&gt;\n  &lt;email&gt;john.p.bead@bonce.com&lt;email/&gt;\n&lt;/request&gt;\n</code></pre> <p>GET:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.batch.processing?&amp;save=0&amp;process=anonymizer&amp;email=john.p.bead%40bonce.com\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_processing/#response_1","title":"Response","text":"<p>If the request executed successfully then HTTP 200 status code is returned and an XML document with a summary of how the metadata records in the selected set have been processed. An example of such a response is shown below:</p> <pre><code>&lt;response&gt;\n  &lt;done&gt;5&lt;/done&gt;\n  &lt;notProcessFound&gt;2&lt;/notProcessFound&gt;\n  &lt;notOwner&gt;0&lt;/notOwner&gt;\n  &lt;notFound&gt;0&lt;/notFound&gt;\n&lt;/response&gt;\n</code></pre> <p>The response fields are:</p> <ul> <li>done - number of metadata records successfully updated</li> <li>notProcessFound - number of metadata records skipped because the process XSLT was not present in their metadata schema</li> <li>notOwner - number of metadata records skipped because the user running this service did not have ownership rights</li> <li>notFound - number of metadata records skipped because they were not found (may have been deleted)</li> </ul> <p>If the request fails an HTTP 500 status code error is returned and the response is an XML document with the exception. An example of such a response is shown below:</p> <pre><code>&lt;error id=\"service-not-allowed\"&gt;\n  &lt;message&gt;Service not allowed&lt;/message&gt;\n  .....\n  &lt;object&gt;xml.metadata.batch.processing&lt;/object&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_processing/#errors_1","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/metadata_xml_processing/#batch-update-child-records-xmlmetadatabatchupdatechildren","title":"Batch update child records (xml.metadata.batch.update.children)","text":"<p>The xml.metadata.batch.update.children service copies metadata elements from the parent metadata record to all child metadata elements.</p> <ul> <li>This service works only for iso19139 (or profile) child metadata records ie. metadata records whose gmd:parentIdentifier is set to the uuid of a metadata record in the catalog.</li> <li>Any child metadata records that do not have the same metadata schema as the parent metadata record will be skipped.</li> <li>The service actually executes an XSLT in the metadata schema directory of the parent metadata record. The XSLT is called <code>update-child-from-parent-info.xsl</code>. It is run on each child metadata record and is passed parameters from the request as required. This design has been chosen to make customization of the service reasonably straight forward.</li> </ul> <p>Note</p> <p>If user of this service does not have edit privileges over a child metadata record then that record will be skipped.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/metadata_xml_processing/#request_2","title":"Request","text":"<p>Parameters:</p> <ul> <li>id: GeoNetwork internal integer id of parent metadata record.</li> <li>parentUuid: Uuid of parent metadata record.</li> <li>schema: Metadata schema name in GeoNetwork.</li> <li>childrenIds: GeoNetwork internal integer ids of child metadata records (comma separated)</li> <li>updateMode: 'replace' means replace content in the children with content from the parent. 'add' means add content from the parent to the child metadata records.</li> <li>Parameters for <code>update-child-from-parent-info.xsl</code>. Examine the relevant XSLT to determine which parameters to specify.</li> </ul> <p>Example request:</p> <p>POST:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.batch.update.children\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n &lt;id&gt;1&lt;/id&gt;\n &lt;parentUuid&gt;da165110-88fd-11da-a88f-000d939bc5d8&lt;/parentUuid&gt;\n &lt;childrenIds&gt;4,&lt;/childrenIds&gt;\n &lt;schema&gt;iso19139&lt;/schema&gt;\n &lt;updateMode&gt;replace&lt;/updateMode&gt;\n &lt;gmd-descriptiveKeywords&gt;true&lt;/gmd-descriptiveKeywords&gt;\n &lt;gmd-contact&gt;true&lt;/gmd-contact&gt;\n &lt;gmd-extent&gt;true&lt;/gmd-extent&gt;\n &lt;gmd-pointOfContact&gt;true&lt;/gmd-pointOfContact&gt;\n &lt;gmd-metadataMaintenance&gt;true&lt;/gmd-metadataMaintenance&gt;\n&lt;/request&gt;\n</code></pre> <p>GET:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.batch.update.children?&amp;id=1&amp;parentUuid=da165110-88fd-11da-a88f-000d939bc5d8&amp;childrenIds=4,&amp;schema=iso19139&amp;updateMode=replace&amp;gmd-descriptiveKeywords=true&amp;gmd-contact=true&amp;gmd-extent=true&amp;gmd-pointOfContact=true&amp;gmd-metadataMaintenance=true\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_processing/#response_2","title":"Response","text":"<p>If the request executed successfully a HTTP 200 status code is returned and some XML describing what was processed. An example of such an XML response is:</p> <pre><code>&lt;response&gt;1 child/children updated for metadata da165110-88fd-11da-a88f-000d939bc5d8.&lt;/response&gt;\n</code></pre> <p>If the request fails an HTTP 500 status code error is returned and the response contains an XML document with details of the exception. An example of such a response is:</p> <pre><code>&lt;error id=\"metadata-not-found\"&gt;\n  &lt;message&gt;Metadata not found&lt;/message&gt;\n  &lt;class&gt;MetadataNotFoundEx&lt;/class&gt;\n  .....\n  &lt;object&gt;Could not find metadata parent record --&gt; 1&lt;/object&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_processing/#errors_2","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> <li>Metadata not found (error id: metadata-not-found), when the parent metadata record doesn't exist. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/metadata_xml_relations/","title":"Metadata Relation services","text":"<p>This section describes the services used to show, get, insert and delete relations between metadata records in GeoNetwork. If the metadata schema has elements that support relationships between metadata records (eg. ISO19115/19139), then the relationships are stored in the Lucene index with the metadata record. If a relationship concept does not exist in the metadata schema, then the relationship is stored in the Relations table as follows:</p> Field Datatype Description id foreign key to Metadata(id) Source metadata relatedId foreign key to Metadata(id) Metadata related to the source"},{"location":"developer/xml_services/metadata_xml_relations/#get-all-related-records-for-a-metadata-record-xmlrelation","title":"Get all related records for a metadata record (xml.relation)","text":"<p>This service retrieves all the related records for a source metadata record specified by id in the parameters. The relationships can come from the Lucene index and/or the Relations table in the database.</p>"},{"location":"developer/xml_services/metadata_xml_relations/#request","title":"Request","text":"<ul> <li>id (integer): This is the local GeoNetwork identifier of the metadata whose relations are requested.</li> </ul> <p>Here is an example of POST/XML request:</p> <pre><code>&lt;request&gt;\n    &lt;id&gt;10&lt;/id&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_relations/#response","title":"Response","text":"<p>If the request executed successfully then HTTP status code 200 is returned along with an XML document containing a relations root element and a relation child for each type of relation found. Example:</p> <pre><code>&lt;relations&gt;\n  &lt;relation type=\"parent\"&gt;\n     &lt;id&gt;3&lt;/id&gt;\n     &lt;uuid&gt;da165110-88fd-11da-a88f-000d939bc5d8&lt;/uuid&gt;\n     &lt;title&gt;....&lt;/title&gt;\n     &lt;abstract&gt;....&lt;/abstract&gt;\n  &lt;/relation&gt;\n&lt;/relations&gt;\n</code></pre> <p>Each relation element has a type attribute indicating the type of relation with the metadata record id specified in the parameters. The XML elements returned vary for each type attribute as follows:</p> <ul> <li> <p>relation type=parent: elements describe the parent metadata record of the specified metadata record:</p> </li> <li> <p>id: GeoNetwork internal id (integer)</p> </li> <li>uuid: Metadata uuid</li> <li>title: Metadata title</li> <li> <p>abstract: A brief explanation of the metadata</p> </li> <li> <p>relation type=children: metadata element describes the child metadata record of the specified metadata record</p> </li> <li> <p>metadata: container for child metadata record</p> <ul> <li>title: Metadata title</li> <li>abstract: A brief explanation of the metadata<ul> <li>Other elements returned by a brief presentation of the child metadata record</li> </ul> </li> </ul> </li> <li> <p>relation type=services: multiple metadata elements describing the service metadata records that operate on the specified metadata record:</p> </li> <li> <p>metadata: container for a service metadata record</p> <ul> <li>title: Metadata title</li> <li>abstract: A brief explanation of the metadata<ul> <li>Other elements returned by a brief presentation of the service metadata record</li> </ul> </li> </ul> </li> <li> <p>relation type=fcats: multiple metadata elements describing the feature catalog metadata records that are related to the specified metadata record</p> </li> <li> <p>metadata: container for feature catalog metadata record</p> <ul> <li>title: Metadata title</li> <li>abstract: A brief explanation of the metadata<ul> <li>Other elements returned by a brief presentation of the feature catalog metadata record</li> </ul> </li> </ul> </li> <li> <p>relation type=hasfeaturecat: metadata element describing the metadata record that has a feature catalog relation to this feature catalog record</p> </li> <li> <p>metadata: container for metadata record</p> <ul> <li>title: Metadata title</li> <li>abstract: A brief explanation of the metadata<ul> <li>Other elements returned by a brief presentation of the metadata record</li> </ul> </li> </ul> </li> <li> <p>relation type=related: elements describe a related metadata record to the specified metadata record:</p> </li> <li> <p>id: GeoNetwork internal id (integer)</p> </li> <li>uuid: Metadata uuid</li> <li>title: Metadata title</li> <li>abstract: A brief explanation of the metadata</li> </ul> <p>If the response did not execute successfully then an HTTP error code 500 is returned along with an XML document describing the exception/what went wrong. An example of such an error response is::</p> <pre><code>&lt;error id=\"metadata-not-found\"&gt;\n  &lt;message&gt;Metadata not found&lt;/message&gt;\n  &lt;class&gt;MetadataNotFoundEx&lt;/class&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_relations/#manage-relationships-in-the-relations-table","title":"Manage Relationships in the Relations table","text":"<p>These services manage relationships between metadata records that are held in the Relations table ie. they are relationships that cannot be held in a metadata record.</p>"},{"location":"developer/xml_services/metadata_xml_relations/#xmlrelationget","title":"xml.relation.get","text":"<p>This service retrieves all the related records for a source metadata record specified by id in the parameters. The related records are those that are in the Relations table ie. they are those that cannot be held in a metadata record.</p>"},{"location":"developer/xml_services/metadata_xml_relations/#request_1","title":"Request","text":"<ul> <li>id (integer) or uuid: This is the local GeoNetwork identifier of the metadata or uuid of metadata whose relations are requested.</li> <li>relation (string, 'normal'): This optional parameter identifies the kind of relation that the client wants to be returned. It can be one of these values:<ul> <li>normal: The service performs a query into the id field and returns all relatedId records.</li> <li>reverse: The service performs a query into the relatedId field and returns all id records.</li> <li>full: Includes both normal and reverse queries (duplicated ids are removed).</li> </ul> </li> </ul> <p>Here is an example of POST/XML request:</p> <pre><code>&lt;request&gt;\n    &lt;id&gt;10&lt;/id&gt;\n    &lt;relation&gt;full&lt;/relation&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_relations/#response_1","title":"Response","text":"<p>If the request executed successfully then HTTP status code 200 is returned along with an XML document containing a response root element and metadata children depending on the relations found. Example:</p> <pre><code>&lt;response&gt;\n    &lt;metadata&gt;...&lt;/metadata&gt;\n    &lt;metadata&gt;...&lt;/metadata&gt;\n    ...\n&lt;/response&gt;\n</code></pre> <p>Each metadata element has the the structure returned by the brief template of the metadata schema presentation XSLT. Typical brief elements are:</p> <ul> <li>title: Metadata title</li> <li>abstract: A brief explanation of the metadata</li> <li>keyword: Keywords found inside the metadata</li> <li>image: Information about thumbnails</li> <li>link: A link to the source site</li> <li>geoBox: coordinates of the bounding box</li> <li>geonet:info: A container for GeoNetwork related information</li> </ul> <p>Example of a brief metadata record presentation for fgdc-std:</p> <pre><code>&lt;metadata&gt;\n    &lt;title&gt;Globally threatened species of the world&lt;/title&gt;\n    &lt;abstract&gt; Contains information on animals.&lt;/abstract&gt;\n    &lt;keyword&gt;biodiversity&lt;/keyword&gt;\n    &lt;keyword&gt;endangered animal species&lt;/keyword&gt;\n    &lt;keyword&gt;endangered plant species&lt;/keyword&gt;\n    &lt;link type=\"url\"&gt;http://www.mysite.org&lt;/link&gt;\n    &lt;geoBox&gt;\n        &lt;westBL&gt;-180.0&lt;/westBL&gt;\n        &lt;eastBL&gt;180.0&lt;/eastBL&gt;\n        &lt;southBL&gt;-90.0&lt;/southBL&gt;\n        &lt;northBL&gt;90.0&lt;/northBL&gt;\n    &lt;/geoBox&gt;\n    &lt;geonet:info&gt;\n        &lt;id&gt;11&lt;/id&gt;\n        &lt;schema&gt;fgdc-std&lt;/schema&gt;\n        &lt;createDate&gt;2005-03-31T19:13:31&lt;/createDate&gt;\n        &lt;changeDate&gt;2007-03-12T14:52:46&lt;/changeDate&gt;\n        &lt;isTemplate&gt;n&lt;/isTemplate&gt;\n        &lt;title/&gt;\n        &lt;source&gt;38b75c1b-634b-443e-9c36-a12e89b4c866&lt;/source&gt;\n        &lt;UUID&gt;84b4190b-de43-4bd7-b25f-6ed47eb239ac&lt;/uuid&gt;\n        &lt;isHarvested&gt;n&lt;/isHarvested&gt;\n        &lt;view&gt;true&lt;/view&gt;\n        &lt;admin&gt;false&lt;/admin&gt;\n        &lt;edit&gt;false&lt;/edit&gt;\n        &lt;notify&gt;false&lt;/notify&gt;\n        &lt;download&gt;true&lt;/download&gt;\n        &lt;dynamic&gt;false&lt;/dynamic&gt;\n        &lt;featured&gt;false&lt;/featured&gt;\n    &lt;/geonet:info&gt;\n&lt;/metadata&gt;\n</code></pre> <p>If the response did not execute successfully then an HTTP error code 500 is returned along with an XML document describing the exception/what went wrong. See Exception handling for more details.</p> <p>Note</p> <p>this service returns an empty response if the metadata record specified in the parameters doesn't exist.</p>"},{"location":"developer/xml_services/metadata_xml_relations/#xmlrelationinsert","title":"xml.relation.insert","text":"<p>This service creates a relationship between a parent metadata record and a child metadata record. The relationship is held in the Relations table ie. relationships inserted using this service are those that cannot be held in a metadata record.</p>"},{"location":"developer/xml_services/metadata_xml_relations/#request_2","title":"Request","text":"<ul> <li>parentId (integer) or parentUuid: This is the identifier of the metadata which we are inserting a relationship for.</li> <li>childId (integer) or parentUuid: This is the identifier of the metadata which will be related to metadata record specified by parentId or parentUuid.</li> </ul> <p>Here is an example of POST/XML request:</p> <pre><code>&lt;request&gt;\n    &lt;parentId&gt;1&lt;/parentId&gt;\n    &lt;childId&gt;2&lt;/childId&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_relations/#response_2","title":"Response","text":"<p>Normally an HTTP status code 200 is returned along with an XML document containing a response root element with an attribute indicating whether the relationship already exists and the parentId and childId parameters from the request. Example:</p> <pre><code>&lt;response alreadyExist=\"false\"&gt;\n  &lt;parentId&gt;1&lt;/parentId&gt;\n  &lt;childId&gt;2&lt;/childId&gt;\n&lt;/response&gt;\n</code></pre> <p>Note</p> <p>this service returns this response even if the metadata records specified in the parameters do not exist.</p> <p>If the response did not execute successfully then an HTTP error code 500 is returned along with an XML document describing the exception/what went wrong. See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_relations/#xmlrelationdelete","title":"xml.relation.delete","text":"<p>This service deletes a relationship between a parent metadata record and a child metadata record. The relationship is held in the Relations table ie. relationships removed using this service are those that cannot be held in a metadata record.</p>"},{"location":"developer/xml_services/metadata_xml_relations/#request_3","title":"Request","text":"<ul> <li>parentId (integer) or parentUuid: This is the identifier of the metadata which we are removing the relationship from.</li> <li>childId (integer) or parentUuid: This is the identifier of the metadata which is related to metadata record specified by parentId or parentUuid.</li> </ul> <p>Here is an example of POST/XML request:</p> <pre><code>&lt;request&gt;\n    &lt;parentId&gt;1&lt;/parentId&gt;\n    &lt;childId&gt;2&lt;/childId&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_relations/#response_3","title":"Response","text":"<p>Normally an HTTP status code 200 is returned along with an XML document with an empty response root element.</p> <p>Note</p> <p>this service returns an empty response regardless of whether the parent and/or child metadata metadata records specified in the id parameters exist or not.</p> <p>If the response did not execute successfully then an HTTP error code 500 is returned along with an XML document describing the exception/what went wrong. See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_search_retrieve/","title":"Search and Retrieve Metadata services","text":""},{"location":"developer/xml_services/metadata_xml_search_retrieve/#search-metadata-xmlsearch","title":"Search metadata (xml.search)","text":"<p>The xml.search service can be used to retrieve metadata records from GeoNetwork.</p> <p>Requires authentication: Optional</p>"},{"location":"developer/xml_services/metadata_xml_search_retrieve/#request","title":"Request","text":"<p>Search configuration parameters (all values are optional)</p> <ul> <li>remote: Search in local catalog or in a remote catalog. Values: off (default), on</li> <li>extended: Values: on, off (default)</li> <li>timeout: Timeout for request in seconds (default: 20)</li> <li>hitsPerPage: Results per page (default: 10)</li> <li>similarity: Lucene accuracy for searches (default 0.8)</li> <li>sortBy: Sorting criteria. Values: relevance (default), rating, popularity, changeDate, title</li> </ul> <p>Search parameters (all values are optional):</p> <ul> <li>eastBL, southBL, northBL, westBL: Bounding box to restrict the search</li> <li>relation: Bounding box criteria. Values: equal, overlaps (default), encloses, fullyOutsideOf, intersection, crosses, touches, within</li> <li>any: Text to search in a free text search</li> <li>title: Metadata title</li> <li>abstract: Metadata abstract</li> <li>themeKey: Metadata keywords. To search for several use a value like \"Global\" or \"watersheds\"</li> <li>template: Indicates if search for templates or not. Values: n (default), y</li> <li>dynamic: Map type. Values: off (default), on</li> <li>download: Map type. Values: off (default), on</li> <li>digital: Map type. Values: off (default), on</li> <li>paper: Map type. Values: off (default), on</li> <li>group: Filter metadata by group, if missing search in all groups</li> <li>attrset:</li> <li>dateFrom: Filter metadata created after specified date</li> <li>dateTo: Filter metadata created before specified date</li> <li>category: Metadata category. If not specified, search all categories</li> </ul> <p>Request to search for all metadata example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.search\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request /&gt;\n</code></pre> <p>Request with free text search example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.search\n\nMime-type:\napplication/xml\n\nPost request:s\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;any&gt;africa&lt;/any&gt;\n&lt;/request&gt;\n</code></pre> <p>Request with a geographic search example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.search\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;any&gt;africa&lt;/any&gt;\n  &lt;eastBL&gt;74.91574&lt;/eastBL&gt;\n  &lt;southBL&gt;29.40611&lt;/southBL&gt;\n  &lt;northBL&gt;38.47198&lt;/northBL&gt;\n  &lt;westBL&gt;60.50417&lt;/westBL&gt;\n  &lt;relation&gt;overlaps&lt;/relation&gt;\n  &lt;sortBy&gt;relevance&lt;/sortBy&gt;\n  &lt;attrset&gt;geo&lt;/attrset&gt;\n&lt;/request&gt;\n</code></pre> <p>Request to search using dates and keywords example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.search\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;title&gt;africa&lt;/title&gt;\n  &lt;themekey&gt;\"Global\" or \"World\"&lt;/themekey&gt;\n  &lt;dateFrom&gt;2000-02-03T12:47:00&lt;/dateFrom&gt;\n  &lt;dateTo&gt;2010-02-03T12:49:00&lt;/dateTo&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_search_retrieve/#response","title":"Response","text":"<p>The response is the metadata record with additional geonet:info section. The main fields are:</p> <ul> <li> <p>response: Response container.</p> <ul> <li> <p>summary: Attribute count indicates the number of metadata records retrieved</p> <ul> <li>keywords: List of keywords that are part of the metadata resultset. Each keyword contains the value and the number of occurences in the retrieved metadata records.</li> </ul> </li> <li> <p>metadata: Container for each metadata record found. Each container has a geonet:info element with the following information:</p> <ul> <li>id: Metadata internal identifier</li> <li>uuid : Metadata Universally Unique Identifier (UUID)</li> <li>schema: Metadata schema</li> <li>createDate: Metadata creation date</li> <li>changeDate: Metadata last modification date</li> <li>source: Source catalogue the metadata</li> <li>category: Metadata category (Can be multiple elements)</li> <li>score: Value indicating the accuracy of search</li> </ul> </li> </ul> </li> </ul> <p>Metadata search response example:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;response from=\"1\" to=\"7\"&gt;\n  &lt;summary count=\"7\" type=\"local\"&gt;\n    &lt;keywords&gt;\n      &lt;keyword count=\"2\" name=\"Global\"/&gt;\n      &lt;keyword count=\"2\" name=\"World\"/&gt;\n      &lt;keyword count=\"2\" name=\"watersheds\"/&gt;\n      &lt;keyword count=\"1\" name=\"Biology\"/&gt;\n      &lt;keyword count=\"1\" name=\"water resources\"/&gt;\n      &lt;keyword count=\"1\" name=\"endangered plant species\"/&gt;\n      &lt;keyword count=\"1\" name=\"Africa\"/&gt;\n      &lt;keyword count=\"1\" name=\"Eurasia\"/&gt;\n      &lt;keyword count=\"1\" name=\"endangered animal species\"/&gt;\n      &lt;keyword count=\"1\" name=\"Antarctic ecosystem\"/&gt;\n    &lt;/keywords&gt;\n  &lt;/summary&gt;\n  &lt;metadata xmlns:gmx=\"http://www.isotc211.org/2005/gmx\"&gt;\n    &lt;geonet:info xmlns:geonet=\"http://www.fao.org/geonetwork\"&gt;\n      &lt;id&gt;12&lt;/id&gt;\n      &lt;uuid&gt;bc179f91-11c1-4878-b9b4-2270abde98eb&lt;/uuid&gt;\n      &lt;schema&gt;iso19139&lt;/schema&gt;\n      &lt;createDate&gt;2007-07-25T12:05:45&lt;/createDate&gt;\n      &lt;changeDate&gt;2007-11-06T12:10:47&lt;/changeDate&gt;\n      &lt;source&gt;881a1630-d4e7-4c9c-aa01-7a9bbbbc47b2&lt;/source&gt;\n      &lt;category&gt;maps&lt;/category&gt;\n      &lt;category&gt;interactiveResources&lt;/category&gt;\n      &lt;score&gt;1.0&lt;/score&gt;\n    &lt;/geonet:info&gt;\n  &lt;/metadata&gt;\n  &lt;metadata xmlns:gmx=\"http://www.isotc211.org/2005/gmx\"&gt;\n    &lt;geonet:info xmlns:geonet=\"http://www.fao.org/geonetwork\"&gt;\n      &lt;id&gt;11&lt;/id&gt;\n      &lt;uuid&gt;5df54bf0-3a7d-44bf-9abf-84d772da8df1&lt;/uuid&gt;\n      &lt;schema&gt;iso19139&lt;/schema&gt;\n      &lt;createDate&gt;2007-07-19T14:45:07&lt;/createDate&gt;\n      &lt;changeDate&gt;2007-11-06T12:13:00&lt;/changeDate&gt;\n      &lt;source&gt;881a1630-d4e7-4c9c-aa01-7a9bbbbc47b2&lt;/source&gt;\n      &lt;category&gt;maps&lt;/category&gt;\n      &lt;category&gt;datasets&lt;/category&gt;\n      &lt;category&gt;interactiveResources&lt;/category&gt;\n      &lt;score&gt;0.9178859&lt;/score&gt;\n    &lt;/geonet:info&gt;\n  &lt;/metadata&gt;\n&lt;/response&gt;\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_search_retrieve/#get-metadata-xmlmetadataget","title":"Get metadata (xml.metadata.get)","text":"<p>The xml.metadata.get service can be used to retrieve a metadata record stored in GeoNetwork.</p> <p>Requires authentication: Optional</p>"},{"location":"developer/xml_services/metadata_xml_search_retrieve/#request_1","title":"Request","text":"<p>One of the following parameters:</p> <ul> <li>uuid : Metadata Universal Unique Identifier (UUID)</li> <li>id: Metadata internal identifier</li> </ul> <p>Get metadata request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.get\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;uuid&gt;aa9bc613-8eef-4859-a9eb-4df35d8b21e4&lt;/uuid&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_search_retrieve/#response_1","title":"Response","text":"<p>Successful response (HTTP status code 200) is the XML metadata record with additional geonet:info section. The principal fields for geonet:info are:</p> <ul> <li>schema: Metadata schema</li> <li>createDate: Metadata creation date</li> <li>changeDate: Metadata last modification date</li> <li>isTemplate: Indicates if the metadata returned is a template</li> <li>title: Metadata title</li> <li>source: Source catalogue the metadata</li> <li>uuid : Metadata Universally Unique Identifier (UUID)</li> <li>isHarvested: Indicates if the metadata is harvested</li> <li>popularity: Indicates how often the record is retrieved</li> <li>rating: Average rating provided by users</li> <li>State of operation on metadata for the user: view, notify, download, dynamic, featured, edit</li> <li>owner: Indicates if the user that executed the service is the owner of metadata</li> <li>ownername: Metadata owner name</li> </ul> <p>Get metadata response example:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;Metadata xmlns:geonet=\"http://www.fao.org/geonetwork\"\n  xmlns:csw=\"http://www.opengis.net/cat/csw/2.0.2\"&gt;\n  &lt;mdFileID&gt;aa9bc613-8eef-4859-a9eb-4df35d8b21e4&lt;/mdFileID&gt;\n  ...\n  &lt;geonet:info&gt;\n    &lt;id&gt;10&lt;/id&gt;\n    &lt;schema&gt;iso19115&lt;/schema&gt;\n    &lt;createDate&gt;2005-08-23T17:58:18&lt;/createDate&gt;\n    &lt;changeDate&gt;2007-03-12T17:49:50&lt;/changeDate&gt;\n    &lt;isTemplate&gt;n&lt;/isTemplate&gt;\n    &lt;title /&gt;\n    &lt;source&gt;881a1630-d4e7-4c9c-aa01-7a9bbbbc47b2&lt;/source&gt;\n    &lt;uuid&gt;aa9bc613-8eef-4859-a9eb-4df35d8b21e4&lt;/uuid&gt;\n    &lt;isHarvested&gt;n&lt;/isHarvested&gt;\n    &lt;popularity&gt;0&lt;/popularity&gt;\n    &lt;rating&gt;0&lt;/rating&gt;\n    &lt;view&gt;true&lt;/view&gt;\n    &lt;notify&gt;true&lt;/notify&gt;\n    &lt;download&gt;true&lt;/download&gt;\n    &lt;dynamic&gt;true&lt;/dynamic&gt;\n    &lt;featured&gt;true&lt;/featured&gt;\n    &lt;edit&gt;true&lt;/edit&gt;\n    &lt;owner&gt;true&lt;/owner&gt;\n    &lt;ownername&gt;admin&lt;/ownername&gt;\n    &lt;subtemplates /&gt;\n  &lt;/geonet:info&gt;\n&lt;/Metadata&gt;\n</code></pre> <p>Error response (HTTP 500 status code) is an XML document with the details of what went wrong. An example of such a response is as follows:</p> <pre><code>&lt;error id=\"operation-not-allowed\"&gt;\n  &lt;message&gt;Operation not allowed&lt;/message&gt;\n  &lt;class&gt;OperationNotAllowedEx&lt;/class&gt; \n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_search_retrieve/#errors","title":"Errors","text":"<ul> <li>Request must contain a UUID or an ID, if a uuid or id parameter was not provided. Returns 500 HTTP code</li> <li>Operation not allowed (error id: operation-not-allowed), when the user is not allowed to view the metadata record. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/metadata_xml_search_retrieve/#get-user-metadata-xmlusermetadata","title":"Get user metadata (xml.user.metadata)","text":"<p>The xml.user.metadata service can be used to retrieve a metadata records according to the user profile of the authenticated user running the service:</p> <ul> <li>Administrator profile: return all metadata records</li> <li>Reviewer or User Administrator profile: return all metadata records with groupOwner in the set of groups the user belongs to</li> <li>Editor profile: return all metadata records owned by the user</li> </ul> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/metadata_xml_search_retrieve/#request_2","title":"Request","text":"<ul> <li>sortBySelect : (optional) parameter specifying sort order of metadata records returned.</li> </ul> <p>Get metadata request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.user.metadata\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request/&gt;\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_search_retrieve/#response_2","title":"Response","text":"<p>Successful response is an XML document with a response container and the user metadata records as children of that container. Each child has a geonet:info element which gives GeoNetwork specific metadata about the metadata record. An example response (with some content removed for brevity) is as follows:</p> <pre><code>&lt;response&gt;\n  &lt;!-- metadata record 1 --&gt;\n  &lt;gmd:MD_Metadata ....&gt; \n  &lt;/gmd:MD_Metadata&gt;\n  &lt;!-- metadata record 2 --&gt;\n  &lt;gmd:MD_Metadata ....&gt;\n  &lt;/gmd:MD_Metadata&gt;\n&lt;/response&gt;\n</code></pre> <p>Error response is an XML document with error container and the details of the error. Example:</p> <pre><code>&lt;error id=\"service-not-allowed\"&gt;\n    &lt;message&gt;Service not allowed&lt;/message&gt;\n  ....\n  &lt;object&gt;xml.user.metadata&lt;/object&gt;\n  &lt;request&gt;\n    &lt;language&gt;eng&lt;/language&gt;\n    &lt;service&gt;xml.user.metadata&lt;/service&gt;\n  &lt;/request&gt;\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_search_retrieve/#errors_1","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), user isn't allowed to run this service. Returned 500 HTTP code.</li> <li>Unauthorized user attempted to list editable metadata (error id: operation-not-allowed), when the user is not allowed to list metadata records. Returned 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/metadata_xml_search_retrieve/#rss-search-search-metadata-and-retrieve-in-rss-format-rsssearch","title":"RSS Search: Search metadata and retrieve in RSS format (rss.search)","text":"<p>The rss.search service can be used to retrieve metadata records in RSS format, using regular search parameters. This service can be configured in WEB-INF/config.xml with the following parameters:</p> <ul> <li>maxSummaryKeys: Maximum number of RSS records to retrieve (default = 10)</li> </ul> <p>Requires authentication: Optional. If not provided only public metadata records are retrieved</p>"},{"location":"developer/xml_services/metadata_xml_search_retrieve/#request_3","title":"Request","text":"<p>Parameters:</p> <ul> <li>georss: valid values are simple, simplepoint and default. See also http://georss.org<ul> <li>simple: Bounding box in georss simple format</li> <li>simplepoint: Bounding box in georss simplepoint format</li> <li>default: Bounding box in georss GML format</li> </ul> </li> <li>eastBL, southBL, northBL, westBL: Bounding box to restrict the search****</li> <li>relation: Bounding box criteria. Values: equal, overlaps (default), encloses, fullyOutsideOf, intersection, crosses, touches, within</li> <li>any: Text to search in a free text search</li> <li>title: Metadata title</li> <li>abstract: Metadata abstract</li> <li>themeKey: Metadata keywords. To search for several use a value like \"Global\" or \"watersheds\"</li> <li>dynamic: Map type. Values: off (default), on</li> <li>download: Map type. Values: off (default), on</li> <li>digital: Map type. Values: off (default), on</li> <li>paper: Map type. Values: off (default), on</li> <li>group: Filter metadata by group, if missing search in all groups</li> <li>attrset:</li> <li>dateFrom: Filter metadata created after specified date</li> <li>dateTo: Filter metadata created before specified date</li> <li>category: Metadata category. If not specified, search all categories</li> </ul> <p>RSS search request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/rss.search\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;georss&gt;simplepoint&lt;/georss&gt;\n  &lt;any&gt;africa&lt;/any&gt;\n  &lt;eastBL&gt;74.91574&lt;/eastBL&gt;\n  &lt;southBL&gt;29.40611&lt;/southBL&gt;\n  &lt;northBL&gt;38.47198&lt;/northBL&gt;\n  &lt;westBL&gt;60.50417&lt;/westBL&gt;\n  &lt;relation&gt;overlaps&lt;/relation&gt;\n  &lt;sortBy&gt;relevance&lt;/sortBy&gt;\n  &lt;attrset&gt;geo&lt;/attrset&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_search_retrieve/#response_3","title":"Response","text":"<p>The principal fields of the response are:</p> <ul> <li>channel: This is the container for the RSS response<ul> <li>title: RSS channel title</li> <li>description: RSS channel description</li> <li>item: Metadata RSS item (one item for each metadata retrieved)<ul> <li>title: Metadata title</li> <li>link: Link to show metadata page. Additional link elements (with rel=\"alternate\") to OGC WXS services, shapefile/images files, Google KML, etc. can be returned depending on metadata</li> <li>description: Metadata description</li> <li>pubDate: Metadata publication date</li> <li>media: Metadata thumbnails</li> <li>georss:point: Bounding box in georss simplepoint format</li> </ul> </li> </ul> </li> </ul> <p>RSS search response example:</p> <pre><code>Mimetype:\napplication/rss+xml\n\nResponse:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;rss xmlns:media=\"http://search.yahoo.com/mrss/\" xmlns:georss=\"http://www.georss.org/georss\" xmlns:gml=\"http://www.opengis.net/gml\" version=\"2.0\"&gt;\n  &lt;channel&gt;\n    &lt;title&gt;GeoNetwork opensource portal to spatial data and information&lt;/title&gt;\n    &lt;link&gt;http://localhost:8080/geonetwork&lt;/link&gt;\n    &lt;description&gt;GeoNetwork opensource provides Internet access to interactive maps, satellite imagery and related spatial databases ... &lt;/description&gt;\n    &lt;language&gt;en&lt;/language&gt;\n    &lt;copyright&gt;All rights reserved. Your generic copyright statement &lt;/copyright&gt;\n    &lt;category&gt;Geographic metadata catalog&lt;/category&gt;\n    &lt;generator&gt;GeoNetwork opensource&lt;/generator&gt;\n    &lt;ttl&gt;30&lt;/ttl&gt;\n    &lt;item&gt;\n      &lt;title&gt;Hydrological Basins in Africa (Sample record, please remove!)&lt;/title&gt;\n      &lt;link&gt;http://localhost:8080/geonetwork?uuid=5df54bf0-3a7d-44bf-9abf-84d772da8df1&lt;/link&gt;\n      &lt;link href=\"http://geonetwork3.fao.org/ows/296?SERVICE=wms$amp;VERSION=1.1.1&amp;REQUEST=GetMap&amp;BBOX=-17.3,-34.6,51.1,38.2&amp;LAYERS=hydrological_basins&amp;SRS=EPSG:4326&amp;WIDTH=200&amp;HEIGHT=213&amp;FORMAT=image/png&amp;TRANSPARENT=TRUE&amp;STYLES=default\" type=\"image/png\" rel=\"alternate\" title=\"Hydrological basins in Africa\"/&gt;\n      &lt;link href=\"http://localhost:8080/geonetwork/srv/eng/google.kml?uuid=5df54bf0-3a7d-44bf-9abf-84d772da8df1&amp;layers=hydrological_basins\" type=\"application/vnd.google-earth.kml+xml\" rel=\"alternate\" title=\"Hydrological basins in Africa\"/&gt;\n      &lt;category&gt;Geographic metadata catalog&lt;/category&gt;\n      &lt;description&gt;&lt;![CDATA[ ... ]]&gt;&lt;/description&gt;\n      &lt;pubDate&gt;06 Nov 2007 12:13:00 EST&lt;/pubDate&gt;\n      &lt;guid&gt;http://localhost:8080/geonetwork?uuid=5df54bf0-3a7d-44bf-9abf-84d772da8df1&lt;/guid&gt;\n      &lt;media:content url=\"/geonetwork/srv/eng/resources.get?id=11&amp;fname=thumbnail_s.gif&amp;access=public\" type=\"image/gif\" width=\"100\"/&gt;\n      &lt;media:text&gt;Major hydrological basins and their sub-basins ...&lt;/media:text&gt;\n      &lt;!--Bounding box in georss simplepoint format (default) (http://georss.org)--&gt;\n      &lt;georss:point&gt;16.9 1.8&lt;/georss:point&gt;\n      &lt;/item&gt;\n  &lt;/channel&gt;\n&lt;/rss&gt;\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_search_retrieve/#rss-latest-get-latest-updated-metadata-rsslatest","title":"RSS latest: Get latest updated metadata (rss.latest)","text":"<p>The rss.latest service can be used to retrieve the most recently modified metadata records in RSS format. This service can be configured in WEB-INF/config.xml file with the following parameters:</p> <ul> <li>maxItems: Maximum number of RSS records to retrieve (default = 20)</li> <li>timeBetweenUpdates: Minimum time (in seconds) between queries for latest updated metadata. If a request is received less than timeBetweenUpdates seconds after the last request, it will receive the same response.</li> </ul> <p>Requires authentication: Optional. If not provided only public metadata records are retrieved</p>"},{"location":"developer/xml_services/metadata_xml_search_retrieve/#request_4","title":"Request","text":"<p>Parameters:</p> <ul> <li>georss: valid values are simple, simplepoint and default. See also http://georss.org<ul> <li>simple: Bounding box in georss simple format</li> <li>simplepoint: Bounding box in georss simplepoint format</li> <li>default: Bounding box in georss GML format</li> </ul> </li> </ul> <p>RSS latest request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/rss.latest\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;georss&gt;default&lt;/georss&gt;\n  &lt;maxItems&gt;1&lt;/maxItems&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_search_retrieve/#response_4","title":"Response","text":"<p>The following are the principal fields of the response:</p> <ul> <li>channel: This is the container for the RSS response<ul> <li>title: RSS channel title</li> <li>description: RSS channel description</li> <li>item: Metadata RSS item (one item for each metadata retrieved)<ul> <li>title: Metadata title</li> <li>link: Link to show metadata page. Additional link elements (with rel=\"alternate\") to OGC WXS services, shapefile/images files, Google KML, etc. can be returned depending on metadata</li> <li>description: Metadata description</li> <li>pubDate: Metadata publication date</li> <li>media: Metadata thumbnails</li> <li>georss:where: Bounding box with the metadata extent</li> </ul> </li> </ul> </li> </ul> <p>RSS latest response example:</p> <pre><code>Mimetype:\napplication/rss+xml\n\nResponse:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;rss xmlns:media=\"http://search.yahoo.com/mrss/\" xmlns:georss=\"http://www.georss.org/georss\"\n  xmlns:gml=\"http://www.opengis.net/gml\" version=\"2.0\"&gt;\n&lt;channel&gt;\n  &lt;title&gt;GeoNetwork opensource portal to spatial data and information&lt;/title&gt;\n  &lt;link&gt;http://localhost:8080/geonetwork&lt;/link&gt;\n  &lt;description&gt;GeoNetwork opensource provides Internet access to interactive maps,\n  satellite imagery and related spatial databases ... &lt;/description&gt;\n  &lt;language&gt;en&lt;/language&gt;\n  &lt;copyright&gt;All rights reserved. Your generic copyright statement &lt;/copyright&gt;\n  &lt;category&gt;Geographic metadata catalog&lt;/category&gt;\n  &lt;generator&gt;GeoNetwork opensource&lt;/generator&gt;\n  &lt;ttl&gt;30&lt;/ttl&gt;\n  &lt;item&gt;\n    &lt;title&gt;Hydrological Basins in Africa (Sample record, please remove!)&lt;/title&gt;\n    &lt;link&gt;http://localhost:8080/geonetwork?uuid=5df54bf0-3a7d-44bf-9abf-84d772da8df1&lt;/link&gt;\n    &lt;link href=\"http://geonetwork3.fao.org/ows/296?SERVICE=wms$amp;VERSION=1.1.1&amp;REQUEST=GetMap\n      &amp;BBOX=-17.3,-34.6,51.1,38.2&amp;LAYERS=hydrological_basins&amp;SRS=EPSG:4326&amp;WIDTH=200\n      &amp;HEIGHT=213&amp;FORMAT=image/png&amp;TRANSPARENT=TRUE&amp;STYLES=default\" type=\"image/png\"\n      rel=\"alternate\" title=\"Hydrological basins in Africa\"/&gt;\n    &lt;link href=\"http://localhost:8080/geonetwork/srv/eng/google.kml?\n      uuid=5df54bf0-3a7d-44bf-9abf-84d772da8df1&amp;layers=hydrological_basins\"\n      type=\"application/vnd.google-earth.kml+xml\"\n      rel=\"alternate\" title=\"Hydrological basins in Africa\"/&gt;\n    &lt;category&gt;Geographic metadata catalog&lt;/category&gt;\n    &lt;description&gt;&lt;![CDATA[ ... ]]&gt;&lt;/description&gt;\n    &lt;pubDate&gt;06 Nov 2007 12:13:00 EST&lt;/pubDate&gt;\n    &lt;guid&gt;http://localhost:8080/geonetwork?uuid=5df54bf0-3a7d-44bf-9abf-84d772da8df1&lt;/guid&gt;\n    &lt;media:content url=\"/geonetwork/srv/eng/resources.get?id=11&amp;fname=thumbnail_s.gif\n      &amp;access=public\" type=\"image/gif\" width=\"100\"/&gt;\n      &lt;media:text&gt;Major hydrological basins and their sub-basins ...&lt;/media:text&gt;\n   &lt;!--Bounding box in georss GML format (http://georss.org)--&gt;\n   &lt;georss:where&gt;\n     &lt;gml:Envelope&gt;\n       &lt;gml:lowerCorner&gt;-34.6 -17.3&lt;/gml:lowerCorner&gt;\n       &lt;gml:upperCorner&gt;38.2 51.1&lt;/gml:upperCorner&gt;\n     &lt;/gml:Envelope&gt;\n   &lt;/georss:where&gt;\n  &lt;/item&gt;\n&lt;/channel&gt;\n&lt;/rss&gt;\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_select/","title":"Metadata Select services","text":"<p>These services are for creating and managing a set of selected metadata records. The selected set is normally used by the metadata.batch services eg. <code>metadata.batch.update.privileges</code>, <code>metadata.batch.newowner</code>, <code>metadata.batch.update.status</code>, <code>metadata.batch.update.categories</code>, <code>metadata.batch.version</code>, <code>metadata.batch.processing</code> and <code>metadata.batch.delete</code>.</p>"},{"location":"developer/xml_services/metadata_xml_select/#metadata.select","title":"Select metadata records (xml.metadata.select)","text":"<p>This service can be used to build and manage a selected set of metadata.</p>"},{"location":"developer/xml_services/metadata_xml_select/#request","title":"Request","text":"<p>Parameters:</p> <ul> <li>id: Identifier of metadata to select (can be more than one)</li> <li>selected: Selection state. Values: add, add-all, remove, remove-all</li> </ul> <p>Select all metadata example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/metadata.select\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;selected&gt;add-all&lt;/selected&gt;\n&lt;/request&gt;\n</code></pre> <p>Select a metadata record example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/metadata.select\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;id&gt;2&lt;/id&gt;\n  &lt;selected&gt;add&lt;/selected&gt;\n&lt;/request&gt;\n</code></pre> <p>Clear metadata selection example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/metadata.select\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;selected&gt;remove-all&lt;/selected&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_select/#response","title":"Response","text":"<p>The XML response from this service always contains the number of metadata records selected after applying the select operation.</p> <p>Example:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;Selected&gt;10&lt;/Selected&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_status/","title":"Metadata Status services","text":""},{"location":"developer/xml_services/metadata_xml_status/#update-status-on-a-metadata-record-xmlmetadatastatus","title":"Update Status on a metadata record (xml.metadata.status)","text":"<p>The xml.metadata.status service updates the status on a metadata record using the status and changeMessage provided as parameters.</p> <p>Note</p> <p>The previously assigned status will be removed. If versioning for the metadata record is on, then the previously assigned status will be available in the version history.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/metadata_xml_status/#request","title":"Request","text":"<p>Parameters:</p> <ul> <li>id or uuid: Identifier of metadata to update</li> <li> <p>status: One of the status identifiers take from the database table <code>statusvalues</code>. Status identifiers can be retrieved using the <code>xml.info</code> service. The core status identifiers are:</p> <ul> <li>0: unknown</li> <li>1: draft</li> <li>2: approved</li> <li>3: retired</li> <li>4: submitted</li> <li>5: rejected</li> </ul> </li> <li> <p>changeMessage: description of why the status has changed.</p> </li> </ul> <p>Request example:</p> <p>POST:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.status\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;id&gt;6&lt;/id&gt;\n  &lt;status&gt;5&lt;/status&gt;\n  &lt;changeMessage&gt;Completely unacceptable: consistency rules ignored&lt;changeMessage/&gt;\n&lt;/request&gt;\n</code></pre> <p>GET:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.status?id=6&amp;status=5&amp;changeMessage=Do%20it%20all%20again%20nitwit\n</code></pre> <p>Note</p> <p>URL encoding of changeMessage.</p>"},{"location":"developer/xml_services/metadata_xml_status/#response","title":"Response","text":"<p>If the request executes successfully then HTTP status code 200 is returned along with an XML document which contains the identifier of the metadata whose status has been updated.</p> <p>Example:</p> <pre><code>&lt;response&gt;\n  &lt;id&gt;6&lt;/id&gt;\n&lt;/response&gt;\n</code></pre> <p>If an error occurred then HTTP status code 500 is returned along with an XML document which contains details of what went wrong. An example of such an error response is:</p> <pre><code>&lt;error id=\"metadata-not-found\"&gt;\n  &lt;message&gt;Metadata not found&lt;/message&gt;\n  &lt;class&gt;MetadataNotFoundEx&lt;/class&gt; \n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_status/#errors","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 401 HTTP code</li> <li>Metadata not found (error id: metadata-not-found) if a metadata record with the identifier provided does not exist</li> <li>Only the owner of the metadata can set the status. User is not the owner of the metadata, if the user does not have ownership rights over the metadata record.</li> </ul>"},{"location":"developer/xml_services/metadata_xml_status/#metadata.batch.update.status","title":"Batch update status (xml.metadata.batch.update.status)","text":"<p>The xml.metadata.batch.update.status service updates the status on a selected set of metadata using the status and changeMessage sent as parameters.</p> <p>Note</p> <p>This service requires a previous call to the <code>xml.metadata.select</code> service (see <code>metadata.select</code>) to select metadata records.</p> <p>Note</p> <p>Only those metadata records for which the user running the service has ownership rights on will be updated and all status values previously assigned will be deleted. If metadata versioning is on then status changes will be recorded in the version history.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/metadata_xml_status/#request_1","title":"Request","text":"<p>Parameters:</p> <ul> <li> <p>status: One of the status identifiers take from the database table <code>statusvalues</code>. Status identifiers can be retrieved using the <code>xml.info</code> service. The core status identifiers are:</p> <ul> <li>0: unknown</li> <li>1: draft</li> <li>2: approved</li> <li>3: retired</li> <li>4: submitted</li> <li>5: rejected</li> </ul> </li> <li> <p>changeMessage: description of why the status has changed.</p> </li> </ul> <p>Example request:</p> <p>POST:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.batch.update.status\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;status&gt;5&lt;/status&gt;\n  &lt;changeMessage&gt;Completely unacceptable: consistency rules ignored&lt;changeMessage/&gt;\n&lt;/request&gt;\n</code></pre> <p>GET:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.batch.update.status?&amp;status=5&amp;changeMessage=Do%20it%20all%20again%20nitwit\n</code></pre> <p>Note</p> <p>URL encoding of changeMessage.</p>"},{"location":"developer/xml_services/metadata_xml_status/#response_1","title":"Response","text":"<p>If the request executed successfully then HTTP 200 status code is returned and an XML document with a summary of how the metadata records in the selected set have been processed. An example of such a response is shown below:</p> <pre><code>&lt;response&gt;\n  &lt;done&gt;5&lt;/done&gt;\n  &lt;notOwner&gt;0&lt;/notOwner&gt;\n  &lt;notFound&gt;0&lt;/notFound&gt;\n  &lt;noChange&gt;0&lt;/noChange&gt;\n&lt;/response&gt;\n</code></pre> <p>The response fields are:</p> <ul> <li>done - number of metadata records successfully updated</li> <li>notOwner - number of metadata records skipped because the user running this service did not have ownership rights</li> <li>notFound - number of metadata records skipped because they were not found (may have been deleted)</li> <li>noChange - number of metadata records whose ownership was unchanged by the operation.</li> </ul> <p>If the request fails an HTTP 500 status code error is returned and the response is an XML document with the exception. An example of such a response is shown below:</p> <pre><code>&lt;error id=\"service-not-allowed\"&gt;\n  &lt;message&gt;Service not allowed&lt;/message&gt;\n  &lt;class&gt;ServiceNotAllowedEx&lt;/class&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_status/#errors_1","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/metadata_xml_status/#get-status-of-a-metadata-record-xmlmetadatastatusget","title":"Get status of a metadata record (xml.metadata.status.get)","text":"<p>This service gets the status of a particular metadata record specified by id or uuid as a parameter.</p> <p>Requires authentication: No.</p>"},{"location":"developer/xml_services/metadata_xml_status/#request_2","title":"Request","text":"<p>Parameters:</p> <ul> <li>id or uuid: Identifier of metadata to obtain status of.</li> </ul> <p>Example request:</p> <p>POST:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.status.get\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;id&gt;5&lt;/id&gt;\n&lt;/request&gt;\n</code></pre> <p>GET:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.status.get?&amp;id=5\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_status/#response_2","title":"Response","text":"<p>If the request executed successfully a HTTP 200 status code is returned and the XML with status values for the metadata record (note: all changesin status are returned in the response) is returned. An example follows:</p> <pre><code>&lt;response&gt;\n  &lt;record&gt;\n   &lt;statusid&gt;5&lt;/statusid&gt;\n   &lt;userid&gt;4&lt;/userid&gt;\n   &lt;changedate&gt;2012-12-27T14:58:04&lt;/changedate&gt;\n   &lt;changemessage&gt;Do it all again&lt;/changemessage&gt;\n   &lt;name&gt;rejected&lt;/name&gt;\n  &lt;/record&gt;\n  &lt;record&gt;\n   &lt;statusid&gt;4&lt;/statusid&gt;\n   &lt;userid&gt;6&lt;/userid&gt;\n   &lt;changedate&gt;2012-12-27T14:32:10&lt;/changedate&gt;\n   &lt;changemessage&gt;Ready for review&lt;/changemessage&gt;\n   &lt;name&gt;submitted&lt;/name&gt;\n  &lt;/record&gt;\n &lt;/response&gt;\n</code></pre> <p>If the request did not execute successfully then HTTP 500 status code error is returned along with an XML document which includes details of the exception/what went wrong. An example of such a request is::</p> <pre><code>&lt;error id=\"metadata-not-found\"&gt;\n  &lt;message&gt;Metadata not found&lt;/message&gt;\n  &lt;class&gt;MetadataNotFoundEx&lt;/class&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_status/#errors_2","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> <li>Metadata not found (error id: metadata-not-found), when the metadata record requested is not found. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/metadata_xml_status/#defining-status-actions","title":"Defining status actions","text":"<p>The behaviour of GeoNetwork when a status changes can be defined by the programmer. See Java Metadata Status Actions.</p>"},{"location":"developer/xml_services/metadata_xml_validation/","title":"Metadata Validation services","text":"<p>These services are for validating metadata against the XML schema documents (XSDs) and schematrons specified as part of a GeoNetwork Metadata Schema. See Schema Plugins for more details.</p>"},{"location":"developer/xml_services/metadata_xml_validation/#validate-a-metadata-record-xmlmetadatavalidation","title":"Validate a metadata record (xml.metadata.validation)","text":"<p>This service can be used to validate a metadata record supplied as an XML parameter. The metadata record is first passed through the GeoNetwork schema detection rules (see Schema Plugins). After successful schema detection the metadata record is validated against the XML schema documents and schematrons (if any) specified in that schema.</p> <p>Authentication required: No</p>"},{"location":"developer/xml_services/metadata_xml_validation/#request","title":"Request","text":"<p>Parameters:</p> <ul> <li>data: Metadata record.</li> </ul> <p>Example with an ISO19115/19139 metadata record:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.validation\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;data&gt;&lt;![CDATA[\n    &lt;gmd:MD_Metadata ....&gt;\n      .....\n    &lt;/gmd:MD_Metadata&gt;\n  ]]&gt;&lt;/data&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_validation/#response","title":"Response","text":"<p>If the validation is successful an HTTP 200 response code is returned along with an XML document giving details of the GeoNetwork metadata schema that the record matched and was successfully validated against.</p> <p>Example:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;response&gt;\n  &lt;valid&gt;y&lt;/valid&gt;\n  &lt;schema&gt;iso19139&lt;/schema&gt;\n&lt;/response&gt;\n</code></pre> <p>If the validation was not successful then an HTTP 500 error response code is returned along with an XML document describing the validation problems. An example is:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;error id=\"xsd-validation-error\"&gt;\n  &lt;message&gt;XSD Validation error(s):\n    .....\n  &lt;/message&gt;\n  &lt;stack&gt;\n    .....\n  &lt;/stack&gt;\n  &lt;object&gt;\n   &lt;xsderrors&gt;\n    &lt;error&gt;\n      &lt;typeOfError&gt;WARNING&lt;/typeOfError&gt;\n      &lt;errorNumber&gt;1&lt;/errorNumber&gt;\n      &lt;message&gt;....&lt;/message&gt;\n      &lt;xpath&gt;.&lt;/xpath&gt;\n    &lt;/error&gt;\n   &lt;/xsderrors&gt;\n  &lt;/object&gt;\n  &lt;request&gt;\n    &lt;language&gt;eng&lt;/language&gt;\n    &lt;service&gt;xml.metadata.validation&lt;/service&gt;\n  &lt;/request&gt;\n &lt;/error&gt;\n</code></pre> <p>Note</p> <p>XML parseable description of the validation problems is in the object container.</p> <p>Validation may also fail when schematrons are applied to the metadata record. An HTTP error response code is returned along with an XML document describing the validation problems. An example is:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;error id=\"schematron-validation-error\"&gt;^M\n  &lt;message&gt;Schematron errors detected\n    .....\n  &lt;/message&gt;\n  &lt;stack&gt;\n    .....\n  &lt;/stack&gt;\n  &lt;object&gt;\n  &lt;geonet:schematronerrors xmlns:geonet=\"http://www.fao.org/geonetwork\"&gt;\n    &lt;geonet:report geonet:rule=\"schematron-rules-iso\"&gt;\n      &lt;svrl:schematron-output xmlns:svrl=\"http://purl.oclc.org/dsdl/svrl\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:schold=\"http://www.ascc.net/xml/schematron\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:iso=\"http://purl.oclc.org/dsdl/schematron\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\" xmlns:gco=\"http://www.isotc211.org/2005/gco\" xmlns:srv=\"http://www.isotc211.org/2005/srv\" xmlns:gmd=\"http://www.isotc211.org/2005/gmd\" title=\"Schematron validation for ISO&amp;#xA;&amp;#x9;&amp;#x9;19115(19139)\" schemaVersion=\"\"&gt;\n        &lt;svrl:ns-prefix-in-attribute-values uri=\"http://www.opengis.net/gml\" prefix=\"gml\" /&gt;\n        &lt;svrl:ns-prefix-in-attribute-values uri=\"http://www.isotc211.org/2005/gmd\" prefix=\"gmd\" /&gt;\n        &lt;svrl:ns-prefix-in-attribute-values uri=\"http://www.isotc211.org/2005/srv\" prefix=\"srv\" /&gt;\n        &lt;svrl:ns-prefix-in-attribute-values uri=\"http://www.isotc211.org/2005/gco\" prefix=\"gco\" /&gt;\n        &lt;svrl:ns-prefix-in-attribute-values uri=\"http://www.fao.org/geonetwork\" prefix=\"geonet\" /&gt;\n        &lt;svrl:ns-prefix-in-attribute-values uri=\"http://www.w3.org/1999/xlink\" prefix=\"xlink\" /&gt;\n        &lt;svrl:active-pattern document=\"\" name=\"CharacterString must have content or its parent must have a valid nilReason attribute.\" /&gt;\n        &lt;svrl:fired-rule context=\"*[gco:CharacterString]\" /&gt;\n        &lt;svrl:fired-rule context=\"*[gco:CharacterString]\" /&gt;\n        &lt;svrl:fired-rule context=\"*[gco:CharacterString]\" /&gt;\n        &lt;svrl:fired-rule context=\"*[gco:CharacterString]\" /&gt;\n        &lt;svrl:fired-rule context=\"*[gco:CharacterString]\" /&gt;\n        &lt;svrl:fired-rule context=\"*[gco:CharacterString]\" /&gt;\n        &lt;svrl:fired-rule context=\"*[gco:CharacterString]\" /&gt;\n        &lt;svrl:fired-rule context=\"*[gco:CharacterString]\" /&gt;\n        &lt;svrl:fired-rule context=\"*[gco:CharacterString]\" /&gt;\n        &lt;svrl:fired-rule context=\"*[gco:CharacterString]\" /&gt;\n        &lt;svrl:active-pattern document=\"\" name=\"CRS attributes constraints\" /&gt;\n        &lt;svrl:active-pattern document=\"\" name=\"[ISOFTDS19139:2005-TableA1-Row24] - A name is required for contact\" /&gt;\n        &lt;svrl:fired-rule context=\"//*[gmd:CI_ResponsibleParty]\" /&gt;\n        &lt;svrl:failed-assert ref=\"#_31\" test=\"$count &amp;gt; 0\" location=\"/*[local-name()='MD_Metadata']/*[local-name()='identificationInfo']/*[local-name()='MD_DataIdentification']/*[local-name()='citation']/*[local-name()='CI_Citation']/*[local-name()='citedResponsibleParty']\"&gt;\n          &lt;svrl:text&gt;\n            &lt;alert.M8&gt;\n              &lt;div&gt;\n                You must specify one or more of individualName, organisationName or positionName.\n                &lt;span class=\"validationReportSuggestion\"&gt;Suggestions: Check contact information for metadata contact or cited responsable party in identification section for example.&lt;/span&gt;\n              &lt;/div&gt;\n            &lt;/alert.M8&gt;\n          &lt;/svrl:text&gt;\n        &lt;/svrl:failed-assert&gt;\n        &lt;svrl:active-pattern document=\"\" name=\"[ISOFTDS19139:2005-TableA1-Row07] - OtherConstraints required if otherRestrictions\" /&gt;\n        &lt;svrl:active-pattern document=\"\" name=\"[ISOFTDS19139:2005-TableA1-Row16] - Units required for values\" /&gt;\n        &lt;svrl:active-pattern document=\"\" name=\"[ISOFTDS19139:2005-TableA1-Row13] - Description required if no sourceExtent\" /&gt;\n        &lt;svrl:active-pattern document=\"\" name=\"[ISOFTDS19139:2005-TableA1-Row10] - Content mandatory for dataset or series\" /&gt;\n        &lt;svrl:active-pattern document=\"\" name=\"[ISOFTDS19139:2005-TableA1-Row11 Row12] - Lineage\" /&gt;\n        &lt;svrl:active-pattern document=\"\" name=\"[ISOFTDS19139:2005-TableA1-Row08] - Dataset must have report or lineage\" /&gt;\n        &lt;svrl:active-pattern document=\"\" name=\"[ISOFTDS19139:2005-TableA1-Row09] - LevelDescription needed unless dataset or series\" /&gt;\n        &lt;svrl:active-pattern document=\"\" name=\"[ISOFTDS19139:2005-TableA1-Row17] - Units required for density values\" /&gt;\n        &lt;svrl:active-pattern document=\"\" name=\"[ISOFTDS19139:2005-TableA1-Row18] - Distribution format required\" /&gt;\n        &lt;svrl:active-pattern document=\"\" name=\"[ISOFTDS19139:2005-TableA1-Row23] - Extent element required\" /&gt;\n        &lt;svrl:active-pattern document=\"\" name=\"[ISOFTDS19139:2005-TableA1-Row04] - Dataset must have extent\" /&gt;\n        &lt;svrl:fired-rule context=\"//gmd:MD_DataIdentification|//*[@gco:isoType='gmd:MD_DataIdentification']\" /&gt;\n        &lt;svrl:successful-report ref=\"#_20\" test=\"$extent = false()\" location=\"/*[local-name()='MD_Metadata']/*[local-name()='identificationInfo']/*[local-name()='MD_DataIdentification']\"&gt;\n          &lt;svrl:text&gt;\n            &lt;report.M21&gt;Extent defined for dataset.&lt;/report.M21&gt;\n          &lt;/svrl:text&gt;\n        &lt;/svrl:successful-report&gt;\n        &lt;svrl:active-pattern document=\"\" name=\"[ISOFTDS19139:2005-TableA1-Row05] - Dataset or series must have a topic category\" /&gt;\n        &lt;svrl:fired-rule context=\"//gmd:MD_DataIdentification|//*[@gco:isoType='gmd:MD_DataIdentification']\" /&gt;\n        &lt;svrl:successful-report ref=\"#_20\" test=\"$topic = false\" location=\"/*[local-name()='MD_Metadata']/*[local-name()='identificationInfo']/*[local-name()='MD_DataIdentification']\"&gt;\n          &lt;svrl:text&gt;\n            &lt;report.M6&gt;Topic category is:&lt;/report.M6&gt;\n            \"\"\n          &lt;/svrl:text&gt;\n        &lt;/svrl:successful-report&gt;\n        &lt;svrl:active-pattern document=\"\" name=\"[ISOFTDS19139:2005-TableA1-Row06] - Either aggregateDataSetName or aggregateDataSetIdentifier must be documented\" /&gt;\n        &lt;svrl:active-pattern document=\"\" name=\"[ISOFTDS19139:2005-TableA1-Row02] - Character set indication\" /&gt;\n        &lt;svrl:fired-rule context=\"//gmd:MD_Metadata|//*[@gco:isoType='gmd:MD_Metadata']\" /&gt;\n        &lt;svrl:active-pattern document=\"\" name=\"[ISOFTDS19139:2005-TableA1-Row19] - Detail required unless simple term\" /&gt;\n        &lt;svrl:active-pattern document=\"\" name=\"[ISOFTDS19139:2005-TableA1-Row20] - Condition\" /&gt;\n        &lt;svrl:active-pattern document=\"\" name=\"[ISOFTDS19139:2005-TableA1-Row21] - DomainCode\" /&gt;\n        &lt;svrl:active-pattern document=\"\" name=\"[ISOFTDS19139:2005-TableA1-Row22] - ShortName\" /&gt;\n        &lt;svrl:active-pattern document=\"\" name=\"[ISOFTDS19139:2005-TableA1-Row15] - Check point description required if available\" /&gt;\n        &lt;svrl:active-pattern document=\"\" name=\"[ISOFTDS19139:2005-TableA1] - HierarchyLevelName must be documented if hierarchyLevel does not contain &amp;quot;dataset&amp;quot;\" /&gt;\n        &lt;svrl:fired-rule context=\"//gmd:MD_Metadata/gmd:hierarchyLevel|//*[@gco:isoType='gmd:MD_Metadata']/gmd:hierarchyLevel\" /&gt;\n        &lt;svrl:successful-report ref=\"#_6\" test=\"$hl = false()\" location=\"/*[local-name()='MD_Metadata']/*[local-name()='hierarchyLevel']\"&gt;\n          &lt;svrl:text&gt;\n            &lt;report.M61&gt;Hierarchy level name is:&lt;/report.M61&gt;\n            \"collectionSession\"\n          &lt;/svrl:text&gt;\n        &lt;/svrl:successful-report&gt;\n      &lt;/svrl:schematron-output&gt;\n    &lt;/geonet:report&gt;\n    &lt;geonet:report geonet:rule=\"schematron-rules-geonetwork\"&gt;\n      &lt;svrl:schematron-output xmlns:svrl=\"http://purl.oclc.org/dsdl/svrl\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:schold=\"http://www.ascc.net/xml/schematron\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:iso=\"http://purl.oclc.org/dsdl/schematron\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\" xmlns:gco=\"http://www.isotc211.org/2005/gco\" xmlns:srv=\"http://www.isotc211.org/2005/srv\" xmlns:gmd=\"http://www.isotc211.org/2005/gmd\" title=\"Schematron validation / GeoNetwork recommendations\" schemaVersion=\"\"&gt;\n        &lt;svrl:ns-prefix-in-attribute-values uri=\"http://www.opengis.net/gml\" prefix=\"gml\" /&gt;\n        &lt;svrl:ns-prefix-in-attribute-values uri=\"http://www.isotc211.org/2005/gmd\" prefix=\"gmd\" /&gt;\n        &lt;svrl:ns-prefix-in-attribute-values uri=\"http://www.isotc211.org/2005/srv\" prefix=\"srv\" /&gt;\n        &lt;svrl:ns-prefix-in-attribute-values uri=\"http://www.isotc211.org/2005/gco\" prefix=\"gco\" /&gt;\n        &lt;svrl:ns-prefix-in-attribute-values uri=\"http://www.fao.org/geonetwork\" prefix=\"geonet\" /&gt;\n        &lt;svrl:ns-prefix-in-attribute-values uri=\"http://www.w3.org/1999/xlink\" prefix=\"xlink\" /&gt;\n        &lt;svrl:active-pattern document=\"\" name=\"[Language] - Metadata language is not defined and other language are declared and Main metadata language MUST NOT be defined in other language section.\" /&gt;\n        &lt;svrl:fired-rule context=\"//gmd:MD_Metadata|//*[@gco:isoType='gmd:MD_Metadata']\" /&gt;\n        &lt;svrl:successful-report ref=\"#_1\" test=\"$localeAndNoLanguage\" location=\"/*[local-name()='MD_Metadata']\"&gt;\n          &lt;svrl:text&gt;\n            &lt;report.M500&gt;Main metadata language is:&lt;/report.M500&gt;\n            \"eng\"\n          &lt;/svrl:text&gt;\n        &lt;/svrl:successful-report&gt;\n        &lt;svrl:successful-report ref=\"#_1\" test=\"$duplicateLanguage\" location=\"/*[local-name()='MD_Metadata']\"&gt;\n          &lt;svrl:text&gt;\n            &lt;report.M501&gt;No duplicate languages found.&lt;/report.M501&gt;\n          &lt;/svrl:text&gt;\n        &lt;/svrl:successful-report&gt;\n      &lt;/svrl:schematron-output&gt;\n    &lt;/geonet:report&gt;\n  &lt;/geonet:schematronerrors&gt;\n  &lt;/object&gt;\n&lt;/error&gt;\n</code></pre> <p>Note</p> <p>XML parseable description of the schematron validation problems is in the object container. You should be looking for elements such as svrl:failed-assert.</p> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_validation/#errors","title":"Errors","text":"<ul> <li>bad-parameter XXXX, when a mandatory parameter is empty. Returns 500 HTTP code</li> <li>XSD Validation Error (error id: xsd-validation-error), when validation against XSDs fails. Returns 500 HTTP code</li> <li>Schematron Validation Error (error id: schematron-validation-error), when validation against schematrons fails. Returns 500 HTTP code</li> <li>No Schema Matches (error id: no-schema-matches), when a matching GeoNetwork metadata schema cannot be found for the supplied metadata record. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/metadata_xml_versioning/","title":"Metadata Versioning services","text":""},{"location":"developer/xml_services/metadata_xml_versioning/#start-versioning-a-metadata-record-xmlmetadataversion","title":"Start versioning a metadata record (xml.metadata.version)","text":"<p>The xml.metadata.version service creates an initial version of the metadata record and its properties (categories, status, privileges) in the subversion repository.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/metadata_xml_versioning/#request","title":"Request","text":"<p>Parameters:</p> <ul> <li>id or uuid: Identifier of metadata to version</li> </ul> <p>Request example:</p> <p>POST:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.version\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;id&gt;6&lt;/id&gt;\n&lt;/request&gt;\n</code></pre> <p>GET:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.version?id=6\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_versioning/#response","title":"Response","text":"<p>Successful response (HTTP status code 200) contains the identifier of the metadata for which versioning has been enabled.</p> <p>Example:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;id&gt;6&lt;/id&gt;\n&lt;/request&gt;\n</code></pre> <p>If the service was not completed successfully, then HTTP status code 500 is returned with an XML document containing details of the exception/problem. An example of such a document is as follows::</p> <pre><code>&lt;error id=\"metadata-not-found\"&gt;\n  &lt;message&gt;Metadata not found&lt;/message&gt;\n  &lt;class&gt;MetadataNotFoundEx&lt;/class&gt;\n  .....\n  &lt;object&gt;Metadata not found --&gt; 6&lt;/object&gt;\n  &lt;request&gt;\n    &lt;language&gt;eng&lt;/language&gt;\n    &lt;service&gt;xml.metadata.version&lt;/service&gt;\n  &lt;/request&gt;\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_versioning/#errors","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> <li>Metadata not found (error id: metadata-not-found) if a metadata record with the identifier provided does not exist. Returns 500 HTTP code</li> <li>Operation Not Allowed, if the user does not have editing rights over the metadata record. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/metadata_xml_versioning/#metadata.batch.version","title":"Batch start versioning (xml.metadata.batch.version)","text":"<p>For each metadata record in the selected set, xml.metadata.batch.version creates an initial version of the metadata record and its properties (categories, status, privileges) in the subversion repository.</p> <p>Note</p> <p>This service requires a previous call to the <code>xml.metadata.select</code> service (see <code>metadata.select</code>) to select metadata records.</p> <p>Note</p> <p>Only those metadata records that the user running the service has editing rights over will be versioned. If a metadata record is already versioned then no action is taken.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/metadata_xml_versioning/#request_1","title":"Request","text":"<p>Parameters:</p> <p>None</p> <p>Example request:</p> <p>POST:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.batch.version\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request/&gt;\n</code></pre> <p>GET:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.batch.version\n</code></pre>"},{"location":"developer/xml_services/metadata_xml_versioning/#response_1","title":"Response","text":"<p>If the request executed successfully then HTTP 200 status code is returned and an XML document with a summary of how the metadata records in the selected set have been processed. An example of such a response is shown below:</p> <pre><code>&lt;response&gt;\n  &lt;done&gt;5&lt;/done&gt;\n  &lt;notOwner&gt;0&lt;/notOwner&gt;\n  &lt;notFound&gt;0&lt;/notFound&gt;\n&lt;/response&gt;\n</code></pre> <p>The response fields are:</p> <ul> <li>done - number of metadata records successfully updated</li> <li>notOwner - number of metadata records skipped because the user running this service did not have ownership rights</li> <li>notFound - number of metadata records skipped because they were not found (may have been deleted)</li> </ul> <p>If the request fails an HTTP 500 status code error is returned and the response is an XML document with the exception. An example of such a response is shown below:</p> <pre><code>&lt;error id=\"service-not-allowed\"&gt;\n  &lt;message&gt;Service not allowed&lt;/message&gt;\n  .....\n  &lt;object&gt;xml.metadata.batch.update.version&lt;/object&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/metadata_xml_versioning/#errors_1","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/schema_services/","title":"Schema Services","text":"<p>Metadata schemas can be plugged into GeoNetwork - see Schema Plugins. Any application that needs to:</p> <ul> <li>find information (eg. names, versions, namespaces, converters) about metadata schemas that are plugged into GeoNetwork should use the <code>xml.info</code> service</li> <li>find information about the schema elements and codelists should use the <code>xml.schema.info</code> service described in this section of the manual</li> <li>add, delete, update schema plugins in GeoNetwork should use the <code>xml.metadata.schema.add</code>, <code>xml.metadata.schema.delete</code> and <code>xml.metadata.schema.update</code> services described in this section of the manual</li> </ul>"},{"location":"developer/xml_services/schema_services/#metadata-schema-information-xmlinfotypeschemas","title":"Metadata Schema Information (xml.info?type=schemas)","text":"<p>See <code>xml.info</code> for more details.</p>"},{"location":"developer/xml_services/schema_services/#schema-element-and-codelist-information-xmlschemainfo","title":"Schema Element and Codelist Information (xml.schema.info)","text":"<p>This service returns information about a set of schema elements or codelists. The returned information consists of a localised label, a description, conditions that the element must satisfy etc.</p>"},{"location":"developer/xml_services/schema_services/#request","title":"Request","text":"<p>Requests to this service can only be made using the HTTP POST binding with application/XML content type. Requests can ask for information on multiple elements and codelists from different schemas. Description of the request fields is as follows:</p> <ul> <li>element: Must contain a schema and a name attribute. The schema attribute must be the name of a schema currently registered in GeoNetwork (see <code>xml.info</code> for more details). The name attribute must be the qualified name of the metadata schema element on which information is required. Other optional attributes can be specified to help determine the appropriate context for the metadata element. These optional attributes are:<ul> <li>context: The qualified name of the metadata schema element that is the parent of the element specified in the name attribute.</li> <li>fullContext: The qualified xpath of the element specified in the name attribute.</li> <li>isoType: For profiles of ISO19115/19139 only. The qualified name of the element in the base ISO19115/19139 schema that the element specified in the name attribute is a substitute for. eg. in the Marine Community Profile of ISO19115/19139, <code>mcp:MD_Metadata</code> is a substitute for <code>gmd:MD_Metadata</code> in the base ISO19115/19139 metadata schema.</li> </ul> </li> <li>codelist: Accepts a schema and name attribute as for element but information on any codelist associated with the qualified name of the metadata schema element in the name attribute will be returned instead.</li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> </p> <p>Note</p> <p>The text returned is localised into the language specified in the the service call. eg. A call to /geonetwork/srv/eng/xml.schema.info will return text in the English (eng) language.</p>"},{"location":"developer/xml_services/schema_services/#response","title":"Response","text":"<p>If the request executed successfully then HTTP status code 200 will be returned along with an XML document containing the response. The root field of the response will be populated with information about the element/codelist specified in the request. The fields of the response are:</p> <ul> <li>element: A container for information about a schema element. It has a name attribute which contains the qualified name of the element.<ul> <li>label: The human readable name of the element, localised into the language specified in the request.</li> <li>description: A generic description of the element.</li> <li>condition [0..1]: This field is optional and indicates if the element must satisfy a condition eg. mandatory. The condition text is displayed with the element name so it intended to be human readable.</li> </ul> </li> <li>codelist: A container for information about a codelist. It has a name attribute which contains the qualified name of the codelist.<ul> <li>entry [1..n]: A container for a codelist entry. There can be more than one entry.<ul> <li>code: The entry code. This is the value that will be used in the metadata.</li> <li>label: This is a human readable name for the code, used to show the code in the user interface. It is localised.</li> <li>description: A localised description/meaning of the code. The description is shown in the user interface with the label.</li> </ul> </li> </ul> </li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> Constraint language language used in Application Schema mandatory <code>creation</code> Creation date when the resource was brought into existence <code>publication</code> Publication date when the resource was issued <code>revision</code> Revision date identifies when the resource was examined                 or re-examined and improved or amended </p>"},{"location":"developer/xml_services/schema_services/#error-management","title":"Error management","text":"<p>If an exception occurs during the processing of the request, then an HTTP 500 status code is returned along with an XML document describing the exception. See Exception handling for more details.</p> <p>Apart from exceptions, the service can encounter errors trying to retrieve an element/codelist information eg. if the requested element is not present. If such an error is encountered, then the object is copied from the response and an error attribute is added describing the error. An example of such a response is:</p> <pre><code>&lt;response&gt;\n    &lt;element schema=\"iso19139\" name=\"blablabla\" error=\"not-found\"/&gt;\n&lt;/response&gt;\n</code></pre> <p>Possible errors returned by xml.schema.info service:</p> Error code Description unknown-schema The specified schema is not supported unknown-namespace The namespace of the specified prefix was not found not-found The requested element / codelist was not found"},{"location":"developer/xml_services/schema_services/#add-a-metadata-schema-xmlmetadataschemaadd","title":"Add a metadata schema (xml.metadata.schema.add)","text":"<p>The xml.metadata.schema.add service can be used to add a metadata schema to GeoNetwork. The details of what the schema should contain are covered in the Schema Plugins section of this manual.</p> <p>Only Administrator users can run this service.</p> <p>Requires authentification: Yes</p>"},{"location":"developer/xml_services/schema_services/#request_1","title":"Request","text":"<p>Parameters:</p> <ul> <li>schema: (mandatory) Name of the schema to add.</li> </ul> <p>One of the following parameters:</p> <ul> <li>fname: Server file name (full path) to metadata schema zip archive.</li> <li>url: Http URL of metadata schema zip archive.</li> <li>uuid: Uuid of metadata record in current catalog that has a metadata schema zip archive uploaded and stored with it.</li> </ul> <p>Schema add request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.schema.add\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;request&gt;\n  &lt;schema&gt;iso19139.mcp&lt;/schema&gt;\n  &lt;fname&gt;/usr/local/src/git/schemaPlugins-2.8.x/dist/iso19139.mcp.zip&lt;/fname&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/schema_services/#response_1","title":"Response","text":"<p>If the request executed succesfully then an HTTP 200 status code is returned and an XML document confirming success is returned. An example response is::</p> <pre><code>&lt;response status=\"ok\" message=\"Schema iso19139.mcp has been added/updated\"/&gt;\n</code></pre> <p>If the request fails then an HTTP 500 status code error is returned and the response contains an XML document with the details of the exception/what went wrong. An example error response is::</p> <pre><code>&lt;error id=\"operation-aborted\"&gt;\n  &lt;message&gt;Schema already exists&lt;/message&gt;\n  &lt;class&gt;OperationAbortedEx&lt;/class&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/schema_services/#update-a-metadata-schema-xmlmetadataschemaupdate","title":"Update a metadata schema (xml.metadata.schema.update)","text":"<p>The xml.metadata.schema.update service can be used to update a metadata schema in GeoNetwork. The details of what the schema should contain are covered in the Schema Plugins section of this manual.</p> <p>Only Administrator users can run this service.</p> <p>Requires authentification: Yes</p>"},{"location":"developer/xml_services/schema_services/#request_2","title":"Request","text":"<p>Parameters:</p> <ul> <li>schema: (mandatory) Name of the schema to update. Must be the name of a currently registered metadata schema in GeoNetwork.</li> </ul> <p>One of the following parameters:</p> <ul> <li>fname: Server file name (full path) to metadata schema zip archive.</li> <li>url: Http URL of metadata schema zip archive.</li> <li>uuid: Uuid of metadata record in current catalog that has a metadata schema zip archive uploaded and stored with it.</li> </ul> <p>Schema update request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.schema.update\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;request&gt;\n  &lt;schema&gt;iso19139.mcp&lt;/schema&gt;\n  &lt;fname&gt;/usr/local/src/git/schemaPlugins-2.8.x/dist/iso19139.mcp.zip&lt;/fname&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/schema_services/#response_2","title":"Response","text":"<p>If the request executed succesfully then an HTTP 200 status code is returned and an XML document confirming success is returned. An example response is::</p> <pre><code>&lt;response status=\"ok\" message=\"Schema iso19139.mcp has been added/updated\"/&gt;\n</code></pre> <p>If the request fails then an HTTP 500 status code error is returned and the response contains an XML document with the details of the exception/what went wrong. An example error response is::</p> <pre><code>&lt;error id=\"operation-aborted\"&gt;\n  &lt;message&gt;Schema doesn't exist&lt;/message&gt;\n  &lt;class&gt;OperationAbortedEx&lt;/class&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/schema_services/#delete-a-metadata-schema-xmlmetadataschemadelete","title":"Delete a metadata schema (xml.metadata.schema.delete)","text":"<p>The xml.metadata.schema.delete service can be used to delete a metadata schema in GeoNetwork. A metadata schema can only be deleted if:</p> <ul> <li>there are no metadata records in the catalog that use it</li> <li>no other metadata schema is dependent on it</li> </ul> <p>Only Administrator users can run this service.</p> <p>Requires authentification: Yes</p>"},{"location":"developer/xml_services/schema_services/#request_3","title":"Request","text":"<p>Parameters:</p> <ul> <li>schema: (mandatory) Name of the schema to delete. Must be the name of a currently registered metadata schema in GeoNetwork.</li> </ul> <p>Schema delete request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.metadata.schema.delete\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;request&gt;\n  &lt;schema&gt;iso19139.mcp&lt;/schema&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/schema_services/#response_3","title":"Response","text":"<p>If the request executed without an exception then an HTTP 200 status code is returned and an XML document giving status is returned. An example response is::</p> <pre><code>&lt;response status=\"ok\" message=\"Schema iso19139.mcp has been deleted\"/&gt;\n</code></pre> <p>Other responses may describe errors, in which case the status is set to \"error\". An example error response is::</p> <pre><code>&lt;response status=\"error\" message=\"Cannot remove schema iso19139 because there are records that belong to this schema in the catalog\"/&gt;\n</code></pre> <p>If the request fails due to an exception in the service then an HTTP 500 status code error is returned and the response contains an XML document with the details of the exception/what went wrong. An example error response is::</p> <pre><code>&lt;error id=\"operation-aborted\"&gt;\n  &lt;message&gt;Schema doesn't exist&lt;/message&gt;\n  &lt;class&gt;OperationAbortedEx&lt;/class&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/services_calling/","title":"Calling specifications","text":""},{"location":"developer/xml_services/services_calling/#calling-xml-services","title":"Calling XML services","text":"<p>GeoNetwork provides access to its functions through the use of XML services. These services are much like HTML addresses but return XML instead of HTML. The advantage of using XML, is that XML services can be used in machine-to-machine interfaces. As an example, consider the <code>xml.info</code> service - <code>xml.info</code>: you might have an application which can use this service to get information about GeoNetwork users and metadata schemas in XML. The user information returned by this service could then be used by your application to decide how to authenticate with GeoNetwork so that metadata records from a particular metadata schema could be retrieved from other GeoNetwork XML services and processed by your application.</p> <p>As a general rule, XML services provided by GeoNetwork usually have a <code>xml.</code> prefix in their address. To keep things simple and uniform, GeoNetwork XML services accept XML documents (or convert parameters to XML documents) and return information, status and errors as XML documents (except for a few services that relate to file download and must return binary data).</p>"},{"location":"developer/xml_services/services_calling/#request","title":"Request","text":"<p>Each service accepts a set of parameters, which must be embedded in the request. A service can be called using different HTTP methods, depending on the structure of its request:</p> <ul> <li>GET The parameters are sent as part of the URL address. On the server side, these parameters are grouped into a flat XML document with one root and several simple children. A service can be called this way only if the parameters it accepts are not structured. An example of such a request and the parameters encoded in XML is:</li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre>     Url Request:     http://localhost:8080/geonetwork/srv/eng/main.search?hitsPerPage=10&amp;any=</p> <pre><code>Encoding:\n&lt;request&gt;\n    &lt;hitsPerPage&gt;10&lt;/hitsPerPage&gt;\n    &lt;any /&gt;\n&lt;/request&gt;\n</code></pre> <ul> <li>POST There are 3 variants of this method:<ol> <li>ENCODED The request has one of the following content types: application/x-www-form-urlencoded or multipart/form-data. The first case is very common when sending web forms while the second one is used to send binary data (usually files) to the server. In these cases, the parameters are not structured so the rules of the GET method applies. Even if the second case could be used to send XML documents, this possibility is not considered on the server side.</li> <li>XML The content type is application/xml. This is the common case when the client is not a browser but a specialised client. The request is a pure XML document in string form, encoded using the encoding specified into the prologue of the XML document. Using this form, any type of request can be made (structured or not) so any service can be called.</li> <li>SOAP The content type is application/soap+xml. SOAP is a simple protocol used to access objects and services using XML. Clients that use this protocol can embed XML requests into a SOAP structure. On the server side, GeoNetwork will remove the SOAP structure and feed the content to the service. Its response will be embedded again into a SOAP structure and sent back to the caller. It makes sense to use this protocol if it is the only protocol understood by the client.</li> </ol> </li> </ul>"},{"location":"developer/xml_services/services_calling/#response","title":"Response","text":"<p>The response of an XML service always has a content type of application/xml (the only exception are those services which return binary data). The document encoding is the one specified in the document prologue which is UTF-8 (all GeoNetwork services return documents in the UTF-8 encoding).</p> <p>On a GET request, the client can force a SOAP response by adding the application/soap+xml content type to the Accept header parameter.</p>"},{"location":"developer/xml_services/services_calling/#exception_handling","title":"Exception handling","text":"<p>A response document having an error root element means that the XML service raised an exception. This can happen under several conditions: bad parameters, internal errors et cetera. In this cases the returned XML document has the following structure:</p> <ul> <li>error: This is the root element of the document. It has a mandatory id attribute that represents the identifier of the error. See below for a list of identifier values.<ul> <li>message: A message related to the error. It can be a short description about the error type or it can contain some other information that details the id code.</li> <li>class: The Java class name of the Exception that occurred.</li> <li>stack: Execution path from method where Exception occurred to earliest method called by GeoNetwork. Each level in the execution path has an <code>at</code> child.<ul> <li>at: Information about the code being called when the exception occurred. It has the following mandatory attributes:<ul> <li>class Java class name of the method that was called.</li> <li>file Source file where the class is defined.</li> <li>method Method name in class.</li> <li>line Source code line number in file.</li> </ul> </li> </ul> </li> <li>object: An optional container for parameters or other values that caused the exception. In case a parameter is an XML object, this container will contain that object in XML form.</li> <li>request: A container for request information.<ul> <li>language: Language used when the service was called.</li> <li>service: Name of the service that was called.</li> </ul> </li> </ul> </li> </ul> <p>Summary of error ids:</p> id Meaning of message element Meaning of object element error General message, human readable x bad-format Reason x bad-parameter Name of the parameter Parameter value file-not-found x File name file-upload-too-big x x missing-parameter Name of the parameter XML container where the parameter should have been present. object-not-found x Object name operation-aborted Reason of abort If present, the object that caused the abort operation-not-allowed x x resource-not-found x Resource name service-not-allowed x Service name service-not-found x Service name user-login User login failed message User name user-not-found x User id or name metadata-not-found The requested metadata was not found Metadata id <p>Below is an example of exception generated by the mef.export service. The service complains about a missing parameter, as you can see from the content of the id attribute. The object element contains the xml request with an unknown test parameter while the mandatory UUID parameter (as specified by the message element) is missing.</p> <p>An example of generated exception:</p> <pre><code>&lt;error&gt;\n    &lt;message&gt;UUID&lt;/message&gt;\n    &lt;class&gt;MissingParameterEx&lt;/class&gt;\n    &lt;stack&gt;\n        &lt;at class=\"jeeves.utils.Util\" file=\"Util.java\" line=\"66\"\n            method=\"getParam\"/&gt;\n        &lt;at class=\"org.fao.geonet.services.mef.Export\" file=\"Export.java\"\n            line=\"60\" method=\"exec\"/&gt;\n        &lt;at class=\"jeeves.server.dispatchers.ServiceInfo\" file=\"ServiceInfo.java\"\n            line=\"226\" method=\"execService\"/&gt;\n        &lt;at class=\"jeeves.server.dispatchers.ServiceInfo\" file=\"ServiceInfo.java\"\n            line=\"129\" method=\"execServices\"/&gt;\n        &lt;at class=\"jeeves.server.dispatchers.ServiceManager\" file=\"ServiceManager.java\"\n            line=\"370\" method=\"dispatch\"/&gt;\n    &lt;/stack&gt;\n    &lt;object&gt;\n        &lt;request&gt;\n            &lt;asd&gt;ee&lt;/asd&gt;\n        &lt;/request&gt;\n    &lt;/object&gt;\n    &lt;request&gt;\n        &lt;language&gt;en&lt;/language&gt;\n        &lt;service&gt;mef.export&lt;/service&gt;\n    &lt;/request&gt;\n&lt;/error&gt;\n</code></pre>"},{"location":"developer/xml_services/services_download/","title":"File download services","text":"<p>This section provides a detailed explanation of GeoNetwork file download services. These are the services you would use if you want to download a file attached to a metadata record as 'Data for Download' (usually in onlineResources section of an ISO record) or perhaps as a gmx:FileName (where allowed).</p> <p>The two services, used together, can be used to create a simple click through licensing scheme for file resources attached to metadata records in GeoNetwork.</p>"},{"location":"developer/xml_services/services_download/#xmlfiledisclaimer","title":"xml.file.disclaimer","text":"<p>Retrieves information from the metadata about constraints or restrictions on the resources attached to the metadata record. The information is xml and an xhtml presentation of the constraints and restrictions.</p> <p>Note: only users that have download rights over the record will be able to use this service. To obtain these rights your application will need to use <code>xml.user.login</code> - see <code>xml.user.login</code>.</p>"},{"location":"developer/xml_services/services_download/#request","title":"Request","text":"<p>Called with a metadata id or uuid, one or more file names (if more than one file is attached to the metadata record as 'data for download') and access (which is almost always private). Example:</p> <pre><code>&lt;request&gt;\n    &lt;uuid&gt;d8c8ca11-ecc8-45dc-b424-171a9e212220&lt;/uuid&gt;\n    &lt;fname&gt;roam-rsf-aus-bathy-topo-contours.sff&lt;/fname&gt;\n    &lt;fname&gt;mse09_M8.nc&lt;/fname&gt;\n    &lt;access&gt;private&lt;/access&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/services_download/#response","title":"Response","text":"<p>The service returns a copy of the request parameters, a copy of the metadata record xml and an HTML version of the license annex generated from the metadata record by the XSL <code>metadata-license-annex.xsl</code> (in the <code>INSTALL_DIR/web/geonetwork/xsl</code> directory).</p> <p>Example of an <code>xml.file.disclaimer</code> response for a GeoNetwork node (Note: the  and  elements are not shown in full as they are too big): <pre><code>&lt;response&gt;\n    &lt;id&gt;22&lt;/id&gt;\n    &lt;uuid&gt;d8c8ca11-ecc8-45dc-b424-171a9e212220&lt;/uuid&gt;\n    &lt;fname&gt;roam-rsf-aus-bathy-topo-contours.sff&lt;/fname&gt;\n    &lt;fname&gt;mse09_M8.nc&lt;/fname&gt;\n    &lt;access&gt;private&lt;/access&gt;\n    &lt;metadata&gt;\n        &lt;gmd:MD_Metadata xmlns:gmd=\"http://www.isotc211.org/2005/gmd\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:gco=\"http://www.isotc211.org/2005/gco\" xmlns:gts=\"http://www.isotc211.org/2005/gts\" xmlns:gsr=\"http://www.isotc211.org/2005/gsr\" xmlns:gss=\"http://www.isotc211.org/2005/gss\" xmlns:gmx=\"http://www.isotc211.org/2005/gmx\" xmlns:srv=\"http://www.isotc211.org/2005/srv\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:geonet=\"http://www.fao.org/geonetwork\"&gt;\n            &lt;!--.........--&gt;\n        &lt;/gmd:MD_Metadata&gt;\n    &lt;/metadata&gt;\n    &lt;license&gt;\n        &lt;html&gt;\n            &lt;head&gt;\n                &lt;link href=\"http://localhost:8080/geonetwork/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\" /&gt;\n                &lt;link href=\"http://localhost:8080/geonetwork/favicon.ico\" rel=\"icon\" type=\"image/x-icon\" /&gt;\n                &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"http://localhost:8080/geonetwork/geonetwork.css\" /&gt;\n                &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"http://localhost:8080/geonetwork/modalbox.css\" /&gt;\n            &lt;/head&gt;\n            &lt;body&gt;\n                &lt;!--.........--&gt;\n            &lt;/body&gt;\n        &lt;/html&gt;\n    &lt;/license&gt;\n&lt;/response&gt;\n</code></pre> <p>The idea behind this service is that you will receive an HTML presentation of the constraints/restrictions on the resource that you can show to a user for an accept/decline response.</p> <p>The HTML presentation is controlled by the server so together with the <code>xml.file.download</code> service, this is the way that GeoNetwork can be used to provide a simple click-through licensing system for file resources attached to metadata records.</p> <p>To signify acceptance of the license and download the resources you should use the <code>xml.file.download</code> service.</p> <p>If an exception occurred then the service returns HTTP status code 500 and an XML document describing what went wrong. An example of such a response is:</p> <pre><code>&lt;error id=\"metadata-not-found\"&gt;\n  &lt;message&gt;Metadata not found&lt;/message&gt;\n  &lt;class&gt;MetadataNotFoundEx&lt;/class&gt;\n  .......\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/services_download/#errors","title":"Errors","text":"<ul> <li>IllegalArgumentException: Request must contain a UUID or an ID parameter.</li> <li>MetadataNotFoundException: Metadata not found.</li> <li>OperationNowAllowedException: you don't have download permission over this record.</li> </ul>"},{"location":"developer/xml_services/services_download/#xmlfiledownload","title":"xml.file.download","text":"<p>After your application has received any license conditions that go with the file resources attached to the metadata record from <code>xml.file.disclaimer</code>, you can use this service to download the resources.</p> <p>Note</p> <p>only users that have download rights over the record will be able to use this service. To obtain these rights your application will need to use <code>xml.user.login</code> - see <code>xml.user.login</code>.</p> <p>Note</p> <p>this service is protected against users and/or applications that do not go through the <code>xml.file.disclaimer</code> service first.</p>"},{"location":"developer/xml_services/services_download/#request_1","title":"Request","text":"<p>Called with a metadata id or uuid, one or more file names (if more than one file is attached to the metadata record as 'data for download'), access (which is almost always private) and details of the user who has accepted the license and wants to download the files. Example:</p> <pre><code>&lt;request&gt;\n    &lt;uuid&gt;d8c8ca11-ecc8-45dc-b424-171a9e212220&lt;/uuid&gt;\n    &lt;fname&gt;roam-rsf-aus-bathy-topo-contours.sff&lt;/fname&gt;\n    &lt;fname&gt;mse09_M8.nc&lt;/fname&gt;\n    &lt;access&gt;private&lt;/access&gt;\n    &lt;name&gt;Aloyisus Wankania&lt;/name&gt;\n    &lt;org&gt;Allens Butter Factory&lt;/org&gt;\n    &lt;email&gt;A.Wankania@allens.org&lt;/email&gt;\n    &lt;comments&gt;Gimme the data buddy&lt;/comments&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/services_download/#response_1","title":"Response","text":"<p>The service returns HTTP status code 200 along with a zip archive containing:</p> <ul> <li>the file resources requested in the fname parameter(s)</li> <li>a copy of the metadata record (as a mef) - called <code>metadata.zip</code></li> <li>a copy of the html license generated (as provided by the <code>xml.file.disclaimer</code> service) - called <code>license-annex.html</code></li> </ul> <p>If an exception occurs or the <code>xml.file.disclaimer</code> service has not been executed by the same user, then a zero-length file will be returned. Unlike other GeoNetwork services, no other indication of an exception is given.</p>"},{"location":"developer/xml_services/services_harvesting/","title":"Harvesting services","text":"<p>This section describes the services used to create, update and manage GeoNetwork harvesters. These services allow complete control over harvester behaviour. Authentication is required for all services described in this section. In addition, these services can only be run by users with the Administrator profile.</p>"},{"location":"developer/xml_services/services_harvesting/#get-harvester-definitions-xmlharvestingget","title":"Get harvester definitions (xml.harvesting.get)","text":"<p>Retrieves information about one or all configured harvesters.</p>"},{"location":"developer/xml_services/services_harvesting/#request","title":"Request","text":"<p>Called without parameters, this service returns all harvesters. Example:</p> <pre><code>&lt;request/&gt;\n</code></pre> <p>Otherwise, an id parameter can be specified to request the definition of a specific harvester instance:</p> <pre><code>&lt;request&gt;\n    &lt;id&gt;123&lt;/id&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/services_harvesting/#response","title":"Response","text":"<p>When called without parameters the service returns HTTP status code 200 along with an XML document with all harvester instances. The XML document has a root element called <code>nodes</code> with a <code>node</code> child for each harvester.</p> <p>Example of an xml.harvesting.get response for a GeoNetwork harvester:</p> <pre><code>&lt;nodes&gt;\n    &lt;node id=\"125\" type=\"geonetwork\"&gt;\n        &lt;site&gt;\n            &lt;name&gt;test 1&lt;/name&gt;\n            &lt;uuid&gt;0619cc50-708b-11da-8202-000d9335aaae&lt;/uuid&gt;\n            &lt;account&gt;\n                &lt;use&gt;false&lt;/use&gt;\n                &lt;username /&gt;\n                &lt;password /&gt;\n            &lt;/account&gt;\n            &lt;host&gt;http://www.fao.org/geonetwork&lt;/host&gt;\n            &lt;createRemoteCategory&gt;true&lt;/createRemoteCategory&gt;\n            &lt;mefFormatFull&gt;true&lt;/mefFormatFull&gt;\n            &lt;xslfilter/&gt;\n        &lt;/site&gt;\n        &lt;content&gt;\n            &lt;validate&gt;true&lt;/validate&gt;\n            &lt;importxslt&gt;none&lt;/importxslt&gt;\n        &lt;/content&gt;\n        &lt;options&gt;\n            &lt;every&gt;0 0 0/3 ? * *&lt;/every&gt;\n            &lt;oneRunOnly&gt;false&lt;/oneRunOnly&gt;\n            &lt;status&gt;inactive&lt;/status&gt;\n        &lt;/options&gt;\n        &lt;searches&gt;\n            &lt;search&gt;\n                &lt;freeText /&gt;\n                &lt;title /&gt;\n                &lt;abstract /&gt;\n                &lt;keywords /&gt;\n                &lt;digital&gt;false&lt;/digital&gt;\n                &lt;hardcopy&gt;false&lt;/hardcopy&gt;\n                &lt;source&gt;\n                    &lt;UUID&gt;0619cc50-708b-11da-8202-000d9335906e&lt;/uuid&gt;\n                    &lt;name&gt;Food and Agriculture organisation&lt;/name&gt;\n                &lt;/source&gt;\n            &lt;/search&gt;\n        &lt;/searches&gt;\n        &lt;groupsCopyPolicy&gt;\n            &lt;group name=\"all\" policy=\"copy\"/&gt;\n            &lt;group name=\"mygroup\" policy=\"createAndCopy\"/&gt;\n        &lt;/groupsCopyPolicy&gt;\n        &lt;categories&gt;\n            &lt;category id=\"4\"/&gt;\n        &lt;/categories&gt;\n        &lt;info&gt;\n            &lt;lastRun /&gt;\n            &lt;running&gt;false&lt;/running&gt;\n        &lt;/info&gt;\n    &lt;/node&gt;\n&lt;/nodes&gt;\n</code></pre> <p>If you specify a harvester id parameter in the request, then the XML document returned has a <code>node</code> root element that describes the harvester.</p> <p>Example of an xml.harvesting.get response for a WebDAV harvester:</p> <pre><code>&lt;node id=\"165\" type=\"webdav\"&gt;\n    &lt;site&gt;\n        &lt;name&gt;test 1&lt;/name&gt;\n        &lt;UUID&gt;0619cc50-708b-11da-8202-000d9335aaae&lt;/uuid&gt;\n        &lt;url&gt;http://www.mynode.org/metadata&lt;/url&gt;\n        &lt;icon&gt;default.gif&lt;/icon&gt;\n        &lt;account&gt;\n            &lt;use&gt;true&lt;/use&gt;\n            &lt;username&gt;admin&lt;/username&gt;\n            &lt;password&gt;admin&lt;/password&gt;\n        &lt;/account&gt;\n    &lt;/site&gt;\n    &lt;options&gt;\n        &lt;every&gt;0 0 0/3 ? * *&lt;/every&gt;\n        &lt;oneRunOnly&gt;false&lt;/oneRunOnly&gt;\n        &lt;recurse&gt;false&lt;/recurse&gt;\n        &lt;validate&gt;true&lt;/validate&gt;\n        &lt;status&gt;inactive&lt;/status&gt;\n    &lt;/options&gt;\n    &lt;privileges&gt;\n        &lt;group id=\"0\"&gt;\n            &lt;operation name=\"view\" /&gt;\n        &lt;/group&gt;\n        &lt;group id=\"14\"&gt;\n            &lt;operation name=\"download\" /&gt;\n        &lt;/group&gt;\n    &lt;/privileges&gt;\n    &lt;categories&gt;\n        &lt;category id=\"2\"/&gt;\n    &lt;/categories&gt;\n    &lt;info&gt;\n        &lt;lastRun /&gt;\n        &lt;running&gt;false&lt;/running&gt;\n    &lt;/info&gt;\n&lt;/node&gt;\n</code></pre> <p>Each harvester has some common XML elements, plus additional elements that are specific to each harvesting type.</p> <p>The common XML elements are described at Harvesting nodes.</p> <p>If an error occurred then HTTP status code 500 is returned along with an XML document which contains details of what went wrong. An example of such an error response is:</p> <pre><code>&lt;error id=\"object-not-found\"&gt;\n  &lt;message&gt;Object not found&lt;/message&gt;\n  &lt;class&gt;ObjectNotFoundEx&lt;/class&gt; \n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/services_harvesting/#errors","title":"Errors","text":"<ul> <li>ObjectNotFoundEx If a harvester definition with the specified id cannot be found.</li> </ul>"},{"location":"developer/xml_services/services_harvesting/#xml.harvesting.add","title":"Create harvester instance (xml.harvesting.add)","text":"<p>Create a new harvester. The harvester can be of any type supported by GeoNetwork (see Harvesting nodes for a list). When a new harvester instance is created, its status is set to inactive. A call to the <code>xml.harvesting.start</code> service is required to set the status to active and run the harvester at the scheduled time.</p>"},{"location":"developer/xml_services/services_harvesting/#request_1","title":"Request","text":"<p>The service requires an XML tree with all information about the harvesting node to be added. The common XML elements that must be in the tree are described at Harvesting nodes. Settings and example requests for each type of harvester in GeoNetwork are as follows:</p> <ul> <li>Harvesting node geonetwork</li> <li>Harvesting node webdav</li> <li>Harvesting node csw</li> <li>Harvesting node z3950</li> <li>Harvesting node oaipmh</li> <li>Harvesting node thredds</li> <li>Harvesting node wfsfeatures</li> <li>Harvesting node filesystem</li> <li>Harvesting node arcsde</li> <li>Harvesting node ogcwxs</li> <li>Harvesting node geoPREST</li> </ul>"},{"location":"developer/xml_services/services_harvesting/#summary-of-features-of-the-supported-harvesting-types","title":"Summary of features of the supported harvesting types","text":"Harvesting type Authentication Privileges Categories GeoNetwork native through policies yes WebDAV HTTP digest yes yes CSW HTTP Basic yes yes"},{"location":"developer/xml_services/services_harvesting/#response_1","title":"Response","text":"<p>If the request succeeds and the harvester instance is created, then HTTP status code 200 is returned along with an XML document containing the definition of the harvester as is described in the response section of the <code>xml.harvesting.get</code> service above.</p> <p>If an error occurred then HTTP status code 500 is returned along with an XML document which contains details of what went wrong. An example of such an error response is:</p> <pre><code>&lt;error id=\"object-not-found\"&gt;\n  &lt;message&gt;Object not found&lt;/message&gt;\n  &lt;class&gt;ObjectNotFoundEx&lt;/class&gt; \n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/services_harvesting/#xml_harvesting_info","title":"Get information for Harvester definition (xml.harvesting.info)","text":"<p>This service can be used to obtain information from the server that is relevant to defining a harvester eg. harvester icons, stylesheets etc.</p>"},{"location":"developer/xml_services/services_harvesting/#request-and-response","title":"Request and Response","text":"<p>All requests must have a type parameter which defines the type of information required. The requests and responses for each value of the type parameter are:</p>"},{"location":"developer/xml_services/services_harvesting/#icons","title":"icons","text":"<p>Return the list of icons that can be used when creating a harvester instance. Icons are usually set in site/icon harvester setting.</p> <p>POST Request Example:</p> <pre><code>&lt;request&gt;\n  &lt;type&gt;icons&lt;type&gt;\n&lt;/request&gt;\n\nURL:\nhttp://localhost:8080/geonetwork/srv/eng/xml.harvesting.info\n</code></pre> <p>Response Example:</p> <pre><code>&lt;root&gt;\n  &lt;icons&gt;\n    &lt;icon&gt;wfp.gif&lt;/icon&gt;\n    &lt;icon&gt;unep.gif&lt;/icon&gt;\n    &lt;icon&gt;webdav.gif&lt;/icon&gt;\n    &lt;icon&gt;gn20.gif&lt;/icon&gt;\n    &lt;icon&gt;thredds.gif&lt;/icon&gt;\n    &lt;icon&gt;wfs.gif&lt;/icon&gt;\n    &lt;icon&gt;csw.gif&lt;/icon&gt;\n    &lt;icon&gt;filesystem.gif&lt;/icon&gt;\n    &lt;icon&gt;fao.gif&lt;/icon&gt;\n    &lt;icon&gt;default.gif&lt;/icon&gt;\n    &lt;icon&gt;Z3950.gif&lt;/icon&gt;\n    &lt;icon&gt;oai-mhp.gif&lt;/icon&gt;\n    &lt;icon&gt;esri.gif&lt;/icon&gt;\n  &lt;/icons&gt;\n&lt;/root&gt;\n</code></pre>"},{"location":"developer/xml_services/services_harvesting/#importstylesheets","title":"importStylesheets","text":"<p>Return the list of stylesheets that can be used when creating a harvester instance. The <code>id</code> element in the response can be used in the content/importxslt harvester setting for those harvesters that support it.</p> <p>POST Request Example:</p> <pre><code>&lt;request&gt;\n  &lt;type&gt;icons&lt;type&gt;\n&lt;/request&gt;\n\nURL:\nhttp://localhost:8080/geonetwork/srv/eng/xml.harvesting.info\n</code></pre> <p>Response Example:</p> <pre><code>&lt;root&gt;\n  &lt;stylesheets&gt;\n    &lt;record&gt;\n      &lt;id&gt;ArcCatalog8_to_ISO19115.xsl&lt;/id&gt;\n      &lt;name&gt;ArcCatalog8_to_ISO19115&lt;/name&gt;\n    &lt;/record&gt;\n    &lt;record&gt;\n      &lt;id&gt;CDMCoords-to-ISO19139Keywords.xsl&lt;/id&gt;\n      &lt;name&gt;CDMCoords-to-ISO19139Keywords&lt;/name&gt;\n    &lt;/record&gt;\n    .....\n  &lt;/stylesheets&gt;\n&lt;/root&gt;\n</code></pre>"},{"location":"developer/xml_services/services_harvesting/#oaipmhserver","title":"oaiPmhServer","text":"<p>Request information about the sets and prefixes of an OAIPMH server. This request requires an additional url attribute on the type parameter specifying the name of the OAIPMH server to query.</p> <p>POST Request Example:</p> <pre><code>&lt;request&gt;\n  &lt;type url=\"http://localhost:8080/geonetwork/srv/eng/oaipmh\"&gt;oaiPmhServer&lt;/type&gt;\n&lt;/request&gt;\n\nURL:\nhttp://localhost:8080/geonetwork/srv/eng/xml.harvesting.info\n</code></pre> <p>Response Example:</p> <pre><code>&lt;root&gt;\n &lt;oaiPmhServer&gt;\n   &lt;formats&gt;\n     &lt;format&gt;iso19115&lt;/format&gt;\n     &lt;format&gt;fgdc-std&lt;/format&gt;\n     &lt;format&gt;iso19139&lt;/format&gt;\n     &lt;format&gt;csw-record&lt;/format&gt;\n     &lt;format&gt;iso19110&lt;/format&gt;\n     &lt;format&gt;dublin-core&lt;/format&gt;\n     &lt;format&gt;oai_dc&lt;/format&gt;\n   &lt;/formats&gt;\n   &lt;sets&gt;\n     &lt;set&gt;\n       &lt;name&gt;maps&lt;/name&gt;\n       &lt;label&gt;Maps &amp;amp; graphics&lt;/label&gt;\n     &lt;/set&gt;\n     &lt;set&gt;\n       &lt;name&gt;datasets&lt;/name&gt;\n       &lt;label&gt;Datasets&lt;/label&gt;\n     &lt;/set&gt;\n     ......\n   &lt;/sets&gt;\n &lt;/oaiPmhServer&gt;\n&lt;/root&gt;\n</code></pre>"},{"location":"developer/xml_services/services_harvesting/#wfsfragmentschemas","title":"wfsFragmentSchemas","text":"<p>Return list of schemas that have WFS Fragment conversion stylesheets. These stylesheets are stored in the <code>WFSToFragments</code> directory in the <code>convert</code> directory of a metadata schema. eg. for schema iso19139 this directory would be <code>GEONETWORK_DATA_DIR/config/schema_plugins/iso19139/convert/WFSToFragments</code>.</p> <p>POST Request Example:</p> <pre><code>&lt;request&gt;\n &lt;type&gt;wfsFragmentSchemas&lt;/type&gt;\n&lt;/request&gt;\n\nURL:\nhttp://localhost:8080/geonetwork/srv/eng/xml.harvesting.info\n</code></pre> <p>Response Example:</p> <pre><code>&lt;root&gt;\n &lt;schemas&gt;\n   &lt;record&gt;\n     &lt;id&gt;iso19139&lt;/id&gt;\n     &lt;name&gt;iso19139&lt;/name&gt;\n   &lt;/record&gt;\n &lt;/schemas&gt;\n&lt;/root&gt;\n</code></pre>"},{"location":"developer/xml_services/services_harvesting/#wfsfragmentstylesheets","title":"wfsFragmentStylesheets","text":"<p>Return WFS Fragment conversion stylesheets for a schema previously returned by the request type <code>wfsFragmentSchemas</code> described above. These stylesheets are stored in the <code>WFSToFragments</code> directory in the <code>convert</code> directory of a metadata schema. eg. for schema iso19139 this directory would be <code>GEONETWORK_DATA_DIR/config/schema_plugins/iso19139/convert/WFSToFragments</code>.</p> <p>POST Request Example:</p> <pre><code>&lt;request&gt;\n  &lt;schema&gt;iso19139&lt;/schema&gt;\n  &lt;type&gt;wfsFragmentStylesheets&lt;/type&gt;\n&lt;/request&gt;\n\nURL:\nhttp://localhost:8080/geonetwork/srv/eng/xml.harvesting.info\n</code></pre> <p>Response Example:</p> <pre><code>&lt;root&gt;\n &lt;stylesheets&gt;\n   &lt;record&gt;\n     &lt;id&gt;deegree22_philosopher_fragments.xsl&lt;/id&gt;\n     &lt;name&gt;deegree22_philosopher_fragments&lt;/name&gt;\n     &lt;schema&gt;iso19139&lt;/schema&gt;\n   &lt;/record&gt;\n   &lt;record&gt;\n     &lt;id&gt;geoserver_boundary_fragments.xsl&lt;/id&gt;\n     &lt;name&gt;geoserver_boundary_fragments&lt;/name&gt;\n     &lt;schema&gt;iso19139&lt;/schema&gt;\n   &lt;/record&gt;\n &lt;/stylesheets&gt;\n&lt;/root&gt;\n</code></pre>"},{"location":"developer/xml_services/services_harvesting/#threddsfragmentschemas","title":"threddsFragmentSchemas","text":"<p>Return list of schemas that have THREDDS Fragment conversion stylesheets. These stylesheets are stored in the <code>ThreddsToFragments</code> directory in the <code>convert</code> directory of a metadata schema. eg. for schema iso19139 this directory would be <code>GEONETWORK_DATA_DIR/config/schema_plugins/iso19139/convert/ThreddsToFragments</code>.</p> <p>POST Request Example:</p> <pre><code>&lt;request&gt;\n &lt;type&gt;threddsFragmentSchemas&lt;/type&gt;\n&lt;/request&gt;\n\nURL:\nhttp://localhost:8080/geonetwork/srv/eng/xml.harvesting.info\n</code></pre> <p>Response Example:</p> <pre><code>&lt;root&gt;\n &lt;schemas&gt;\n   &lt;record&gt;\n     &lt;id&gt;iso19139&lt;/id&gt;\n     &lt;name&gt;iso19139&lt;/name&gt;\n   &lt;/record&gt;\n &lt;/schemas&gt;\n&lt;/root&gt;\n</code></pre>"},{"location":"developer/xml_services/services_harvesting/#threddsfragmentstylesheets","title":"threddsFragmentStylesheets","text":"<p>Return WFS Fragment conversion stylesheets for a schema previously returned by the request type <code>threddsFragmentSchemas</code> described above. These stylesheets are stored in the <code>ThreddsToFragments</code> directory in the <code>convert</code> directory of a metadata schema. eg. for schema iso19139 this directory would be <code>GEONETWORK_DATA_DIR/config/schema_plugins/iso19139/convert/ThreddsToFragments</code>.</p> <p>POST Request Example:</p> <pre><code>&lt;request&gt;\n  &lt;schema&gt;iso19139&lt;/schema&gt;\n  &lt;type&gt;threddsFragmentStylesheets&lt;/type&gt;\n&lt;/request&gt;\n\nURL:\nhttp://localhost:8080/geonetwork/srv/eng/xml.harvesting.info\n</code></pre> <p>Response Example:</p> <pre><code>&lt;root&gt;\n &lt;stylesheets&gt;\n   &lt;record&gt;\n     &lt;id&gt;netcdf-attributes.xsl&lt;/id&gt;\n     &lt;name&gt;netcdf-attributes&lt;/name&gt;\n     &lt;schema&gt;iso19139&lt;/schema&gt;\n   &lt;/record&gt;\n   &lt;record&gt;\n     &lt;id&gt;thredds-metadata.xsl&lt;/id&gt;\n     &lt;name&gt;thredds-metadata&lt;/name&gt;\n     &lt;schema&gt;iso19139&lt;/schema&gt;\n   &lt;/record&gt;\n &lt;/stylesheets&gt;\n&lt;/root&gt;\n</code></pre>"},{"location":"developer/xml_services/services_harvesting/#ogcwxsoutputschemas","title":"ogcwxsOutputSchemas","text":"<p>Return list of schemas that have GetCapabilities conversion stylesheets for a particular three letter OGC service type code. These stylesheets are stored in the <code>OGCWxSGetCapabilitiesto19119</code> directory in the <code>convert</code> directory of a metadata schema. eg. for schema iso19139:</p> <ul> <li>the directory for these stylesheets would be <code>GEONETWORK_DATA_DIR/config/schema_plugins/iso19139/convert/OGCWxSGetCapabilitiesto19119</code></li> <li>if a conversion from the GetCapabilities statement of a particular OGC service to a metadata record of this schema exists, then a stylesheet for that serviceType will be present in the directory eg. for schema iso19139 and serviceType <code>WFS</code>, the conversion stylesheet name would be <code>OGCWFSGetCapabilities-to-ISO19119_ISO19139.xsl</code></li> </ul> <p>POST Request Example:</p> <pre><code>&lt;request&gt;\n &lt;type&gt;ogcwxsOutputSchemas&lt;/type&gt;\n &lt;serviceType&gt;WFS&lt;/serviceType&gt;\n&lt;/request&gt;\n\nURL:\nhttp://localhost:8080/geonetwork/srv/eng/xml.harvesting.info\n</code></pre> <p>Response Example:</p> <pre><code>&lt;root&gt;\n &lt;schemas&gt;\n   &lt;record&gt;\n     &lt;id&gt;iso19139&lt;/id&gt;\n     &lt;name&gt;iso19139&lt;/name&gt;\n   &lt;/record&gt;\n &lt;/schemas&gt;\n&lt;/root&gt;\n</code></pre>"},{"location":"developer/xml_services/services_harvesting/#errors_1","title":"Errors","text":"<p>If an error occurred then HTTP status code 500 is returned along with an XML document which contains details of what went wrong. An example of such an error response is:</p> <pre><code>&lt;error id=\"bad-parameter\"&gt;\n  &lt;message&gt;type&lt;/message&gt;\n  &lt;class&gt;BadParameterEx&lt;/class&gt; \n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/services_harvesting/#update-a-harvester-instance-xmlharvestingupdate","title":"Update a Harvester Instance (xml.harvesting.update)","text":"<p>This service can be used to change the parameters of a harvester instance.</p> <p>Note</p> <p>You cannot change the harvester type.</p>"},{"location":"developer/xml_services/services_harvesting/#request_2","title":"Request","text":"<p>The simplest way to use this service is to:</p> <ol> <li>use the <code>xml.harvesting.get</code> service to obtain the XML definition of the harvester that you want to update.</li> <li>modify the parameters as required.</li> <li>call this service with the modified XML definition of the harvester as the request.</li> </ol> <p>The XML request is the same as that used in <code>xml.harvesting.add</code>.</p>"},{"location":"developer/xml_services/services_harvesting/#response_2","title":"Response","text":"<p>If the update succeeded then HTTP status code 200 is returned along with an XML document containing the harvester definition as supplied in the request.</p> <p>If an error occurred then HTTP status code 500 is returned along with an XML document which contains details of what went wrong. An example of such an error response is:</p> <pre><code>&lt;error id=\"object-not-found\"&gt;\n  &lt;message&gt;Object not found&lt;/message&gt;\n  &lt;class&gt;ObjectNotFoundEx&lt;/class&gt; \n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/services_harvesting/#control-or-remove-a-harvester-instance-xmlharvestingremove-xmlharvestingstart-xmlharvestingstop-xmlharvestingrun","title":"Control or Remove a Harvester Instance (xml.harvesting.remove, xml.harvesting.start, xml.harvesting.stop, xml.harvesting.run)","text":"<p>These services are described in on section because they share a common request interface. Their purpose is to remove, start, stop or run a harvester:</p> <ol> <li>remove: Remove a harvester. Deletes the harvester instance.</li> <li>start: When created, a harvester is in the inactive state. This operation makes it active which means it will be run at the enxt scheduled time.</li> <li>stop: Makes a harvester inactive - it will no longer be executed at the scheduled time. Note this will not stop a harvester that is already performing a harvest.</li> <li>run: Start the harvester now. Used to test the harvesting.</li> </ol>"},{"location":"developer/xml_services/services_harvesting/#request_3","title":"Request","text":"<p>A set of ids to operate on. Example:</p> <pre><code>&lt;request&gt;\n    &lt;id&gt;123&lt;/id&gt;\n    &lt;id&gt;456&lt;/id&gt;\n    &lt;id&gt;789&lt;/id&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/services_harvesting/#response_3","title":"Response","text":"<p>Similar to the request but every id has a status attribute indicating the success or failure of the operation. For example, the response to the previous request could be:</p> <pre><code>&lt;response&gt;\n    &lt;id status=\"ok\"&gt;123&lt;/id&gt;\n    &lt;id status=\"not-found\"&gt;456&lt;/id&gt;\n    &lt;id status=\"inactive\"&gt;789&lt;/id&gt;\n&lt;/response&gt;\n</code></pre> <p>The table below summarises, for each service, the possible status values.</p> <p>+--------------------------------------------------------------------+--------+-------+------+-------+ | Status value                                                       | remove | start | stop | run   | +====================================================================+========+=======+======+=======+ | ok                                                                 | &gt; X    | &gt; X   | &gt; X  | &gt; X   | +--------------------------------------------------------------------+--------+-------+------+-------+ | not-found inactive already-inactive already-active already-running | &gt; X    | &gt; X   | &gt; X  | &gt; X X | |                                                                    |        | &gt;     | &gt;    | &gt;     | |                                                                    |        | &gt; X   | &gt; X  | &gt; X   | +--------------------------------------------------------------------+--------+-------+------+-------+</p> <p>If the request has no id parameters, an empty response is returned.</p> <p>Most errors relating to a harvester specified in the request (eg. harvester id not found) are returned as status attributes in the response. However, exceptions can still occur, in which case HTTP status code 500 is returned along with an XML document which contains details of what went wrong. An example of such an error response is:</p> <pre><code>&lt;error id=\"service-not-allowed\"&gt;\n  &lt;message&gt;Service not allowed&lt;/message&gt;\n  &lt;class&gt;ServiceNotAllowedEx&lt;/class&gt; \n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/services_harvesting/#xml.harvesting.history","title":"Retrieve Harvesting History (xml.harvesting.history)","text":"<p>This service can be used to retrive the history of harvest sessions for a specified harvester instance or all harvester instances. The harvester history information is stored in the GeoNetwork database in the HarvestHistory table.</p>"},{"location":"developer/xml_services/services_harvesting/#request_4","title":"Request","text":"<p>Called without an id parameter, this service returns the harvest history of all harvesters. The response can be sorted by harvest date or by harvester type. The sort order is specified in the parameter sort. Example:</p> <pre><code>&lt;request&gt;\n  &lt;sort&gt;date&lt;/sort&gt;\n&lt;/request&gt;\n</code></pre> <p>Otherwise, an id parameter can be specified to request the harvest history of a specific harvester instance. In this case the sort order is by date of harvest:</p> <pre><code>&lt;request&gt;\n  &lt;id&gt;123&lt;/id&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/services_harvesting/#response_4","title":"Response","text":"<p>If the update succeeded then HTTP status code 200 is returned along with an XML document containing the harvest history. The response for both types of requests is the same except that the response to a request for the history of a specific harvester will only have history details for that harvester. An example of the response is:</p> <pre><code>&lt;response&gt;\n &lt;response&gt;\n   &lt;record&gt;\n     &lt;id&gt;1&lt;/id&gt;\n     &lt;harvestdate&gt;2013-01-01T19:24:54&lt;/harvestdate&gt;\n     &lt;harvesteruuid&gt;b6a11fc3-3f6f-494b-a8f3-35eaadced575&lt;/harvesteruuid&gt;\n     &lt;harvestername&gt;test plaja&lt;/harvestername&gt;\n     &lt;harvestertype&gt;geonetwork&lt;/harvestertype&gt;\n     &lt;deleted&gt;n&lt;/deleted&gt;\n     &lt;info&gt;\n       &lt;result&gt;\n         &lt;total&gt;5&lt;/total&gt;\n         &lt;added&gt;5&lt;/added&gt;\n         &lt;updated&gt;0&lt;/updated&gt;\n         &lt;unchanged&gt;0&lt;/unchanged&gt;\n         &lt;unknownSchema&gt;0&lt;/unknownSchema&gt;\n         &lt;removed&gt;0&lt;/removed&gt;\n         &lt;unretrievable&gt;0&lt;/unretrievable&gt;\n         &lt;doesNotValidate&gt;0&lt;/doesNotValidate&gt;\n       &lt;/result&gt;\n     &lt;/info&gt;\n     &lt;params&gt;   \n       .....\n     &lt;/params&gt;\n   &lt;/record&gt;\n &lt;/response&gt;\n &lt;nodes&gt;\n   &lt;node id=\"955\" type=\"geonetwork\"&gt;\n     .....\n   &lt;/node&gt;\n   .....\n &lt;/nodes&gt;\n &lt;sort&gt;date&lt;/sort&gt;\n&lt;/response&gt;\n</code></pre> <p>Each record element in the embedded response element contains the details of a harvest session. The elements are:</p> <ul> <li>id - harvest history record id in harvesthistory table</li> <li>harvestdate - date of harvest</li> <li>harvesteruuid - uuid of harvester that ran</li> <li>harvestername - name of harvester (Site/Name parameter) that ran</li> <li>harvestertype - type of harvester that ran</li> <li>deleted - has the harvester that ran been deleted? 'y' - yes, 'n' - no</li> <li> <p>info - results of the harvest. May contain one of the following elements:</p> </li> <li> <p>result - details of the successful harvest (a harvester dependent list of results from the harvest)</p> </li> <li> <p>error - an exception from an unsuccessful harvest - see Exception handling for content details of this element</p> </li> <li> <p>params - the parameters that the harvester had been configured with for the harvest</p> </li> </ul> <p>After the embedded response element, the currently configured harvesters are returned as node children of a nodes element - see <code>xml.harvesting.add</code> for references to each of the harvester types that can be returned here.</p> <p>If an error occurred then HTTP status code 500 is returned along with an XML document which contains details of what went wrong. An example of such an error response is:</p> <pre><code>&lt;error id=\"object-not-found\"&gt;\n  &lt;message&gt;Object not found&lt;/message&gt;\n  &lt;class&gt;ObjectNotFoundEx&lt;/class&gt; \n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/services_harvesting/#delete-harvesting-history-entries-xmlharvestinghistorydelete","title":"Delete Harvesting History Entries (xml.harvesting.history.delete)","text":"<p>This service can be used to delete harvester history entries from the harvesthistory table in the GeoNetwork database.</p>"},{"location":"developer/xml_services/services_harvesting/#request_5","title":"Request","text":"<p>One or more id parameters can be specified to request deletion of the harvest history entries in the harvesthistory table. The id element values can be obtained from <code>xml.harvesting.history</code>:</p> <pre><code>&lt;request&gt;\n  &lt;id&gt;1&lt;/id&gt;\n  &lt;id&gt;2&lt;/id&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/services_harvesting/#response_5","title":"Response","text":"<p>If successful then HTTP status code 200 is returned along with an XML document with details of how many harvest history records were successfully deleted. An example of this response is:</p> <pre><code>&lt;response&gt;2&lt;/response&gt;\n</code></pre> <p>Note</p> <p>If records with the id specified in the parameters are not present, they will be quietly ignored.</p> <p>If an error occurred then HTTP status code 500 is returned along with an XML document which contains details of what went wrong. An example of such an error response is:</p> <pre><code>&lt;error id=\"service-not-allowed\"&gt;\n  &lt;message&gt;Service not allowed&lt;/message&gt;\n  &lt;class&gt;ServiceNotAllowedEx&lt;/class&gt; \n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/services_mef/","title":"MEF services","text":"<p>This section describes the services related to the Metadata Exchange Format. These services allow import/export metadata using the MEF (Metadata Exchange Format) format.</p> <p>Note</p> <p>before using these services please review the section on the MEF format at Metadata Exchange Format</p>"},{"location":"developer/xml_services/services_mef/#mef_export","title":"mef.export","text":"<p>This service exports GeoNetwork metadata using the MEF file format. The metadata record can be specified using a uuid or the currently selected set of metadata records can be used - see <code>metadata.select</code> for more details on how to select a set of metadata records.</p> <p>This service is public but metadata access rules apply. For a partial export, the view privilege is enough but for a full export the download privilege is also required. Without a login step, only partial exports on public metadata are allowed.</p> <p>This service uses the system temporary directory to build the MEF file. By default the tmp directory is <code>INSTALL_DIR/web/geonetwork/data</code>. You will need to ensure that sufficient disk space is available on that filesystem for full exports (ie. those that include data files uploaded with the metadata record) to be successful. Alternatively, you can specify a different directory by configuring the <code>uploadDir</code> parameter in the <code>general</code> section of the <code>INSTALL_DIR/web/geonetwork/WEB-INF/config.xml</code> file.</p>"},{"location":"developer/xml_services/services_mef/#request","title":"Request","text":"<p>This service accepts requests in GET/POST and XML form. The input parameters are all optional and are as follows:</p> <ul> <li>uuid the universal unique identifier of the metadata to be exported. If this parameter is optional then the selected set of metadata will be exported. To select a set of metadata see <code>metadata.select</code>.</li> <li>format which MEF format to use. Can be one of: simple, partial, full. Default is full - which means thumbnails and data files uploaded with the metadata record are included in the MEF.</li> <li>skipUuid (true|false) If set to true, the metadata record UUIDs will not be exported into the MEF <code>info.xml</code> file. Without a UUID (which is a unique key inside the database) the metadata records in a MEF can be repeatedly imported as they will receive a new UUID on import. The default value is false.</li> <li>version (true|false) If set to true, MEF Version 2.0 is used, otherwise MEF Version 1.0 is used. This parameter needs to be present if related records are being included in the MEF - see the relation parameter below.</li> <li>resolveXlink (true|false) If set to true, then any XLinks in the metadata records are resolved before the records are exported. If false, the metadata records are exported with unresolved XLinks. Default is true.</li> <li>removeXlinkAttributes (true|false) If set to true, then any XLink attributes in the metadata records are removed before the records are exported. Default is true.</li> <li>relation (true|false) If set to true and version is also set to true, then related records (eg.parent, feature catalog) are exported into the MEF with the metadata record. Default is true.</li> </ul> <p>Example POST request:</p> <pre><code>&lt;request&gt;\n &lt;uuid&gt;f80bca2e-ff75-4107-8999-4c1864cb1b1b&lt;/uuid&gt;\n &lt;format&gt;full&lt;/format&gt;\n &lt;skipUuid&gt;true&lt;/skipUuid&gt;\n &lt;version&gt;true&lt;/version&gt;\n &lt;relation&gt;true&lt;/relation&gt;\n&lt;/request&gt;\n\nURL: \nhttp://localhost:8080/geonetwork/srv/eng/mef.export\n</code></pre>"},{"location":"developer/xml_services/services_mef/#response","title":"Response","text":"<p>If successful the service returns HTTP status code 200 and the response is a MEF file with name as follows:</p> <ul> <li>prefix is <code>export-</code></li> <li>MEF format: simple, partial, full</li> <li>current time in milliseconds since 1970</li> <li><code>zip</code> extension</li> </ul> <p>eg. <code>export-full-1357949862822.zip</code></p> <p>If an exception occurred then service returns HTTP status code 500 and an XML document describing what went wrong. An example of such a response is:</p> <pre><code>&lt;error id=\"metadata-not-found\"&gt;\n  &lt;message&gt;Metadata not found&lt;/message&gt;\n  &lt;class&gt;MetadataNotFoundEx&lt;/class&gt;\n  .......\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/services_mef/#mefimport","title":"mef.import","text":"<p>This service is used to import a metadata record in the MEF format.</p> <p>Only users with the Administrator profile can run this service.</p>"},{"location":"developer/xml_services/services_mef/#request_1","title":"Request","text":"<p>The service accepts a multipart/form-data POST request with a single mefFile parameter that must contain the MEF information.</p>"},{"location":"developer/xml_services/services_mef/#response_1","title":"Response","text":"<p>If the import is successful, the service returns HTTP status code 200 along with an XML document containing the GeoNetwork integer id of the created metadata. Example:</p> <pre><code>&lt;ok&gt;123&lt;/ok&gt;\n</code></pre> <p>If an exception occurred then service returns HTTP status code 500 and an XML document describing what went wrong. An example of such a response is:</p> <pre><code>&lt;error id=\"metadata-not-found\"&gt;\n  &lt;message&gt;Metadata not found&lt;/message&gt;\n  &lt;class&gt;MetadataNotFoundEx&lt;/class&gt;\n  .......\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/services_mef/#notes","title":"Notes","text":"<ul> <li>Version 1.0 of the MEF format does not capture the metadata owner (the creator) and the group owner. During import, the user that is performing this operation will become the metadata owner and the group owner will be set to null.</li> </ul>"},{"location":"developer/xml_services/services_site_info_forwarding/","title":"Site Information and Request Forwarding Services","text":"<p>Services in this section provide information about the site (eg. name, users, groups, schemas etc) and access to the site forwarding service which can be used by JavaScript clients.</p>"},{"location":"developer/xml_services/services_site_info_forwarding/#xml.info","title":"Site Information (xml.info)","text":"<p>This service can be used to retrieve information about a GeoNetwork site. The information that can be requested includes: site name and id, users, groups, metadata schemas as well as lists of privileges, metadata status values, spatial regions, local metadata categories and so on.</p>"},{"location":"developer/xml_services/services_site_info_forwarding/#request","title":"Request","text":"<p>The XML request should contain at least one type parameter to indicate the kind of information to retrieve. Multiple type parameters can be specified. The set of allowed values is:</p> <ul> <li>site: Returns general information about the site like its name, id, etc...</li> <li> <p>users: Depending upon the profile of the user making the call, information about users of the site will be returned. The rules are:</p> </li> <li> <p>Administrators can see all users</p> </li> <li>User administrators can see all users they administer and all other user administrators in the same group set. The group set is defined by all groups visible to the user administrator (except for the All and Intranet groups).</li> <li>An authenticated user can only see their own information.</li> <li> <p>A guest cannot see any user information at all.</p> </li> <li> <p>groups: Returns all user groups visible to the requesting user. Note: If the user is not authenticated, only the <code>Intranet</code> and <code>All</code> groups will be returned.</p> </li> <li> <p>sources: Returns all GeoNetwork sources (remote sites) that are known about at the site. This will include:</p> </li> <li> <p>Node name and siteId</p> </li> <li>All source UUIDs and site names that have been discovered through harvesting</li> <li> <p>All source UUIDs and site names from MEF files imported by the site</p> </li> <li> <p>schemas: Returns all registered metadata schemas for the site</p> </li> <li>categories: Returns the metadata categories for the site</li> <li>operations: Returns all possible operations on metadata</li> <li>regions: Returns all geographical regions usable for spatial queries</li> <li>status: Returns all possible status values for metadata records</li> </ul> <p>Request example:</p> <pre><code>&lt;request&gt;\n    &lt;type&gt;site&lt;/type&gt;\n    &lt;type&gt;groups&lt;/type&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/services_site_info_forwarding/#response","title":"Response","text":"<p>Each type parameter produces an XML subtree in an info container element. An example response to a request for site, categories and groups information would look like the following:</p> <pre><code>&lt;info&gt;\n    &lt;site&gt;...&lt;/site&gt;\n    &lt;categories&gt;...&lt;/categories&gt;\n    &lt;groups&gt;...&lt;/groups&gt;\n&lt;/info&gt;\n</code></pre> <p>The structure of each possible subtree is as follows:</p>"},{"location":"developer/xml_services/services_site_info_forwarding/#site","title":"Site","text":"<ul> <li>site: This is the container for site information<ul> <li>name: Human readable site name</li> <li>siteId: Universal unique identifier (uuid) of the site</li> <li>platform: Container for GeoNetwork development version information<ul> <li>name: Platform name. Always <code>geonetwork</code>.</li> <li>version: Platform version, given in the X.Y.Z format</li> <li>subVersion: Additional version notes, like 'alpha-1' or 'beta-2'.</li> </ul> </li> </ul> </li> </ul> <p>Example site information:</p> <pre><code>&lt;site&gt;\n    &lt;name&gt;My site&lt;/name&gt;\n    &lt;organisation&gt;FAO&lt;/organization&gt;\n    &lt;siteId&gt;0619cc50-708b-11da-8202-000d9335906e&lt;/siteId&gt;\n    &lt;platform&gt;\n        &lt;name&gt;geonetwork&lt;/name&gt;\n        &lt;version&gt;2.2.0&lt;/version&gt;\n    &lt;/platform&gt;\n&lt;/site&gt;\n</code></pre>"},{"location":"developer/xml_services/services_site_info_forwarding/#users","title":"Users","text":"<ul> <li>users: This is the container for user information<ul> <li>user [0..n]: A user of the system<ul> <li>id: The local identifier of the user</li> <li>username: The login name</li> <li>surname: The user's surname. Used for display purposes.</li> <li>name: The user's name. Used for display purposes.</li> <li>profile: User's profile. eg. Administrator, Editor, UserAdmin etc...</li> <li>address: The user's address.</li> <li>state: The user's state.</li> <li>zip: The user's address zip/postal code.</li> <li>country: The user's country.</li> <li>email: The user's email address.</li> <li>organisation: The user's organisation.</li> <li>kind: The type of organisation (eg. NGO, Government)</li> </ul> </li> </ul> </li> </ul> <p>Example response:</p> <pre><code>&lt;users&gt;\n    &lt;user&gt;\n        &lt;id&gt;3&lt;/id&gt;\n        &lt;username&gt;eddi&lt;/username&gt;\n        &lt;surname&gt;Smith&lt;/surname&gt;\n        &lt;name&gt;John&lt;/name&gt;\n        &lt;profile&gt;Editor&lt;/profile&gt;\n        &lt;address/&gt;\n        &lt;state/&gt;\n        &lt;zip/&gt;\n        &lt;country/&gt;\n        &lt;email/&gt;\n        &lt;organisation/&gt;\n        &lt;kind&gt;gov&lt;/kind&gt;\n    &lt;/user&gt;\n&lt;/users&gt;\n</code></pre>"},{"location":"developer/xml_services/services_site_info_forwarding/#groups","title":"Groups","text":"<ul> <li>groups: This is the container for groups<ul> <li>group [2..n]: This is a GeoNetwork group. There will always be at least two groups: the Internet and Intranet groups. This element has an id attribute which represents the local identifier for the group.<ul> <li>name: Group name</li> <li>description: Group description</li> <li>referrer: The user responsible for this group</li> <li>email: The email address to notify when a data file uploaded with the metadata is downloaded</li> <li>label: The localised labels used to show the group in the user interface. See Localised entities.</li> </ul> </li> </ul> </li> </ul> <p>Example response:</p> <pre><code>&lt;groups&gt;\n    &lt;group id=\"1\"&gt;\n        &lt;name&gt;editors&lt;/name&gt;\n        &lt;label&gt;\n            &lt;eng&gt;Editors&lt;/eng&gt;\n            &lt;fre&gt;\u00c9diteurs&lt;/fre&gt;\n        &lt;/label&gt;\n    &lt;/group&gt;\n&lt;/groups&gt;\n</code></pre>"},{"location":"developer/xml_services/services_site_info_forwarding/#sources","title":"Sources","text":"<ul> <li>sources: This is the container for sources.<ul> <li>source [0..n]: A source known to the GeoNetwork node.<ul> <li>name: Source name</li> <li>UUID: Source universal unique identifier</li> </ul> </li> </ul> </li> </ul> <p>Example response for a source:</p> <pre><code>&lt;sources&gt;\n    &lt;source&gt;\n        &lt;name&gt;My Host&lt;/name&gt;\n        &lt;UUID&gt;0619cc50-708b-11da-8202-000d9335906e&lt;/uuid&gt;\n    &lt;/source&gt;\n&lt;/sources&gt;\n</code></pre>"},{"location":"developer/xml_services/services_site_info_forwarding/#schemas","title":"Schemas","text":"<ul> <li>schemas: This is the container for the schema information<ul> <li>schema [0..n]: A metadata schema.<ul> <li>name - the name of the schema - this is the name by which the schema is known to GeoNetwork. It is also the name of the directory in <code>GEONETWORK_DATA_DIR/config/schema_plugins</code> under which the schema can be found.</li> <li>id - A unique identifier assigned to the schema in the <code>schema-ident.xml</code> file.</li> <li>version - a version string assigned to the schema in the <code>schema-ident.xml</code> file.</li> <li>namespaces - namespaces used by the metadata schema and records that belong to that schema. This is a string suitable for use as a namespace definition in an XML file.</li> <li>edit - if true then records that use this schema can be edited by GeoNetwork, if false then they can't.</li> <li>conversions - information about the GeoNetwork services that can be called to convert metadata that use this schema into other XML formats. If there are valid conversions registered for this schema then this element will have a converter child for each one of these conversions. Each converter child has the following attributes which are intended to be used when searching for a particular format that may be produced by a conversion:<ul> <li>name - the name of the GeoNetwork service that invokes the converter</li> <li>nsUri - the namespace URI of the XML produced by the conversion</li> <li>schemaLocation - the schema location (URL) of the namespace URI</li> <li>xslt - the name of the XSLT in the plugin schema convert subdirectory that is invoked by the GeoNetwork service to carry out the conversion.</li> </ul> </li> </ul> </li> </ul> </li> </ul> <p>Example response for schemas:</p> <pre><code>&lt;schemas&gt;\n &lt;schema&gt;\n   &lt;name&gt;iso19139&lt;/name&gt;\n   &lt;id&gt;3f95190a-dde4-11df-8626-001c2346de4c&lt;/id&gt;\n   &lt;version&gt;1.0&lt;/version&gt;\n   &lt;namespaces&gt;xmlns:gts=\"http://www.isotc211.org/2005/gts\" xmlns:gmx=\"http://www.isotc211.org/2005/gmx\" xmlns:gco=\"http://www.isotc211.org/2005/gco\" xmlns:srv=\"http://www.isotc211.org/2005/srv\" xmlns:gss=\"http://www.isotc211.org/2005/gss\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:gsr=\"http://www.isotc211.org/2005/gsr\" xmlns:gmd=\"http://www.isotc211.org/2005/gmd\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"&lt;/namespaces&gt;\n   &lt;convertDirectory&gt;/usr/local/src/git/geonetwork-2.8.x/web/src/main/webapp/WEB-INF/data/config/schema_plugins/iso19139/convert/&lt;/convertDirectory&gt;\n   &lt;edit&gt;true&lt;/edit&gt;\n   &lt;conversions&gt;\n     &lt;converter name=\"xml_iso19139\" nsUri=\"http://www.isotc211.org/2005/gmd\" schemaLocation=\"www.isotc211.org/2005/gmd/gmd.xsd\" xslt=\"\" /&gt;\n     &lt;converter name=\"xml_iso19139Tooai_dc\" nsUri=\"http://www.openarchives.org/OAI/2.0/\" schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc.xsd\" xslt=\"oai_dc.xsl\" /&gt;\n   &lt;/conversions&gt;\n &lt;/schema&gt; \n ...\n&lt;/schemas&gt;\n</code></pre> <p>Looking at the example schema (iso19139) above, there are two converters. The first is invoked by calling the GeoNetwork service <code>xml_iso19139</code> (eg. <code>http://somehost/geonetwork/srv/eng/xml_iso19139?uuid=&lt;uuid of metadata&gt;</code>). It produces an XML format with namespace URI <code>http://www.isotc211.org/gmd</code> with schemaLocation <code>http://www.isotc211.org/2005/gmd/gmd.xsd</code> and xslt name <code>xml_iso19139</code> because the xslt attribute is set to the empty string.</p>"},{"location":"developer/xml_services/services_site_info_forwarding/#categories","title":"Categories","text":"<ul> <li>categories: This is the container for categories.<ul> <li>category [0..n]: A single GeoNetwork category. This element has an id attribute which represents the local identifier for the category.<ul> <li>name: Category name</li> <li>label: The localised labels used to show the category in the user interface. See Localised entities.</li> </ul> </li> </ul> </li> </ul> <p>Example response:</p> <pre><code>&lt;categories&gt;\n    &lt;category id=\"1\"&gt;\n        &lt;name&gt;datasets&lt;/name&gt;\n        &lt;label&gt;\n            &lt;eng&gt;Datasets&lt;/eng&gt;\n            &lt;fre&gt;Jeux de donn\u00e9es&lt;/fre&gt;\n        &lt;/label&gt;\n    &lt;/category&gt;\n&lt;/categories&gt;\n</code></pre>"},{"location":"developer/xml_services/services_site_info_forwarding/#operations","title":"Operations","text":"<ul> <li>operations: This is the container for the operations<ul> <li>operation [0..n]: This is a possible operation on a metadata record. This element has an id attribute which represents the local identifier for the operation.<ul> <li>name: Short name for the operation.</li> <li>reserved: Can be y or n and is used to distinguish between system reserved and user defined operations.</li> <li>label: The localised labels used to show the operation in the user interface. See Localised entities.</li> </ul> </li> </ul> </li> </ul> <p>Example response for operations:</p> <pre><code>&lt;operations&gt;\n    &lt;operation id=\"0\"&gt;\n        &lt;name&gt;view&lt;/name&gt;\n        &lt;label&gt;\n            &lt;eng&gt;View&lt;/eng&gt;\n            &lt;fre&gt;Voir&lt;/fre&gt;\n        &lt;/label&gt;\n    &lt;/operation&gt;\n&lt;/operations&gt;\n</code></pre>"},{"location":"developer/xml_services/services_site_info_forwarding/#regions","title":"Regions","text":"<ul> <li>regions: This is the container for geographical regions<ul> <li>region [0..n]: This is a region container element. This element has an id attribute which represents the local identifier for the operation.<ul> <li>north: North coordinate of the bounding box.</li> <li>south: South coordinate of the bounding box.</li> <li>west: West coordinate of the bounding box.</li> <li>east: east coordinate of the bounding box.</li> <li>label: The localised labels used to show the region in the user interface. See Localised entities.</li> </ul> </li> </ul> </li> </ul> <p>Example response for regions:</p> <pre><code>&lt;regions&gt;\n    &lt;region id=\"303\"&gt;\n        &lt;north&gt;82.99&lt;/north&gt;\n        &lt;south&gt;26.92&lt;/south&gt;\n        &lt;west&gt;-37.32&lt;/west&gt;\n        &lt;east&gt;39.24&lt;/east&gt;\n        &lt;label&gt;\n            &lt;eng&gt;Western Europe&lt;/eng&gt;\n        &lt;/label&gt;\n    &lt;/region&gt;\n&lt;/regions&gt;\n</code></pre>"},{"location":"developer/xml_services/services_site_info_forwarding/#status","title":"Status","text":"<ul> <li>statusvalues: This is the container for the metadata status value information.<ul> <li>status [0..n]: A metadata status value. This element has an id attribute which represents the local identifier of the status value.<ul> <li>name: The status value name</li> <li>reserved: Can be y or n and is used to distinguish between system reserved and user defined status values.</li> <li>label: The localised labels used to show the status value in the user interface. See Localised entities.</li> </ul> </li> </ul> </li> </ul> <p>Example response for status:</p> <pre><code>&lt;statusvalues&gt;\n  &lt;status id=\"0\"&gt;\n    &lt;name&gt;unknown&lt;/name&gt;\n    &lt;reserved&gt;y&lt;/reserved&gt;\n    &lt;label&gt;\n      &lt;eng&gt;Unknown&lt;/eng&gt;\n    &lt;/label&gt;\n  &lt;/status&gt;\n  ...\n&lt;/statusvalues&gt;\n</code></pre>"},{"location":"developer/xml_services/services_site_info_forwarding/#z3950repositories","title":"z3950repositories","text":"<ul> <li>z3950repositories: This is the container for the Z3950 repositories that have been configured for this site.<ul> <li>repository [0..n]: A Z3950 Repository container.<ul> <li>id: The repository id. This should be used when referring to the repository in GeoNetwork services (eg. xml.harvest.* services - see Harvesting services).</li> <li>label: The human readable name for the repository.</li> </ul> </li> </ul> </li> </ul> <p>Example response for z3950repositories:</p> <pre><code>&lt;z3950repositories&gt;\n  &lt;repository&gt;\n    &lt;id code=\"act\" serverCode=\"cbb945ec-36ea-11df-9735-ebfc367b61a6\"&gt;act&lt;/id&gt;\n    &lt;label&gt;ACT Geographic Data Directory&lt;/label&gt;\n  &lt;/repository&gt;\n  .....\n&lt;/z3950repositories&gt;\n</code></pre>"},{"location":"developer/xml_services/services_site_info_forwarding/#localised_entities","title":"Localised entities","text":"<p>Localised entities in the responses from this service have a label element which contains localised strings in all supported languages. This element has a child for each supported language. Each child has a name reflecting the language code and content set to the localised text. Example:</p> <pre><code>&lt;label&gt;\n    &lt;eng&gt;Editors&lt;/eng&gt;\n    &lt;fre&gt;\u00c9diteurs&lt;/fre&gt;\n    &lt;esp&gt;Editores&lt;/esp&gt;\n&lt;/label&gt;\n</code></pre>"},{"location":"developer/xml_services/services_site_info_forwarding/#request-forwarding-xmlforward","title":"Request Forwarding (xml.forward)","text":"<p>This is a request forwarding service. It can be used by JavaScript code to connect to a remote host because a JavaScript program cannot access any machine other than its server (the same origin policy, see http://en.wikipedia.org/wiki/Same_origin_policy). For example, it is used by the harvesting web interface to query a remote host and retrieve the list of site ids.</p>"},{"location":"developer/xml_services/services_site_info_forwarding/#request_1","title":"Request","text":"<p>The details of the request:</p> <pre><code>&lt;request&gt;\n    &lt;site&gt;\n        &lt;url&gt;...&lt;/url&gt;\n        &lt;type&gt;...&lt;/type&gt;\n        &lt;account&gt;\n            &lt;username&gt;...&lt;/username&gt;\n            &lt;password&gt;...&lt;/password&gt;\n        &lt;/account&gt;\n    &lt;/site&gt;\n    &lt;params&gt;...&lt;/params&gt;\n&lt;/request&gt;\n</code></pre> <p>Where:</p> <ul> <li>site: A container for site information where the request will be forwarded.</li> <li>url: Refers to the remote URL to connect to. Usually it points to a GeoNetwork XML service but it can point to any XML service.</li> <li>type: If set to GeoNetwork then use GeoNetwork authentication schema. Any other value, or if the element is missing, refers to a generic node.</li> <li>account: This element is optional. If present, the provided credentials will be used to authenticate to the remote site.</li> <li>params: Container for the request parameters.</li> </ul> <p>Request for info from a remote server:</p> <pre><code>&lt;request&gt;\n    &lt;site&gt;\n        &lt;url&gt;http://mynode.org:8080/geonetwork/srv/eng/xml.info&lt;/url&gt;\n    &lt;/site&gt;\n    &lt;params&gt;\n        &lt;request&gt;\n            &lt;type&gt;site&lt;type&gt;\n        &lt;/request&gt;\n    &lt;/params&gt;\n&lt;/request&gt;\n</code></pre> <p>Note</p> <p>This service uses the proxy configuration. See <code>System Configuration</code> section of the user manual.</p>"},{"location":"developer/xml_services/services_site_info_forwarding/#response_1","title":"Response","text":"<p>Response from the remote service.</p>"},{"location":"developer/xml_services/system_configuration/","title":"System configuration","text":""},{"location":"developer/xml_services/system_configuration/#introduction","title":"Introduction","text":"<p>GeoNetwork configuration parameters can be changed to suit the needs of your site. There are two groups of parameters:</p> <ul> <li>parameters that can be changed through the web interface.</li> <li>parameters not accessible from the web interface and that must be changed when the system is not running</li> </ul> <p>The first group of parameters can be queried or changed through the two services described in this section: <code>xml.config.get</code> and <code>xml.config.set</code>.</p> <p>The second group of parameters must be changed manually by editing the <code>config-*.xml</code> files in <code>INSTALL_DIR/web/geonetwork/WEB-INF</code>.</p> <p>The GAST tool can be used to help configure the database parameters (see the section on the GAST tool in the user manual).</p>"},{"location":"developer/xml_services/system_configuration/#xmlconfigget","title":"xml.config.get","text":"<p>This service returns the system configuration parameters as an XML document.</p>"},{"location":"developer/xml_services/system_configuration/#request","title":"Request","text":"<p>Parameters: None</p>"},{"location":"developer/xml_services/system_configuration/#response","title":"Response","text":"<p>The response is an XML tree similar to the system hierarchy into the settings structure. The response has the following elements:</p> <ul> <li>site: A container for site information.<ul> <li>name: Site name.</li> <li>organisation: Site organisation name.</li> <li>svnUuid: Subversion Uuid (used for metadata versioning)</li> <li>siteId: Uuid of site (used to uniquely identify site)</li> </ul> </li> <li>platform: Details of development platform.<ul> <li>version: Version string of software.</li> <li>subVersion: Additional version string.</li> </ul> </li> <li>server: A container for server information.<ul> <li>host: Name of the host from which the site is reached.</li> <li>port: Port number of the previous host.</li> <li>protocol: http or https.</li> </ul> </li> <li>Intranet: Information about the Intranet of the organisation.<ul> <li>network: IP address that specifies the intranet.</li> <li>netmask: netmask used to identify intranet.</li> </ul> </li> <li>z3950: Configuration of Z39.50 server.<ul> <li>enable: true means that the Z39.50 server component is running.</li> <li>port: Port number to use to listen for incoming Z39.50 requests.</li> </ul> </li> <li>proxy: Proxy configuration<ul> <li>use: true means proxy is used when connecting to external nodes.</li> <li>host: Proxy server host.</li> <li>port: Proxy server port.</li> <li>username: Proxy credentials.</li> <li>password: Proxy credentials.</li> </ul> </li> <li>feedback: A container for feedback information<ul> <li>email: Feedback/Info email address</li> <li>mailServer: Email server to use to send feedback emails<ul> <li>host: Email server address</li> <li>port: Port number of email service on email server</li> </ul> </li> </ul> </li> <li>removedMetadata: A container for removed metadata information<ul> <li>dir: Folder used to store removed metadata in MEF format</li> </ul> </li> <li>ldap: A container for LDAP parameters (see System Configuration in Users Manual for more information)</li> <li>selectionmanager: A container for selection manager configuration<ul> <li>maxrecords: Maximum number of records that can be selected</li> </ul> </li> <li>csw: A container for csw server configuration<ul> <li>enable: CSW server is enabled if set to true.</li> <li>contactId: Identifier of GeoNetwork user who is the contact for the CSW server.</li> <li>metadataPublic: If set to true then metadata inserted through the CSW server will be made public immediately.</li> </ul> </li> <li>shib: A container for Shibboleth parameters (see System Configuration in Users Manual for more information)</li> <li>userSelfRegistration: A container for user self-registration service configuration<ul> <li>enable: enabled if set to true.</li> </ul> </li> <li>clickablehyperlinks: A container for configuration of clickable hyper-links in metadata content<ul> <li>enable: enabled if set to true. ie. hyperlinks in metadata content will be automatically turned into clickable HTML links</li> </ul> </li> <li>localrating: A container for configuration of local rating versus remote rating<ul> <li>enable: local rating enabled if set to true.</li> </ul> </li> <li>downloadservice: A container for configuration of file download interface on links built from ISO online resources with file download protocol<ul> <li>leave: don't build links or modify ISO online resources with file download protocol</li> <li>simple: download file immediately when user clicks on link</li> <li>withdisclaimer: when user clicks on link, display metadata resource restrictions and disclaimers before downloading file</li> </ul> </li> <li>xlinkResolver: A container for configuration of XLink resolver service<ul> <li>enable: XLinks in metadata records will be resolved if set to true</li> </ul> </li> <li>autofixing: A container for configuration of autofixing service<ul> <li>enable: Autofixing (ie. update-fixed-info.xsl) will be applied to metadata records when they are saved in the editor</li> </ul> </li> <li>searchStats: A container for configuration of search statistics collection<ul> <li>enable: if true then search stats will collected on searches made through the GeoNetwork user interface</li> </ul> </li> <li>indexOptimzer: A container to configure if and when Lucene index optimization will take place (likely to be deprecated in the next release of GeoNetwork)<ul> <li>enable: if true then enable optimization at the scheduled interval</li> </ul> </li> <li>oai: A container to configure the Open Archives Initiative (OAI) server in GeoNetwork<ul> <li>mdmode: if '1' then OAI date searches uses the metadata temporal extent, if '2' then the modification date from the database is used</li> <li>tokentimeout: time in seconds that a continuation token passed to a client can be used</li> <li>cachesize: number of client sessions that the server can manage</li> </ul> </li> <li>inspire: A container to configure the Inspire options in GeoNetwork<ul> <li>enable: if true then inspire indexing of ISO metadata will be enabled</li> <li>enableSearchPanel: if true then inspire search panel will be shown in the search interface</li> </ul> </li> <li>harvester: A container to configure harvesting options<ul> <li>enableEditing: if true then harvested records can be edited, false means editing will not be enabled</li> </ul> </li> <li>metadata: A container to configure the different view/edit tabs shown to the user in the viewer/editor<ul> <li>enableSimpleView: simple (or default) mode means that only those elements present in the template/record will be displayed, new elements cannot be added - true means simple (or default) view is enabled, false means the tab will not be shown</li> <li>enableIsoView: true means that tabs showing mandatory/core/all groupings of metadata elements will be present in the viewer/editor for ISO records</li> <li>enableInspireView: true means that tabs showing inspire groupings of metadata elements will be present in the viewer/editor for ISO records</li> <li>enableXmlView: true means that the tab showing the XML of the metadata record will be present in the viewer/editor</li> <li>defaultView: 'simple', 'advanced', 'iso', 'xml' determines which tab will be the default view (ie. the view used when no previous view has been selected by the user in their current session).</li> </ul> </li> <li>threadedindexing: A container to configure multi-threaded indexing<ul> <li>maxThreads: Number of threads to be used during multi-threaded indexing</li> </ul> </li> <li>autodetect: A parameter to configure language detection in search terms<ul> <li>enable: if true then language detection is enabled</li> </ul> </li> <li>requestedLanguage: A parameter to configure which indexes will be searched and which languages will be used to display results<ul> <li>only: 'off' - all languages ignored, 'prefer_locale' - prefer documents with translations to requested language, 'prefer_docLanguage' - prefer documents whose language is the requested language, 'only_locale' - translations in requested language, 'only_docLocale' - document language is the requested language</li> </ul> </li> </ul> <p>Example of xml.config.get response:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;config&gt;\n &lt;site&gt;\n   &lt;name&gt;My GeoNetwork catalogue&lt;/name&gt;\n   &lt;organization&gt;My organization&lt;/organization&gt;\n   &lt;svnUuid&gt;c7799284-e786-4425-a6cf-824bb07e478e&lt;/svnUuid&gt;\n   &lt;siteId&gt;b7ce20f2-888a-4139-8802-916730c4be06&lt;/siteId&gt;\n &lt;/site&gt;\n &lt;platform&gt;\n   &lt;version&gt;2.8.0&lt;/version&gt;\n   &lt;subVersion&gt;RC2&lt;/subVersion&gt;\n &lt;/platform&gt;\n &lt;server&gt;\n   &lt;host&gt;localhost&lt;/host&gt;\n   &lt;port&gt;8080&lt;/port&gt;\n   &lt;protocol&gt;http&lt;/protocol&gt;\n &lt;/server&gt;\n &lt;intranet&gt;\n   &lt;network&gt;127.0.0.1&lt;/network&gt;\n   &lt;netmask&gt;255.0.0.0&lt;/netmask&gt;\n &lt;/intranet&gt;\n &lt;z3950&gt;\n   &lt;enable&gt;true&lt;/enable&gt;\n   &lt;port&gt;2100&lt;/port&gt;\n &lt;/z3950&gt;\n &lt;proxy&gt;\n   &lt;use&gt;false&lt;/use&gt;\n   &lt;host/&gt;\n   &lt;port/&gt;\n   &lt;username/&gt;\n   &lt;password/&gt;\n &lt;/proxy&gt;\n &lt;feedback&gt;\n   &lt;email/&gt;\n   &lt;mailServer&gt;\n     &lt;host/&gt;\n     &lt;port&gt;25&lt;/port&gt;\n   &lt;/mailServer&gt;\n &lt;/feedback&gt;\n &lt;removedMetadata&gt;\n   &lt;dir&gt;WEB-INF/data/removed&lt;/dir&gt;\n &lt;/removedMetadata&gt;\n &lt;ldap&gt;\n   &lt;use&gt;false&lt;/use&gt;\n   &lt;host/&gt;\n   &lt;port/&gt;\n   &lt;defaultProfile&gt;RegisteredUser&lt;/defaultProfile&gt;\n   &lt;uidAttr&gt;uid&lt;/uidAttr&gt;\n   &lt;distinguishedNames&gt;\n     &lt;base&gt;dc=fao,dc=org&lt;/base&gt;\n     &lt;users&gt;ou=people&lt;/users&gt;\n   &lt;/distinguishedNames&gt;\n   &lt;userAttribs&gt;\n     &lt;name&gt;cn&lt;/name&gt;\n     &lt;profile&gt;profile&lt;/profile&gt;\n     &lt;group/&gt;\n   &lt;/userAttribs&gt;\n   &lt;defaultGroup/&gt;\n &lt;/ldap&gt;\n &lt;selectionmanager&gt;\n   &lt;maxrecords&gt;1000&lt;/maxrecords&gt;\n &lt;/selectionmanager&gt;\n &lt;csw&gt;\n   &lt;enable&gt;true&lt;/enable&gt;\n   &lt;contactId/&gt;\n   &lt;metadataPublic&gt;false&lt;/metadataPublic&gt;\n &lt;/csw&gt;\n &lt;shib&gt;\n   &lt;use&gt;false&lt;/use&gt;\n   &lt;path&gt;/geonetwork/srv/eng/shib.user.login&lt;/path&gt;\n   &lt;attrib&gt;\n     &lt;username&gt;REMOTE_USER&lt;/username&gt;\n     &lt;surname&gt;Shib-Person-surname&lt;/surname&gt;\n     &lt;firstname&gt;Shib-InetOrgPerson-givenName&lt;/firstname&gt;\n     &lt;profile&gt;Shib-EP-Entitlement&lt;/profile&gt;\n     &lt;group/&gt;\n     &lt;organizationName/&gt;\n     &lt;postalAddress/&gt;\n     &lt;phone/&gt;\n     &lt;email/&gt;\n     &lt;fullName/&gt;\n   &lt;/attrib&gt;\n   &lt;defaultGroup/&gt;\n &lt;/shib&gt;\n &lt;userSelfRegistration&gt;\n   &lt;enable&gt;false&lt;/enable&gt;\n &lt;/userSelfRegistration&gt;\n &lt;clickablehyperlinks&gt;\n   &lt;enable&gt;true&lt;/enable&gt;\n &lt;/clickablehyperlinks&gt;\n &lt;localrating&gt;\n   &lt;enable&gt;false&lt;/enable&gt;\n &lt;/localrating&gt;\n &lt;downloadservice&gt;\n   &lt;leave&gt;false&lt;/leave&gt;\n   &lt;simple&gt;true&lt;/simple&gt;\n   &lt;withdisclaimer&gt;false&lt;/withdisclaimer&gt;\n &lt;/downloadservice&gt;\n &lt;xlinkResolver&gt;\n   &lt;enable&gt;false&lt;/enable&gt;\n &lt;/xlinkResolver&gt;\n &lt;autofixing&gt;\n   &lt;enable&gt;true&lt;/enable&gt;\n &lt;/autofixing&gt;\n &lt;searchStats&gt;\n   &lt;enable&gt;false&lt;/enable&gt;\n &lt;/searchStats&gt;\n &lt;indexoptimizer&gt;\n   &lt;enable&gt;true&lt;/enable&gt;\n   &lt;at&gt;\n     &lt;hour&gt;0&lt;/hour&gt;\n     &lt;min&gt;0&lt;/min&gt;\n     &lt;sec&gt;0&lt;/sec&gt;\n   &lt;/at&gt;\n   &lt;interval&gt;\n     &lt;day&gt;0&lt;/day&gt;\n     &lt;hour&gt;24&lt;/hour&gt;\n     &lt;min&gt;0&lt;/min&gt;\n   &lt;/interval&gt;\n &lt;/indexoptimizer&gt;\n &lt;oai&gt;\n   &lt;mdmode&gt;1&lt;/mdmode&gt;\n   &lt;tokentimeout&gt;3600&lt;/tokentimeout&gt;\n   &lt;cachesize&gt;60&lt;/cachesize&gt;\n &lt;/oai&gt;\n &lt;inspire&gt;\n   &lt;enable&gt;false&lt;/enable&gt;\n   &lt;enableSearchPanel&gt;false&lt;/enableSearchPanel&gt;\n &lt;/inspire&gt;\n &lt;harvester&gt;\n   &lt;enableEditing&gt;false&lt;/enableEditing&gt;\n &lt;/harvester&gt;\n &lt;metadata&gt;\n   &lt;enableSimpleView&gt;true&lt;/enableSimpleView&gt;\n   &lt;enableIsoView&gt;true&lt;/enableIsoView&gt;\n   &lt;enableInspireView&gt;false&lt;/enableInspireView&gt;\n   &lt;enableXmlView&gt;true&lt;/enableXmlView&gt;\n   &lt;defaultView&gt;simple&lt;/defaultView&gt;\n &lt;/metadata&gt;\n &lt;metadataprivs&gt;\n   &lt;usergrouponly&gt;false&lt;/usergrouponly&gt;\n &lt;/metadataprivs&gt;\n &lt;threadedindexing&gt;\n   &lt;maxthreads&gt;1&lt;/maxthreads&gt;\n &lt;/threadedindexing&gt;\n &lt;autodetect&gt;\n   &lt;enable&gt;false&lt;/enable&gt;\n &lt;/autodetect&gt;\n &lt;requestedLanguage&gt;\n   &lt;only&gt;prefer_locale&lt;/only&gt;\n &lt;/requestedLanguage&gt;\n&lt;/config&gt;\n</code></pre>"},{"location":"developer/xml_services/system_configuration/#xmlconfigset","title":"xml.config.set","text":"<p>This service is used to update the system configuration. It is restricted to users with the Administrator profile.</p>"},{"location":"developer/xml_services/system_configuration/#request_1","title":"Request","text":"<p>The request format is the same as the XML document produced by the <code>xml.config.get</code> service. To use the <code>xml.config.set</code> service in the simplest way:</p> <ol> <li>Call <code>xml.config.get</code> to obtain an XML document describing the current configuration.</li> <li>Update the content of the elements you want to change.</li> <li>POST the modified XML document describing the new configuration to <code>xml.config.set</code>.</li> </ol> <p>So a typical POST request would look like::</p> <pre><code>Url: http://localhost:8080/geonetwork/srv/eng/xml.config.set\n\n&lt;request&gt;\n  &lt;config&gt;\n   .....\n  &lt;/config&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/system_configuration/#response_1","title":"Response","text":"<p>If the request executed successfully then HTTP status code 200 is returned along with an XML document confirming success. The success response is::</p> <pre><code>&lt;response&gt;ok&lt;/response&gt;\n</code></pre> <p>If an exception occurred then an XML document with the details of the exception is returned.</p> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/user_xml_services/","title":"User services","text":""},{"location":"developer/xml_services/user_xml_services/#user-retrieval-services","title":"User Retrieval Services","text":""},{"location":"developer/xml_services/user_xml_services/#list-of-users-xmlinfotypeusers","title":"List of Users (xml.info?type=users)","text":"<p>The xml.info service can be used to retrieve the users defined in GeoNetwork. See <code>xml.info</code>.</p>"},{"location":"developer/xml_services/user_xml_services/#user-groups-list-xmlusergroupslist","title":"User groups list (xml.usergroups.list)","text":"<p>The xml.usergroups.list service can be used to retrieve the list of groups that a user belongs to.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/user_xml_services/#request","title":"Request","text":"<p>Parameters:</p> <ul> <li>id: User identifier (multiple id elements can be specified)</li> </ul> <p>User groups list request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.usergroups.list\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;id&gt;3&lt;/id&gt;\n&lt;request&gt;\n</code></pre>"},{"location":"developer/xml_services/user_xml_services/#response","title":"Response","text":"<p>If the request executes successfully then HTTP status code 200 is returned with an XML document containing the groups that the user belongs to. The elements in the response are:</p> <ul> <li>group: This is the container for each user group element returned</li> <li>id: Group identifier</li> <li>name: Group name</li> <li>description: Group description</li> </ul> <p>User groups list response example:</p> <pre><code>&lt;groups&gt;\n  &lt;group&gt;\n    &lt;id&gt;3&lt;/id&gt;\n    &lt;name&gt;RWS&lt;/name&gt;\n    &lt;description /&gt;\n  &lt;/group&gt;\n&lt;/groups&gt;\n</code></pre> <p>If the request fails then an HTTP 500 status code error is returned and the response contains an XML document with the details of the exception/what went wrong. An example error response is::</p> <pre><code>&lt;error id=\"missing-parameter\"&gt;\n  &lt;message&gt;id&lt;/message&gt;\n  &lt;class&gt;MissingParameterEx&lt;/class&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/user_xml_services/#errors","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> <li>User XXXX doesn't exist, if a user with provided id value does not exist. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/user_xml_services/#user-information-xmluserget","title":"User information (xml.user.get)","text":"<p>The xml.user.get service returns information on a specified user.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/user_xml_services/#request_1","title":"Request","text":"<p>Parameters:</p> <ul> <li>id: Identifier of user to retrieve</li> </ul> <p>User get request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.user.get\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;request&gt;\n    &lt;id&gt;2&lt;/id&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/user_xml_services/#response_1","title":"Response","text":"<p>If the request executed succesfully then an HTTP 200 status code is returned and an XML document containing the user information (including the groups they belong to) is returned. An example response is::</p> <pre><code>&lt;response&gt;\n  &lt;record&gt;\n    &lt;id&gt;2&lt;/id&gt;\n    &lt;username&gt;bullshot&lt;/username&gt;\n    &lt;password&gt;112c535b861a904569285c941277d0c642eea4bb&lt;/password&gt;\n    &lt;surname&gt;Shot&lt;/surname&gt;\n    &lt;name&gt;Bull&lt;/name&gt;\n    &lt;profile&gt;RegisteredUser&lt;/profile&gt;\n    &lt;address&gt;41 Shot Street&lt;/address&gt;\n    &lt;city&gt;Kunnanurra&lt;/city&gt;\n    &lt;state&gt;Western Australia&lt;/state&gt;\n    &lt;zip&gt;8988&lt;/zip&gt;\n    &lt;country&gt;Australia&lt;/country&gt;\n    &lt;email&gt;gan@gan.com&lt;/email&gt;\n    &lt;organisation&gt;B7&lt;/organisation&gt;\n    &lt;kind&gt;gov&lt;/kind&gt;\n  &lt;/record&gt;\n  &lt;groups&gt;\n    &lt;id&gt;2&lt;/id&gt;\n  &lt;/groups&gt;\n&lt;/response&gt;\n</code></pre> <p>If the request fails then an HTTP 500 status code error is returned and the response contains an XML document with the details of the exception/what went wrong. An example error response is::</p> <pre><code>&lt;error id=\"missing-parameter\"&gt;\n  &lt;message&gt;id&lt;/message&gt;\n  &lt;class&gt;MissingParameterEx&lt;/class&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/user_xml_services/#errors_1","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> <li>Missing parameter (error id: missing-parameter), when mandatory parameters are not provided. Returns 500 HTTP code</li> <li>bad-parameter id, when id parameter is empty/invalid. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/user_xml_services/#user-maintenance-services","title":"User Maintenance Services","text":""},{"location":"developer/xml_services/user_xml_services/#create-a-user-xmluserupdate","title":"Create a user (xml.user.update)","text":"<p>The xml.user.update service can be used to create new users, update user information and reset user password, depending on the value of the operation parameter. Only users with profiles Administrator or UserAdmin can create new users.</p> <p>Users with profile Administrator can create users in any group, while users with profile UserAdmin can create users only in the groups to which they belong.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/user_xml_services/#request_2","title":"Request","text":"<p>Parameters:</p> <ul> <li>operation: (mandatory) newuser</li> <li>username: (mandatory) User login name</li> <li>password: (mandatory) User password</li> <li>profile: (mandatory) User profile</li> <li>surname:User surname</li> <li>name: User name</li> <li>address: User physical address</li> <li>city: User address city</li> <li>state: User address state</li> <li>zip: User address zip</li> <li>country: User address country</li> <li>email: User email</li> <li>org: User organisation/departament</li> <li>kind: Kind of organisation</li> <li>groups: Group identifier to set for the user, can be multiple groups elements</li> <li>groupid: Group identifier</li> </ul> <p>User create request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.user.update\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;request&gt;\n  &lt;operation&gt;newuser&lt;/operation&gt;\n  &lt;username&gt;samantha&lt;/username&gt;\n  &lt;password&gt;editor2&lt;/password&gt;\n  &lt;profile&gt;Editor&lt;/profile&gt;\n  &lt;name&gt;Samantha&lt;/name&gt;\n  &lt;city&gt;Amsterdam&lt;/city&gt;\n  &lt;country&gt;Netherlands&lt;/country&gt;\n  &lt;email&gt;samantha@mail.net&lt;/email&gt;\n  &lt;groups&gt;2&lt;/groups&gt;\n  &lt;groups&gt;4&lt;/groups&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/user_xml_services/#response_2","title":"Response","text":"<p>If the request executed successfully then HTTP 200 status code is returned with an XML document containing an empty response element.</p> <p>If the request fails, then an HTTP 500 status code error is returned with an XML document describing the exception/what went wrong. An example of such a response is::</p> <pre><code>&lt;error id=\"error\"&gt;\n  &lt;message&gt;User with username samantha already exists&lt;/message&gt;\n  &lt;class&gt;IllegalArgumentException&lt;/class&gt;\n  &lt;stack&gt;...&lt;/stack&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/user_xml_services/#errors_2","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> <li>Missing parameter (error id: missing-parameter), when mandatory parameters are not provided. Returns 500 HTTP code</li> <li>bad-parameter, when a mandatory fields is empty. Returns 500 HTTP code</li> <li>User with username XXXX already exists (error id: error), when a user with that username is already present. Returns 500 HTTP code</li> <li>Unknown profile XXXX (error id: error), when the profile is not valid. Returns 500 HTTP code</li> <li>ERROR: duplicate key violates unique constraint \"users_username_key\", when trying to create a new user using an existing username. Returns 500 HTTP code</li> <li>ERROR: insert or update on table \"usergroups\" violates foreign key constraint \"usergroups_groupid_fkey\", when group identifier is not an existing group identifier. Returns 500 HTTP code</li> <li>ERROR: tried to add group id XX to user XXXX - not allowed because you are not a member of that group, when the authenticated user has profile UserAdmin and tries to add the user to a group they do not manage. Returns 500 HTTP code</li> <li>ERROR: you don't have rights to do this, when the authenticated user has a profile that is not Administrator or UserAdmin. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/user_xml_services/#update-user-information-xmluserupdate","title":"Update user information (xml.user.update)","text":"<p>The xml.user.update service can be used to create new users, update user information and reset user password, depending on the value of the operation parameter. Only users with profiles Administrator or UserAdmin can update users information.</p> <p>Users with profile Administrator can update any user, while users with profile UserAdmin can update users only in the groups where they belong.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/user_xml_services/#request_3","title":"Request","text":"<p>Parameters:</p> <ul> <li>operation: (mandatory) editinfo</li> <li>id: (mandatory) Identifier of the user to update</li> <li>username: (mandatory) User login name</li> <li>password: (mandatory) User password</li> <li>profile: (mandatory) User profile</li> <li>surname: User surname</li> <li>name: User name</li> <li>address: User physical address</li> <li>city: User address city</li> <li>state: User address state</li> <li>zip: User address zip</li> <li>country: User address country</li> <li>email: User email</li> <li>org: User organisation/departament</li> <li>kind: Kind of organisation</li> <li>groups: Group identifier to set for the user, can be multiple groups elements</li> <li>groupid: Group identifier</li> </ul> <p>Note</p> <p>If an optional parameter is not provided, the value is updated in the database with an empty string.</p> <p>Update user information request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.user.update\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;operation&gt;editinfo&lt;/operation&gt;\n  &lt;id&gt;5&lt;/id&gt;\n  &lt;username&gt;samantha&lt;/username&gt;\n  &lt;password&gt;editor2&lt;/password&gt;\n  &lt;profile&gt;Editor&lt;/profile&gt;\n  &lt;name&gt;Samantha&lt;/name&gt;\n  &lt;city&gt;Rotterdam&lt;/city&gt;\n  &lt;country&gt;Netherlands&lt;/country&gt;\n  &lt;email&gt;samantha@mail.net&lt;/email&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/user_xml_services/#response_3","title":"Response","text":"<p>If the request executed successfully then HTTP 200 status code is returned with an XML document containing an empty response element.</p> <p>If the request fails, then an HTTP 500 status code error is returned with an XML document describing the exception/what went wrong. An example of such a response is::</p> <pre><code>&lt;error id=\"missing-parameter\"&gt;\n  &lt;message&gt;username&lt;/message&gt;\n  &lt;class&gt;MissingParameterEx&lt;/class&gt;\n  &lt;stack&gt;...&lt;/stack&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/user_xml_services/#errors_3","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> <li>Missing parameter (error id: missing-parameter), when mandatory parameters are not provided. Returns 500 HTTP code</li> <li>bad-parameter, when a mandatory field is empty. Returns 500 HTTP code</li> <li>Unknown profile XXXX (error id: error), when the profile is not valid. Returns 500 HTTP code</li> <li>ERROR: duplicate key violates unique constraint \"users_username_key\", when trying to create a new user using an existing username. Returns 500 HTTP code</li> <li>ERROR: insert or update on table \"usergroups\" violates foreign key constraint \"usergroups_groupid_fkey\", when the group identifier is not an existing group identifier. Returns 500 HTTP code</li> <li>ERROR: tried to add group id XX to user XXXX - not allowed because you are not a member of that group, when the authenticated user has profile UserAdmin and tries to add the user to a group in which they do not manage. Returns 500 HTTP code</li> <li>ERROR: you don't have rights to do this, when the authenticated user has a profile that is not Administrator or UserAdmin. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/user_xml_services/#reset-user-password-xmluserupdate","title":"Reset user password (xml.user.update)","text":"<p>The xml.user.update service can be used to create new users, update user information and reset user password, depending on the value of the operation parameter. Only users with profiles Administrator or UserAdmin can reset users password.</p> <p>Users with profile Administrator can reset the password for any user, while users with profile UserAdmin can reset the password for users only in the groups where they belong.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/user_xml_services/#request_4","title":"Request","text":"<p>Parameters:</p> <ul> <li>operation: (mandatory) resetpw</li> <li>id: (mandatory) Identifier of the user to reset the password</li> <li>username: (mandatory) User login name</li> <li>password: (mandatory) User new password</li> <li>profile: (mandatory) User profile</li> </ul> <p>Reset user password request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.user.update\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;request&gt;\n  &lt;operation&gt;resetpw&lt;/operation&gt;\n  &lt;id&gt;2&lt;/id&gt;\n  &lt;username&gt;editor&lt;/username&gt;\n  &lt;password&gt;newpassword&lt;/password&gt;\n  &lt;profile&gt;Editor&lt;/profile&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/user_xml_services/#response_4","title":"Response","text":"<p>If the request executed successfully then HTTP 200 status code is returned with an XML document containing an empty response element.</p> <p>If the request fails, then an HTTP 500 status code error is returned with an XML document describing the exception/what went wrong. An example of such a response is::</p> <pre><code>&lt;error id=\"missing-parameter\"&gt;\n  &lt;message&gt;username&lt;/message&gt;\n  &lt;class&gt;MissingParameterEx&lt;/class&gt;\n  &lt;stack&gt;...&lt;/stack&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/user_xml_services/#errors_4","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> <li>Missing parameter (error id: missing-parameter), when mandatory parameters are not provided. Returns 500 HTTP code</li> <li>bad-parameter, when a mandatory field is empty. Returns 500 HTTP code</li> <li>Unknown profile XXXX (error id: error), when the profile is not valid. Returns 500 HTTP code</li> <li>ERROR: you don't have rights to do this, when the authenticated user is not an Administrator or UserAdmin. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/user_xml_services/#update-current-authenticated-user-information-xmluserinfoupdate","title":"Update current authenticated user information (xml.user.infoupdate)","text":"<p>The xml.user.infoupdate service can be used to update the information related to the current authenticated user.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/user_xml_services/#request_5","title":"Request","text":"<p>Parameters:</p> <ul> <li>surname: (mandatory) User surname</li> <li>name: (mandatory) User name</li> <li>address: User physical address</li> <li>city: User address city</li> <li>state: User address state</li> <li>zip: User address zip</li> <li>country: User address country</li> <li>email: User email</li> <li>org: User organisation/departament</li> <li>kind: Kind of organisation</li> </ul> <p>Note</p> <p>If an optional parameter is not provided the value is updated in the database with an empty string.</p> <p>Current user info update request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.user.infoupdate\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;request&gt;\n  &lt;name&gt;admin&lt;/name&gt;\n  &lt;surname&gt;admin&lt;/surname&gt;\n  &lt;address&gt;address&lt;/address&gt;\n  &lt;city&gt;Amsterdam&lt;/city&gt;\n  &lt;zip&gt;55555&lt;/zip&gt;\n  &lt;country&gt;Netherlands&lt;/country&gt;\n  &lt;email&gt;user@mail.net&lt;/email&gt;\n  &lt;org&gt;GeoCat&lt;/org&gt;\n  &lt;kind&gt;gov&lt;/kind&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/user_xml_services/#response_5","title":"Response","text":"<p>If the request executed successfully then HTTP 200 status code is returned with an XML document containing an empty response element.</p> <p>If the request fails, then an HTTP 500 status code error is returned with an XML document describing the exception/what went wrong. An example of such a response is::</p> <pre><code>&lt;error id=\"missing-parameter\"&gt;\n  &lt;message&gt;surname&lt;/message&gt;\n  &lt;class&gt;MissingParameterEx&lt;/class&gt;\n  &lt;stack&gt;...&lt;/stack&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/user_xml_services/#errors_5","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated. Returns 500 HTTP code</li> <li>Missing parameter (error id: missing-parameter), when mandatory parameters are not provided. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/user_xml_services/#change-current-authenticated-user-password-xmluserpwupdate","title":"Change current authenticated user password (xml.user.pwupdate)","text":"<p>The xml.user.pwupdate service can be used to change the password of the current authenticated user.</p> <p>Requires authentication: Yes</p>"},{"location":"developer/xml_services/user_xml_services/#request_6","title":"Request","text":"<p>Parameters:</p> <ul> <li>password: Actual user password</li> <li>newPassword: New password to set for the user</li> </ul> <p>Example:</p> <pre><code>&lt;request&gt;\n    &lt;password&gt;admin&lt;/password&gt;\n    &lt;newPassword&gt;admin2&lt;/newPassword&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/user_xml_services/#response_6","title":"Response","text":"<p>If the request executed successfully then HTTP 200 status code is returned with an XML document containing an empty response element.</p> <p>If the request fails, then an HTTP 500 status code error is returned with an XML document describing the exception/what went wrong. An example of such a response is::</p> <pre><code>&lt;error id=\"error\"&gt;\n  &lt;message&gt;Old password is not correct&lt;/message&gt;\n  &lt;class&gt;IllegalArgumentException&lt;/class&gt;\n  &lt;stack&gt;...&lt;/stack&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/user_xml_services/#errors_6","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated. Returns 500 HTTP code</li> <li>Old password is not correct. Returns 500 HTTP code</li> <li>Bad parameter (newPassword), when an empty password is provided. Returns 500 HTTP code</li> </ul>"},{"location":"developer/xml_services/user_xml_services/#remove-a-user-xmluserremove","title":"Remove a user (xml.user.remove)","text":"<p>The xml.user.remove service can be used to remove an existing user. Only users with profiles Administrator or UserAdmin can delete users.</p> <p>Users with profile Administrator can delete any user (except themselves), while users with profile UserAdmin can delete users only in the groups where they belong (except themselves).</p> <p>Requires authentification: Yes</p>"},{"location":"developer/xml_services/user_xml_services/#request_7","title":"Request","text":"<p>Parameters:</p> <ul> <li>id: (mandatory) Identifier of user to delete</li> </ul> <p>User remove request example:</p> <pre><code>Url:\nhttp://localhost:8080/geonetwork/srv/eng/xml.user.remove\n\nMime-type:\napplication/xml\n\nPost request:\n&lt;request&gt;\n    &lt;id&gt;2&lt;/id&gt;\n&lt;/request&gt;\n</code></pre>"},{"location":"developer/xml_services/user_xml_services/#response_7","title":"Response","text":"<p>If the request executed successfully then HTTP 200 status code is returned with an XML document containing an empty response element.</p> <p>If the request fails, then an HTTP 500 status code error is returned with an XML document describing the exception/what went wrong. An example of such a response is::</p> <pre><code>&lt;error id=\"error\"&gt;\n  &lt;message&gt;You cannot delete yourself from the user database&lt;/message&gt;\n  &lt;class&gt;IllegalArgumentException&lt;/class&gt;\n  &lt;stack&gt;...&lt;/stack&gt;\n  .....\n&lt;/error&gt;\n</code></pre> <p>See Exception handling for more details.</p>"},{"location":"developer/xml_services/user_xml_services/#errors_7","title":"Errors","text":"<ul> <li>Service not allowed (error id: service-not-allowed), when the user is not authenticated or their profile has no rights to execute the service. Returns 500 HTTP code</li> <li>Missing parameter (error id: missing-parameter), when the id parameter is not provided. Returns 500 HTTP code</li> <li>You cannot delete yourself from the user database (error id: error). Returns 500 HTTP code</li> <li>You don't have rights to delete this user (error id: error), when authenticated user is not an Administrator or User administrator. Returns 500 HTTP code</li> <li>You don't have rights to delete this user because the user is not part of your group (error id: error), when trying to delete a user that is not in the same group as the authenticated user and the authenticated user is a User administrator. Returns 500 HTTP code</li> </ul>"},{"location":"users/","title":"User Manual v2.10","text":"<p>Welcome to the GeoNetwork User Manual v2.10. The manual is a guide describing how to use the metadata catalog.</p> <p>Other documents:</p> <ul> <li>GeoNetwork Developer Manual</li> <li>GeoNetwork User Manual (PDF)</li> </ul>"},{"location":"users/faq/","title":"Frequently Asked Questions","text":"<p>This is a list of frequently encountered problems, suggestions that help to find the cause of the problem and possible solutions. The list is by no means exhaustive. Feel free to contribute by submitting new problems and their solutions to the developer mailing list.</p> <p>Note</p> <p> is a placeholder for the GeoNetwork web application directory (eg. /webapps/geonetwork or /web/geonetwork).  should be read as some random file name. <p>Warning</p> <p>Be very careful when issuing commands on the terminal! You can easily damage your operating system with no way back. If you are not familiar with using the terminal: don't do it, contact an expert instead! Make a backup of your data before you make any of the suggested changes below!</p>"},{"location":"users/faq/#http-status-400-bad-request","title":"HTTP Status 400 Bad request","text":"<p>Check the availability and write permissions of the data and tmp directories.</p> <p>See The data/tmp directory and What/Where is the GeoNetwork data directory?.</p>"},{"location":"users/faq/#metadata-insert-fails","title":"Metadata insert fails","text":"<p>Inserting an XML or MEF file through the Metadata insert form fails silently. Verify if the data directory is available and writable.</p> <p>See The data/tmp directory and What/Where is the GeoNetwork data directory?.</p>"},{"location":"users/faq/#thumbnail-insert-fails","title":"Thumbnail insert fails","text":"<p>Nothing happens when inserting a thumbnail through the wizard in the metadata editor.</p> <p>Error in your log file looks like:</p> <pre><code>HTTP Status 400 - Cannot build ServiceRequest Cause : &lt;install directory&gt;/data/tmp/&lt;some file&gt; (No such file or directory) Error : java.io.FileNotFoundException\n</code></pre> <p>Then check The data/tmp directory and What/Where is the GeoNetwork data directory?.</p>"},{"location":"users/faq/#temp-dir","title":"The data/tmp directory","text":"<p>This directory is used as a staging area for file uploads and image/thumbnail operations. On Linux or OS X systems verify from a terminal if the <code>&lt;install directory&gt;/data/tmp</code> directory exists and is writable.</p> <p>ls -la /data <p>This should show the permissions on the data directory. For example, if you are running tomcat:</p> <pre><code>total 0\ndrwxr-xr-x   6 tomcat  tomcat  204 19 jan 15:34 .\ndrwxr-xr-x   8 tomcat  tomcat  272 23 dec 19:30 ..\ndrwxr-xr-x   3 tomcat  tomcat  102 19 jan 15:47 tmp\n</code></pre> <p>The above example shows that only the user tomcat has write access on the directories listed. All other users have read (and execute) rights only. See http://en.wikipedia.org/wiki/Filesystem_permissions for more details on file permissions.</p> <p>Make sure your web server is running as user tomcat. Check this with the command:</p> <p>ps aux | grep tomcat</p> <p>You should see the processes that have tomcat in their description. Something like this:</p> <pre><code>bash-3.2# ps aux | grep tomcat\ntomcat     22253   0,7  0,0  2435120    532 s000  S+    5:03pm   0:00.00 grep tomcat\ntomcat     22251   0,0  1,9  2861960  80596 s000  S     5:03pm   0:03.85 /System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home/bin/java -Djava.util.logging.config.file=/usr/local/apache-tomcat-6.0.32/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djava.endorsed.dirs=/usr/local/apache-tomcat-6.0.32/endorsed -classpath /usr/local/apache-tomcat-6.0.32/bin/bootstrap.jar -Dcatalina.base=/usr/local/apache-tomcat-6.0.32 -Dcatalina.home=/usr/local/apache-tomcat-6.0.32 -Djava.io.tmpdir=/usr/local/apache-tomcat-6.0.32/temp org.apache.catalina.startup.Bootstrap start\n</code></pre> <p>If all is well, the user referred to at the start of this string (in this case tomcat) is the same user that has write permissions on the data and tmp directories.</p> <p>You now have two possible solutions:</p> <ul> <li>Make the data and temporary directories writable to all users. You can change this using the command:</li> </ul> <p>chmod -R a+w /data <p>Your permissions should now look like this:</p> <pre><code>drwxrwxrwx   6 tomcat  tomcat  204 19 jan 15:34 .\netc..\n</code></pre> <p>Note</p> <p>the 'w' refers to 'write' access</p> <ul> <li>The second solution is to ensure the user running the webserver is the same user that holds write access to the data directory (in this case tomcat). For this, you can (a) change the user running the process, or (b) change ownership of the directory using the chown command:</li> </ul> <p>chown -R tomcat:tomcat /data"},{"location":"users/faq/#data-dir","title":"What/Where is the GeoNetwork data directory?","text":"<p>At GeoNetwork 2.8:</p> <ul> <li>metadata data (files uploaded with the metadata and thumbnails)</li> <li>the Lucene index</li> <li>plugin configurations (schema plugins, thesauri etc)</li> </ul> <p>have been moved into a single directory. By default, this directory is <code>&lt;install directory&gt;/WEB-INF/data</code>, but it can be located on any filesystem accessible to the GeoNetwork server and the different subdirectories can even be placed in different directories. See GeoNetwork data directory for more details. For the purposes of this FAQ, we'll assume that the GeoNetwork data directory is <code>&lt;install directory&gt;/WEB-INF/data</code> because the same principles apply no matter where the data directory is located.</p> <p>Check that the user running your webserver (eg. tomcat) has permissions over this directory.</p> <p>ls -la /WEB-INF/data <p>Your should see something like the following:</p> <pre><code>total 0\ndrwxr-xr-x   5 tomcat tomcat  170 Jan  8 01:17 .\ndrwxr-xr-x  48 tomcat tomcat 1632 Jan  8 01:17 ..\ndrwxr-xr-x   5 tomcat tomcat  170 Jan  8 01:17 config\ndrwxr-xr-x   5 tomcat tomcat  170 Jan  8 01:17 data\ndrwxr-xr-x   9 tomcat tomcat  306 Jan  8 10:04 index\n</code></pre> <p>If all is well, then the tomcat user will have write permissions on all sub directories.</p> <p>If not then you should ensure that the user running the webserver is the same user that holds write access to the GeoNetwork data directory (in this case tomcat). For this, you can (a) change the user running the process, or (b) change ownership of the directory using the chown command:</p> <p>chown -R tomcat:tomcat /WEB-INF/data"},{"location":"users/faq/#the-base-maps-are-not-visible","title":"The base maps are not visible","text":"<p>GeoServer may not have started properly. Confirm this by trying to connect to http://:8080/geoserver (on your local machine this is http://localhost:8080/geoserver )"},{"location":"users/faq/#native-jai-error-on-jetty","title":"Native JAI error on Jetty","text":"<p>Error in output.log:</p> <pre><code>sun.misc.ServiceConfigurationError: javax.imageio.spi.ImageOutputStreamSpi: Provider com.sun.media.imageioimpl.stream.ChannelImageOutputStreamSpi could not be instantiated: java.lang.SecurityException: sealing violation: package com.sun.media.imageioimpl.stream is sealed.\n</code></pre> <p>Jetty by default ships with a classloader that does not conform to the Java classloading model: you'll notice because Geoserver will fail all (<code>JAI</code>) usage attempt with a \"sealing violation\" exception. It can be restored to standard behaviour locating the etc/jetty-webapps.xml configuration file and changing the web app context configuration to look like the following:</p> <pre><code>&lt;Configure id=\"Server\" class=\"org.eclipse.jetty.server.Server\"&gt;\n&lt;Ref id=\"DeploymentManager\"&gt;\n      &lt;Call id=\"webappprovider\" name=\"addAppProvider\"&gt;\n        &lt;Arg&gt;\n          &lt;New class=\"org.eclipse.jetty.deploy.providers.WebAppProvider\"&gt;\n            &lt;Set name=\"monitoredDir\"&gt;&lt;Property name=\"jetty.home\" default=\".\" /&gt;/../web&lt;/Set&gt;\n            &lt;Set name=\"defaultsDescriptor\"&gt;&lt;Property name=\"jetty.home\" default=\".\"/&gt;/etc/webdefault.xml&lt;/Set&gt;\n            &lt;Set name=\"scanInterval\"&gt;1&lt;/Set&gt;\n            &lt;Set name=\"contextXmlDir\"&gt;&lt;Property name=\"jetty.home\" default=\".\" /&gt;/contexts&lt;/Set&gt;\n            &lt;Set name=\"extractWars\"&gt;true&lt;/Set&gt;\n\n            &lt;!-- uncomment in case of a JAI usage attempt with a \"sealing violation\" exception --&gt;\n            &lt;Set name=\"parentLoaderPriority\"&gt;true&lt;/Set&gt;\n\n          &lt;/New&gt;\n        &lt;/Arg&gt;\n      &lt;/Call&gt;\n&lt;/Ref&gt;\n&lt;/Configure&gt;\n</code></pre> <p>Note</p> <p>The important line is the one where the parentLoaderPriority property is set to true</p>"},{"location":"users/glossary/","title":"Glossary","text":"ebRIM <p>Enterprise Business Registry Information Model..</p> CSW <p>Catalog Service for the Web. The OGC Catalog Service defines common interfaces to discover, browse, and query metadata about data, services, and other potential resources.</p> ISO <p>International Standards Organisation is an international-standard-setting body composed of representatives from various national standards organizations. http://www.iso.org</p> ISO TC211 <p>ISO/TC 211 is a standard technical committee formed within ISO, tasked with covering the areas of digital geographic information (such as used by geographic information systems) and geomatics. It is responsible for preparation of a series of International Standards and Technical Specifications numbered in the range starting at 19101.</p> GeoNetwork <p>GeoNetwork opensource is a standards based, Free and Open Source catalog application to manage spatially referenced resources through the web. http://geonetwork-opensource.org</p> GeoServer <p>GeoServer is an open source software server written in Java that allows users to share and edit geospatial data. Designed for interoperability, it publishes data from any major spatial data source using open standards.</p> GPL <p>The GNU General Public License is a free, copyleft license for software and other kinds of works. GeoNetwork opensource is released under the GPL 2 license. http://www.gnu.org/licenses/old-licenses/gpl-2.0.html</p> Creative Commons <p>GeoNetwork documentation is released under the Creative Commons Attribution-ShareAlike 3.0 Unported License. Find more information at http://creativecommons.org/licenses/by-sa/3.0/</p> XML <p>Extensible Markup Language is a general-purpose specification for creating custom markup languages.</p> XSD <p>XML Schema, published as a W3C recommendation in May 2001, is one of several XML schema languages. http://en.wikipedia.org/wiki/XSD</p> ebXML <p>Enterprise Business XML.</p> DAO <p>Data Access Object.</p> CRUD <p>Create Read Update and Delete.</p> DB (or DBMS) <p>A database management system (DBMS) is computer software that manages databases. DBMSes may use any of a variety of database models, such as the network model or relational model. In large systems, a DBMS allows users and other software to store and retrieve data in a structured way.</p> SOA <p>Service Oriented Architecture provides methods for systems development and integration where systems package functionality as interoperable services. A SOA infrastructure allows different applications to exchange data with one another.</p> FGDC <p>The Federal Geographic Data Committee (FGDC) is an interagency committee that promotes the coordinated development, use, sharing, and dissemination of geospatial data on a national basis in the USA. See http://www.fgdc.gov</p> JMS <p>Java Messaging Service.</p> TDD <p>Test Driven Development.</p> JIBX <p>Binding XML to Java Code.</p> HQL <p>Hibernate Query Language.</p> OO <p>Object Oriented.</p> EJB <p>Enterprise Java Beans.</p> SOAP <p>Simple Object Access Protocol is a protocol specification for exchanging structured information in the implementation of Web Services in computer networks.</p> OGC <p>Open Geospatial Consortium. A standards organization for geospatial information systems http://www.opengeospatial.org</p> OSGeo <p>The Open Source Geospatial Foundation (OSGeo), is a non-profit non-governmental organization whose mission is to support and promote the collaborative development of open geospatial technologies and data. http://www.osgeo.org</p> FAO <p>Food and Agriculture Organisation of the United Nations is a specialised agency of the United Nations that leads international efforts to defeat hunger. http://www.fao.org</p> WFP <p>World Food Programme of the United Nations is the food aid branch of the United Nations, and the world's largest humanitarian organization. http://www.wfp.org</p> UNEP <p>The UN Environment Programme (UNEP) coordinates United Nations environmental activities, assisting developing countries in implementing environmentally sound policies and encourages sustainable development through sound environmental practices. http://www.unep.org</p> OCHA <p>United Nations Office for the Coordination of Humanitarian Affairs is designed to strengthen the UN's response to complex emergencies and natural disasters. http://ochaonline.un.org/</p> URL <p>A Uniform Resource Locator specifies where an identified resource is available and the mechanism for retrieving it.</p> GAST <p>GeoNetwork Administrator Survival Tool. A desktop application that allows administrators of a GeoNetwork catalog to perform simple database configuration using a GUI.</p> WebDAV <p>Web-based Distributed Authoring and Versioning. WebDAV is a set of extensions to the Hypertext Transfer Protocol (HTTP) that allows users to edit and manage files collaboratively on remote World Wide Web servers.</p> OAI-PMH <p>Open Archive Initiative Protocol for Metadata Harvesting. It is a protocol developed by the Open Archives Initiative. It is used to harvest (or collect) the metadata descriptions of the records in an archive so that services can be built using metadata from many archives.</p> WMS <p>Web Map Service is a standard protocol for serving georeferenced map images over the Internet that are generated by a map server using data from a GIS database. The specification was developed and first published by the Open Geospatial Consortium in 1999.</p> WFS <p>Web Feature Service provides an interface allowing requests for geographical features across the web using platform-independent calls. One can think of geographical features as the \"source code\" behind a map.</p> WCS <p>Web Coverage Service provides an interface allowing requests for geographical coverages across the web using platform-independent calls. The coverages are objects (or images) in a geographical area</p> WPS <p>Web Processing Service is designed to standardize the way that GIS calculations are made available to the Internet. WPS can describe any calculation (i.e. process) including all of its inputs and outputs, and trigger its execution as a Web Service.</p> UUID <p>A Universally Unique Identifier (UUID) is an identifier standard used in software construction, standardized by the Open Software Foundation (OSF) as part of the Distributed Computing Environment (DCE).</p> MAC address <p>Media Access Control address (MAC address) is a unique identifier assigned to most network adapters or network interface cards (NICs) by the manufacturer for identification, and used in the Media Access Control protocol sublayer. See also http://en.wikipedia.org/wiki/MAC_address on Wikipedia</p> MEF <p>Metadata Exchange Format. An export format developed by the GeoNetwork community. More details can be found in this manual in Chapter Metadata Exchange Format.</p> SKOS <p>The Simple Knowledge Organisation Systems (SKOS) is an area of work developing specifications and standards to support the use of knowledge organisation systems (KOS) such as thesauri, classification schemes. http://www.w3.org/2004/02/skos/</p> Z39.50 protocol <p>Z39.50 is a client-server protocol for searching and retrieving information from remote computer databases. It is covered by ANSI/NISO standard Z39.50, and ISO standard 23950. The standard's maintenance agency is the Library of Congress.</p> SMTP <p>Simple Mail Transfer Protocol is an Internet standard for electronic mail (e-mail) transmission across Internet Protocol (IP) networks.</p> LDAP <p>Lightweight Directory Access Protocol is an application protocol for querying and modifying directory services running over TCP/IP.</p> Shibboleth <p>The Shibboleth System is a standards based, open source software package for web single sign-on across or within organisational boundaries. It allows sites to make informed authorisation decisions for individual access of protected online resources in a privacy-preserving manner.</p> DC <p>The Dublin Core metadata element set is a standard for cross-domain information resource description. It provides a simple and standardised set of conventions for describing things online in ways that make them easier to find.</p> ESA <p>European Space Agency is an intergovernmental organisation dedicated to the exploration of space. http://www.esa.int</p> FOSS <p>Free and Open Source Software, also F/OSS, FOSS, or FLOSS (free/libre/open source software) is software which is liberally licensed to grant the right of users to study, change, and improve its design through the availability of its source code. http://en.wikipedia.org/wiki/FOSS</p> JDBC <p>The Java Database Connectivity (JDBC) API is the industry standard for database-independent connectivity between the Java programming language and a wide range of databases -- SQL databases and other tabular data sources, such as spreadsheets or flat files. The JDBC API provides a call-level API for SQL-based database access. JDBC technology allows you to use the Java programming language to exploit \"Write Once, Run Anywhere\" capabilities for applications that require access to enterprise data. With a JDBC technology-enabled driver, you can connect all corporate data even in a heterogeneous environment.</p> JAI <p>Java Advanced Imaging (JAI) is a Java platform extension API that provides a set of object-oriented interfaces that support a simple, high-level programming model which allows developers to create their own image manipulation routines without the additional cost or licensing restrictions, associated with commercial image processing software.</p>"},{"location":"users/preface/","title":"Preface","text":""},{"location":"users/preface/#about-this-project","title":"About this Project","text":"<p>This document provides guidelines to install, configure, use and customise the GeoNetwork opensource software.</p> <p>The GeoNetwork project started out as a Spatial Data Catalogue System for the Food and Agriculture organisation of the United Nations (<code>FAO</code>), the United Nations World Food Programme (<code>WFP</code>) and the United Nations Environmental Programme (<code>UNEP</code>).</p> <p>At present the project is widely used as the basis of Spatial Data Infrastructures all around the world.</p> <p>The project is part of the Open Source Geospatial Foundation (<code>OSGeo</code>) and can be found at GeoNetwork opensource.</p> <p></p>"},{"location":"users/preface/#license-information","title":"License Information","text":""},{"location":"users/preface/#software","title":"Software","text":"<p>The GeoNetwork opensource software is released under the <code>GPL</code> v2 license and can be used and modified free of charge.</p>"},{"location":"users/preface/#documentation","title":"Documentation","text":"<p>Documentation is released under a <code>Creative Commons</code> license with the following conditions.</p> <p>You are free to Share (to copy, distribute and transmit) and to Remix (to adapt) the documentation under the following conditions:</p> <ul> <li>Attribution. You must attribute GeoNetwork opensource documentation to GeoNetwork opensource developers.</li> <li>Share Alike. If you alter, transform, or build upon this work, you may distribute the resulting work only under the same or similar license to this one.</li> </ul> <p>With the understanding that:</p> <ul> <li>Any of the above conditions can be waived if you get permission from the copyright holder.</li> <li>Public Domain. Where the work or any of its elements is in the public domain under applicable law, that status is in no way affected by the license.</li> </ul> <p>Other Rights. In no way are any of the following rights affected by the license:</p> <ul> <li>Your fair dealing or fair use rights, or other applicable copyright exceptions and limitations;</li> <li>The author's moral rights;</li> <li>Rights other persons may have either in the work itself or in how the work is used, such as publicity or privacy rights.</li> </ul> <p>Notice: For any reuse or distribution, you must make clear to others the license terms of this work. The best way to do this is with a link to this web page.</p> <p>You may obtain a copy of the License at Creative Commons Attribution-ShareAlike 3.0 Unported License</p> <p>The document is written in reStructuredText format for consistency and portability.</p>"},{"location":"users/preface/#author-information","title":"Author Information","text":"<p>The documentation was written by the GeoNetwork opensource Developers and other community members. The basis for the reStructuredText based documentation is based on the work done by the GeoServer project and the Sphinx framework.</p> <p>If you have questions, found a bug or have enhancements, please contact us through the GeoNetwork opensource Development Mailing list at geonetwork-devel@lists.sourceforge.net</p>"},{"location":"users/admin/","title":"Administration","text":""},{"location":"users/admin/advanced-configuration/","title":"Advanced configuration","text":""},{"location":"users/admin/advanced-configuration/#Database_JNDI_configuration","title":"Database configuration","text":"<p>GeoNetwork has two options for pooled connections to the relational database:</p> <ol> <li>Manage its own database configuration and pool directly using Apache Commons Database Connection Pool (DBCP)</li> <li>Use database configuration and pool managed by the web application server (also known as the container) such as tomcat or jetty via the Java Naming and Directory Interface (JNDI).</li> </ol>"},{"location":"users/admin/advanced-configuration/#managing-the-database-connection-pool-through-apache-dbcp","title":"Managing the database connection pool through Apache DBCP","text":"<p>This option is the one that most users would use as it is the default option for managing the database in GeoNetwork. A typical configuration in the resources element of <code>INSTALL_DIR/web/geonetwork/WEB-INF/config.xml</code> uses the <code>jeeves.resources.dbms.ApacheDBCPool</code> class and looks something like:</p> <pre><code>&lt;resource enabled=\"true\"&gt;\n    &lt;name&gt;main-db&lt;/name&gt;\n    &lt;provider&gt;jeeves.resources.dbms.ApacheDBCPool&lt;/provider&gt;\n    &lt;config&gt;\n        &lt;user&gt;www-data&lt;/user&gt;\n        &lt;password&gt;www-data&lt;/password&gt;\n        &lt;driver&gt;org.postgis.DriverWrapper&lt;/driver&gt;\n        &lt;url&gt;jdbc:postgresql_postGIS://localhost:5432/geonetwork&lt;/url&gt;\n        &lt;poolSize&gt;10&lt;/poolSize&gt;\n        &lt;validationQuery&gt;SELECT 1&lt;/validationQuery&gt;\n    &lt;/config&gt;\n&lt;/resource&gt;\n</code></pre> <p>The parameters that can be specified to control the Apache Database Connection Pool are described at http://commons.apache.org/dbcp/configuration.html. You can configure a subset of these parameters in your resource element. The parameters that can be specified are:</p> Parameter Description Default maxActive pool size/maximum number of active connections 10 maxIdle maximum number of idle connections maxActive minIdle minimum number of idle connections 0 maxWait number of milliseconds to wait for a connection to become available 200 validationQuery sql statement for verifying a connection, must return a least one row no default timeBetweenEvictionRunsMillis time between eviction runs (-1 means next three params are ignored) -1 testWhileIdle test connections when idle false minEvictableIdleTimeMillis idle time before connection can be evicted 30 x 60 x 1000 msecs numTestsPerEvictionRun number of connections tested per eviction run 3 maxOpenPreparedStatements number of sql statements that can be cached for reuse (-1 none, 0 unlimited) -1 defaultTransactionIsolation see http://en.wikipedia.org/wiki/Isolation_%28database_systems%29 READ_COMMITTED <p>For performance reasons you should set the following parameter after GeoNetwork has created and filled the database tables it has been configured to use:</p> <ul> <li>maxOpenPreparedStatements=\"300\" (at least)</li> </ul> <p>The following parameters are set by GeoNetwork and cannot be configured by the user:</p> <ul> <li>removeAbandoned - true</li> <li>removeAbandonedTimeout - 60 x 60 seconds = 1 hour</li> <li>logAbandoned - true</li> <li>testOnBorrow - true</li> <li>defaultReadOnly - false</li> <li>defaultAutoCommit - false</li> <li>initialSize - maxActive</li> <li>poolPreparedStatements - true, if maxOpenPreparedStatements &gt;= 0, otherwise false</li> </ul> <p>Note: Some firewalls kill idle connections to databases after say 1 hour (= 3600 secs). To keep idle connections alive by testing them with the validationQuery, set minEvictableIdleTimeMillis to something less than timeout, interval (eg. 2 mins = 120 secs = 120000 millisecs), set testWhileIdle to true and set timeBetweenEvictionRunsMillis and numTestsPerEvictionRun high enough to visit connections frequently eg 15 mins = 900 secs = 900000 millisecs and 4 connections per test. For example:</p> <pre><code>&lt;testWhileIdle&gt;true&lt;/testWhileIdle&gt;\n&lt;minEvictableIdleTimeMillis&gt;120000&lt;/minEvictableIdleTimeMillis&gt;\n&lt;timeBetweenEvictionRunsMillis&gt;900000&lt;/timeBetweenEvictionRunsMillis&gt;\n&lt;numTestsPerEvictionRun&gt;4&lt;/numTestsPerEvictionRun&gt;\n</code></pre> <p>Note:</p> <ul> <li>When GeoNetwork manages the database connection pool, PostGIS database is the only database that can hold the spatial index in the database. All other database choices hold the spatial index as a shapefile. If using PostGIS, two pools of database connections are created. The first is managed and configured using parameters in this section, the second is created by GeoTools and cannot be configured. This approach is now deprecated: if you want to use the database to hold the spatial index you should use the JNDI configuration described in the next section because it uses a single, configurable database pool through GeoTools as well as the more modern NG (Next Generation) GeoTools datastore factories.</li> <li>For more on transaction isolation see http://en.wikipedia.org/wiki/Isolation_%28database_systems%29.</li> </ul>"},{"location":"users/admin/advanced-configuration/#database-connection-pool-managed-by-the-container","title":"Database connection pool managed by the container","text":"<p>A typical configuration in the resources element of <code>INSTALL_DIR/web/geonetwork/WEB-INF/config.xml</code> uses the <code>jeeves.resources.dbms.JNDIPool</code> class and looks something like:</p> <pre><code>&lt;resource enabled=\"true\"&gt;\n    &lt;name&gt;main-db&lt;/name&gt;\n    &lt;provider&gt;jeeves.resources.dbms.JNDIPool&lt;/provider&gt;\n    &lt;config&gt;\n        &lt;context&gt;java:/comp/env&lt;/context&gt;\n        &lt;resourceName&gt;jdbc/geonetwork&lt;/resourceName&gt;\n        &lt;url&gt;jdbc:oracle:thin:@localhost:1521:XE&lt;/url&gt;\n        &lt;provideDataStore&gt;true&lt;/provideDataStore&gt;\n    &lt;/config&gt;\n&lt;/resource&gt;\n</code></pre> <p>The configuration parameters and their meanings are as follows:</p> Config Parameter Description context The name of the context from which to obtain the resource - almost always this is java:/comp/env resourceName The name of the resource in the context to use url The URL of the database - this is needed to let GeoTools know the database type provideDataStore If set to true then the database will be used for the spatial index, otherwise a shapefile will be used <p>The remainder of the configuration is done in the container context. eg. for tomcat this configuration is in conf/context.xml in the resource called jdbc/geonetwork. Here is an example for the Oracle database:</p> <pre><code>&lt;Resource name=\"jdbc/geonetwork\"\n    auth=\"Container\"\n    type=\"javax.sql.DataSource\"\n    username=\"system\"\n    password=\"oracle\"\n    factory=\"org.apache.commons.dbcp.BasicDataSourceFactory\"\n    driverClassName=\"oracle.jdbc.OracleDriver\"             \n    url=\"jdbc:oracle:thin:@localhost:1521:XE\"\n    maxActive=\"10\"\n    maxIdle=\"10\"\n    removeAbandoned=\"true\"\n    removeAbandonedTimeout=\"3600\"\n    logAbandoned=\"true\"\n    testOnBorrow=\"true\"\n    defaultAutoCommit=\"false\" \n    validationQuery=\"SELECT 1 FROM DUAL\"\n    accessToUnderlyingConnectionAllowed=\"true\"\n/&gt;\n</code></pre> <p>eg. for jetty, this configuration is in <code>INSTALL_DIR/web/geonetwork/WEB-INF/jetty-env.xml</code>. Here is an example for the Postgis database:</p> <pre><code>&lt;Configure class=\"org.eclipse.jetty.webapp.WebAppContext\"&gt;\n  &lt;New id=\"gnresources\" class=\"org.eclipse.jetty.plus.jndi.Resource\"&gt;\n    &lt;Arg&gt;&lt;/Arg&gt; \n    &lt;Arg&gt;jdbc/geonetwork&lt;/Arg&gt;\n    &lt;Arg&gt;\n      &lt;New class=\"org.apache.commons.dbcp.BasicDataSource\"&gt;\n        &lt;Set name=\"driverClassName\"&gt;org.postgis.DriverWrapper&lt;/Set&gt;\n        &lt;Set name=\"url\"&gt;jdbc:postgresql_postGIS://localhost:5432/gndb&lt;/Set&gt;\n        &lt;Set name=\"username\"&gt;geonetwork&lt;/Set&gt;\n        &lt;Set name=\"password\"&gt;geonetworkgn&lt;/Set&gt;\n        &lt;Set name=\"validationQuery\"&gt;SELECT 1&lt;/Set&gt;\n        &lt;Set name=\"maxActive\"&gt;10&lt;/Set&gt;\n        &lt;Set name=\"maxIdle\"&gt;10&lt;/Set&gt;\n        &lt;Set name=\"removeAbandoned\"&gt;true&lt;/Set&gt;\n        &lt;Set name=\"removeAbandonedTimeout\"&gt;3600&lt;/Set&gt;\n        &lt;Set name=\"logAbandoned\"&gt;true&lt;/Set&gt;\n        &lt;Set name=\"testOnBorrow\"&gt;true&lt;/Set&gt;\n        &lt;Set name=\"defaultAutoCommit\"&gt;false&lt;/Set&gt;\n        &lt;!-- 2=READ_COMMITTED, 8=SERIALIZABLE --&gt;\n        &lt;Set name=\"defaultTransactionIsolation\"&gt;2&lt;/Set&gt;\n        &lt;Set name=\"accessToUnderlyingConnectionAllowed\"&gt;true&lt;/Set&gt;\n      &lt;/New&gt;\n      &lt;/Arg&gt;\n    &lt;Call name=\"bindToENC\"&gt;\n      &lt;Arg&gt;jdbc/geonetwork&lt;/Arg&gt;  \n    &lt;/Call&gt;\n  &lt;/New&gt;\n&lt;/Configure&gt;\n</code></pre> <p>The parameters that can be specified to control the Apache Database Connection Pool used by the container are described at http://commons.apache.org/dbcp/configuration.html.</p> <p>The following parameters must be set to ensure GeoNetwork operates correctly:</p> Tomcat Syntax Jetty Syntax defaultAutoCommit=\"false\" false accessToUnderlyingConnectionAllowed=\"true\" true <p>For performance reasons you should set the following parameters after GeoNetwork has created and filled the database it has been configured to use:</p> Tomcat Syntax Jetty Syntax poolPreparedStatements=\"true\" true maxOpenPreparedStatements=\"300\" (at least) 300 <p>Notes:</p> <ul> <li>both PostGIS and Oracle will build and use a table in the database for the spatialindex if provideDataStore is set to true. Other databases could be made to do the same if a spatialindex table is created - see the definition for the spatialIndex table in <code>INSTALL_DIR/web/geonetwork/WEB-INF/classes/setup/sql/create/create-db-postgis.sql</code> for example.</li> <li>you should install commons-dbcp-1.3.jar and commons-pool-1.5.5.jar in the container class path (eg. <code>common/lib</code> for tomcat5 or <code>jetty/lib/ext</code> for Jetty) as the only supported DataSourceFactory in geotools is apache commons dbcp.</li> <li>the default tomcat-dbcp.jar version of apache commons dbcp for tomcat appears to work correctly for geotools and PostGIS but does not work for those databases that need to unwrap the connection in order to do spatial operations (eg. Oracle).</li> <li>Oracle ojdbc-14.jar or ojdbc5.jar or ojdbc6.jar (depending on the version of Java being used) and sdoapi.jar should also be installed in the container class path (for tomcat: <code>common/lib</code> or <code>ib</code> and for jetty: <code>jetty/lib/ext</code>).</li> <li>advanced: you should check the default transaction isolation level for your database driver. READ_COMMITTED appears to be a safe level of isolation to use with GeoNetwork for commonly used databases. Also note that McKoi can only support SERIALIZABLE (does anyone still use McKoi?). For more on transaction isolation see http://en.wikipedia.org/wiki/Isolation_%28database_systems%29.</li> </ul>"},{"location":"users/admin/advanced-configuration/#database_specific_issues","title":"Specific Database Issues","text":""},{"location":"users/admin/advanced-configuration/#oracle","title":"Oracle","text":"<p>ORACLE on Linux (x86_64): if your connection with the database takes a long time to establish or frequently times out then adding <code>-Djava.security.egd=file:/dev/../dev/urandom</code> to your JAVA_OPTS environment variable (for tomcat) or the start-geonetwork.sh script may help. For more information on this see https://kr.forums.oracle.com/forums/thread.jspa?messageID=3699989.</p> <p>ORACLE returns <code>ORA-01000: maximum open cursors exceeded</code> whilst filling the tables in a newly created GeoNetwork database. This occurs because you have enabled the prepared statement pool in either the container database configuration or the GeoNetwork database configuration in <code>WEB-INF/config.xml</code>. Until the database fill statements used by GeoNetwork are refactored, you will not be able to use a prepared statement cache with ORACLE if you are creating and filling a new GeoNetwork database so you should set the DBCP maxOpenPreparedStatements parameter to -1. However, after the database has been created and filled, you can use a prepared statement cache so, you should stop GeoNetwork and configure the prepared statement cache as described above before restarting.</p>"},{"location":"users/admin/advanced-configuration/#db2","title":"DB2","text":"<p>DB2 may produce an exception when GeoNetwork is started for the first time:</p> <pre><code>DB2 SQL error: SQLCODE: -805, SQLSTATE: 51002, SQLERRMC: NULLID.SYSLH203\n</code></pre> <p>There are two possible solutions to this problem:</p> <ul> <li>Setup the database manually using a procedure like the following:<pre><code>db2 create db geonet\ndb2 connect to geonet user db2inst1 using mypassword\ndb2 -tf INSTALL_DIR/WEB-INF/classes/setup/sql/create/create-db-db2.sql &gt; res1.txt\ndb2 -tf INSTALL_DIR/WEB-INF/classes/setup/sql/data/data-db-default.sql &gt; res2.txt\ndb2 connect reset\n</code></pre> </li> </ul> <p>After execution, check res1.txt and res2.txt if errors have occurred.</p> <ul> <li>Drop the database, re-create it, locate the file db2cli.lst in the db2 installation folder and execute the following command:<pre><code>db2 bind @db2cli.lst CLIPKG 30**\n</code></pre> </li> </ul>"},{"location":"users/admin/advanced-configuration/#adv_configuration_larger_catalogs","title":"Advanced configuration for larger catalogs","text":"<p>There are a number of steps you must consider if you are going to use GeoNetwork for catalogs with 20,000 or more metadata records:</p> <ol> <li> <p>Consider the hardware you have available GeoNetwork uses a database as a transactional store and does all metadata searches using Lucene. Lucene is very fast and scale for large catalogs if you supply fast disk (solid state disk is best by far), lots of memory/RAM (16Gb+) and multiple processors as part of a 64bit environment. Linux is probably the best operating system to take advantage of such an environment.</p> </li> <li> <p>Build the spatial index into your database ie. Use PostGIS (Postgres+PostGIS) or Oracle as your database GeoNetwork has to build a spatial index containing all metadata bounding boxes and polygons, in order to support spatial queries for the Catalog Services Web (CSW) interface eg. select all metadata records that intersect a search polygon. By default GeoNetwork uses a shapefile but the shapefile quickly becomes costly to maintain during reindexing usually after the number of records in the catalog exceeds 20,000. If you select PostGIS or Oracle as your database via JNDI (see previous section), GeoNetwork will build the spatial index in a table (called spatialindex). The spatialindex table in the database is much faster to reindex. But more importantly, if appropriate database hardware and configuration steps are taken, it should also be faster to query than the shapefile when the number of records in the catalog becomes very large.</p> </li> <li> <p>Consider the Java heap space Typically as much memory as you can give GeoNetwork is the answer here. If you have a 32bit machine then you are stuck below 2Gb (or maybe a little higher with some hacks). A 64bit machine is best for large catalogs. Jetty users can set the Java heap space in <code>INSTALL_DIR/bin/start-geonetwork.sh</code> (see the -Xmx option: eg. -Xmx4g will set the heap space to 4Gb on a 64bit machine). Tomcat users can set an environment variable JAVA_OPTS eg. export JAVA_OPTS=\"-Xmx4g\"</p> </li> <li> <p>Consider the number of processors you wish to allocate to GeoNetwork GeoNetwork 2.8 allows you to use more than one system processor (or core) to speed up reindexing and batch operations on large numbers of metadata records. The records to be processed are split into groups with each group assigned to an execution thread. You can specify how many threads can be used in the system configuration menu. A reasonable value for the number of threads is the number of processors or cores you have allocated to the GeoNetwork Java Virtual Machine (JVM) or just the number of processors on the machine that you have dedicated to GeoNetwork.</p> </li> <li> <p>Consider the number of database connections to be allocated to GeoNetwork GeoNetwork uses and reuses a pool of database connections. This is configured in <code>INSTALL_DIR/web/geonetwork/WEB-INF/config.xml</code> or in the container via JNDI. To arrive at a reasonable number for the pool size is not straight forward. You need to consider the number of concurrent harvesters you will run, the number of concurrent batch import and batch operations you expect to run and the number of concurrent users you are expecting to arrive. The default value of 10 is really only for small sites. The more connections you can allocate, the less time your users and other tasks will spend waiting for a free connection.</p> </li> <li> <p>Consider the maximum number of files your system will allow any process to have open Most operating systems will only allow a process to open a limited number of files. If you are expecting a large number of records to be in your catalog then you should change the default value to something larger (eg. 4096) as the lucene index in GeoNetwork will occasionally require large numbers of open files during reindexing. In Linux this value can be changed using the ulimit command (ulimit -a typically shows you the current setting). Find a value that suits your needs and add the appropriate ulimit command (eg. ulimit -n 4096) to the GeoNetwork startup script to make sure that the new limit is used when GeoNetwork is started.</p> </li> <li> <p>Raise the stack size limit for the postgres database Each process has some memory allocated as a stack. The stack is used to store process arguments and variables as well as state when functions are called. Most operating systems limit the size that the stack can grow to. With large catalogs and spatial searches, very large SQL queries can be generated on the PostGIS spatial index table. This can cause postgres to exceed the process stack size limit (typically 8192k on smaller machines). You will know when this happens because a very long SQL query will be output to the GeoNetwork log file prefixed with a cryptic message something along the lines of:</p> <pre><code>java.util.NoSuchElementException: Could not acquire \nfeature:org.geotools.data.DataSourceException: Error Performing SQL query: SELECT .........\n</code></pre> <p>In Linux the stack size can be changed using the ulimit command (ulimit -a typically shows you the current setting). You will need to choose a value and set it (eg. ulimit -s 262140) in the shell startup script of the postgres user (eg. .bashrc if using the bash shell). The setting may also need to be added to the postgres config - see \"max_stack_depth\" in the postgresql.conf file for your system. You may also have to enable to postgres user to change the stack size in <code>/etc/security/limits.conf</code>. After this has been done, restart postgres.</p> </li> <li> <p>If you need to support a catalog with more than 1 million records GeoNetwork creates a directory for each record that in turn contains a <code>ic</code> and a <code>te</code> directory for holding attached data and thumbnails. These directories are in the GeoNetwork <code>ta</code> directory - typically: <code>INSTALL_DIR/web/geonetwork/WEB-INF/data</code> - see <code>GeoNetwork data directory](index.rst#geonetwork_data_dir). This can exhaust the number of inodes available in a Linux file system (you will often see misleading error reports saying that the filesystem is 'out of space' - even though the filesystem may have lots of freespace). Check this using [df -i</code>. Since inodes are allocated statically when the filesystem is created for most common filesystems (including extfs4), it is rather inconvenient to have to backup all your data and recreate the filesystem! So if you are planning a large catalog with over 1 million records, make sure that you create a filesystem on your machine with the number of inodes set to at least 5x (and to be safe 10x) the number of records you are expecting to hold and let GeoNetwork create its <code>ta</code> directory on that filesystem.</p> </li> </ol>"},{"location":"users/admin/advanced-configuration/#geonetwork_data_dir","title":"GeoNetwork data directory","text":"<p>When customizing Geonetwork for a specific deployment server you need to be able to modify the configuration for that specific server. One way is to modify the configuration files within Geonetwork web application, however this is a problematic method because you essentially need either a different web application for each deployment target or need to patch each after deployment. Geonetwork provides two methods for addressing this issue</p> <ol> <li> <p>GeoNetwork data directory</p> </li> <li> <p>Configuration override files (See Configuration override)</p> </li> </ol> <p>The GeoNetwork data directory is the location on the file system where GeoNetwork stores much of its custom configuration. This configuration defines such things as: What thesaurus is used by GeoNetwork? What schema is plugged in GeoNetwork? The data directory also contains a number of support files used by GeoNetwork for various purposes (eg. Lucene index, spatial index, logos).</p> <p>It is a good idea to define an external data directory when going to production in order to make upgrade easier.</p>"},{"location":"users/admin/advanced-configuration/#creating-a-new-data-directory","title":"Creating a new data directory","text":"<p>The data directory needs to be created before starting the catalogue. It must be readable and writable by the user starting the catalogue. If the data directory is an empty folder, the catalogue will initialize the directory default structure. The easiest way to create a new data directory is to copy one that comes with a standard installation - you can find this in <code>INSTALL_DIR/web/geonetwork/WEB-INF/data</code>.</p>"},{"location":"users/admin/advanced-configuration/#setting-the-data-directory","title":"Setting the data directory","text":"<p>The data directory variable can be set using:</p> <ul> <li>Java environment variable</li> <li>Servlet context parameter</li> <li>System environment variable</li> </ul> <p>For java environment variable and servlet context parameter use:</p> <ul> <li>.dir and if not set using geonetwork.dir <p>For system environment variable use:</p> <ul> <li>_dir and if not set using geonetwork_dir <p>Resolution order is:</p> <ol> <li> <p><code>&lt;webappname&gt;.dir</code></p> </li> <li> <p>Java environment variable (ie. -D.dir=/a/data/dir) <li>Servlet context parameter (ie. web.xml)</li> <li>Config.xml appHandler parameter (ie. config.xml)</li> <li> <p>System environment variable (ie. _dir=/a/data/dir). \".\" is not supported in env variables <li> <p><code>geonetwork.dir</code></p> </li> <li> <p>Java environment variable (ie. -Dgeonetwork.dir=/a/data/dir)</p> </li> <li>Servlet context parameter (ie. web.xml)</li> <li>Config.xml appHandler parameter (ie. config.xml)</li> <li>System environment variable (ie. geonetwork_dir=/a/data/dir). \".\" is not supported in env variables</li>"},{"location":"users/admin/advanced-configuration/#java-system-property","title":"Java System Property","text":"<p>Depending on the servlet container used it is also possible to specify the data directory location with a Java System Property.</p> <p>For Tomcat, configuration is:</p> <pre><code>CATALINA_OPTS=\"-Dgeonetwork.dir=/var/lib/geonetwork_data\"\n</code></pre>"},{"location":"users/admin/advanced-configuration/#run-the-web-application-in-read-only-mode","title":"Run the web application in read-only mode","text":"<p>In order to run GeoNetwork with the webapp folder in read-only mode, the user needs to set two variables:</p> <ul> <li>.dir or geonetwork.dir for the data folder. <li>(optional) config overrides if configuration files need to be changed (See Configuration override).</li> <p>For Tomcat, configuration could be:</p> <pre><code>CATALINA_OPTS=\"-Dgeonetwork.dir=/var/lib/geonetwork_data -Dgeonetwork.jeeves.configuration.overrides.file=/var/lib/geonetwork_data/config/my-config.xml\"\n</code></pre>"},{"location":"users/admin/advanced-configuration/#structure-of-the-data-directory","title":"Structure of the data directory","text":"<p>The structure of the data directory is:</p> <pre><code>data_directory/\n |--data\n |   |--metadata_data: The data related to metadata records\n |   |--resources:\n |   |     |--htmlcache\n |   |     |--images\n |   |     |   |--harvesting\n |   |     |   |--logos\n |   |     |   |--statTmp\n |   |\n |   |--metadata_subversion: The subversion repository\n |\n |--config: Extra configuration (eg. could contain overrides)\n |   |--schemaplugin-uri-catalog.xml\n |   |--codelist: The thesauri in SKOS format\n |   |--schemaPlugins: The directory used to store new metadata standards\n |\n |--index: All indexes used for search\n |   |--nonspatial: Lucene index\n |   |--spatialindex.*: ESRI Shapefile for the index (if not using spatial db)\n | \n |--removed: Folder with removed metadata.\n</code></pre>"},{"location":"users/admin/advanced-configuration/#advanced-data-directory-configuration","title":"Advanced data directory configuration","text":"<p>All sub-directories could be configured separately using java system property. For example, to put index directory in a custom location use:</p> <ul> <li>.lucene.dir and if not set using: <li>geonetwork.lucene.dir</li> <p>Example:</p> <ul> <li> <p>Add the following java properties to start-geonetwork.sh script:</p> <p>java -Xms48m -Xmx512m -Xss2M -XX:MaxPermSize=128m -Dgeonetwork.dir=/app/geonetwork_data_dir -Dgeonetwork.lucene.dir=/ssd/geonetwork_lucene_dir</p> </li> <li> <p>Add the following system properties to start-geonetwork.sh script:</p> </li> </ul>"},{"location":"users/admin/advanced-configuration/#set-custom-data-directory-location-using-system-property","title":"Set custom data directory location using system property","text":"<p>export geonetwork_dir=/app/geonetwork_data_dir export geonetwork_lucene_dir=/ssd/geonetwork_lucene_dir</p>"},{"location":"users/admin/advanced-configuration/#system-information","title":"System information","text":"<p>All catalogue configuration directory can be found using the <code>System Information</code> in the <code>Administration</code> page.</p> <p></p>"},{"location":"users/admin/advanced-configuration/#other-system-properties","title":"Other system properties","text":"<p>In Geonetwork there are several system properties that can be used to configure different aspects of Geonetwork. When a webcontainer is started the properties can be set. For example in Tomcat one can set either JAVA_OPTS or CATALINA_OPTS with -D=. <ul> <li>.jeeves.configuration.overrides.file - See Configuration override <li>jeeves.configuration.overrides.file - See Configuration override</li> <li>mime-mappings - mime mappings used by jeeves for generating the response content type</li> <li>http.proxyHost - The internal geonetwork Http proxy uses this for configuring how it can access the external network (Note for harvesters there is also a setting in the Settings page of the administration page)</li> <li>http.proxyPort - The internal geonetwork Http proxy uses this for configuring how it can access the external network (Note for harvesters there is also a setting in the Settings page of the administration page)</li> <li>geonetwork.sequential.execution - (true,false) Force indexing to occur in current thread rather than being queued in the ThreadPool. Good for debugging issues.</li> <p>There is a usecase where multiple geonetwork instances might be ran in the same webcontainer, because of this many of the system properties listed above have . When declaring the property this should be replaced with the webapp name the setting applies to. Typically this will be geonetwork."},{"location":"users/admin/advanced-configuration/#adv_configuration_overriddes","title":"Configuration override","text":"<p>Configuration override files allow nearly complete access to all the configuration allowing nearly any configuration parameter to be overridden for a particular deployment target. The concept behind configuration overrides is to have the basic configuration set in the geonetwork webapplication, the application is deployed and a particular set of override files are used for the deployment target. The override files only have the settings that need to be different for the deployment target, alleviating the need to deploy and edit the configuration files or have a different web application per deployment target.</p> <p>Configuration override files are also useful for forked Geonetwork applications that regularly merge the changes from the true Geonetwork code base.</p> <p>A common scenario is to have test and production instances with different configurations. In both configurations 90% of the configuration is the same but certain parts need to be updated.</p> <p>An override file to be specified as a system property or as a servlet init parameter: jeeves.configuration.overrides.file.</p> The order of resolution is: <ul> <li>System property with key: {servlet.getServletContext().getServletContextName()}.jeeves.configuration.overrides.file</li> <li>Servlet init parameter with key: jeeves.configuration.overrides.file</li> <li>System property with key: jeeves.configuration.overrides.file</li> <li>Servlet context init parameters with key: jeeves.configuration.overrides.file</li> </ul> The property should be a path or a URL. The method used to find a overrides file is as follows: <ol> <li>It is attempted to be used as a URL. if an exception occurs the next option is tried</li> <li>It is assumed to be a path and uses the servlet context to look up the resources. If it can not be found the next option is tried</li> <li>It is assumed to be a file. If the file is not found then an exception is thrown</li> </ol> <p>An example of a overrides file is as follows:</p> <pre><code>&lt;overrides&gt;\n    &lt;!-- import values.  The imported values are put at top of sections --&gt;\n    &lt;import file=\"./imported-config-overrides.xml\" /&gt;\n     &lt;!-- properties allow some properties to be defined that will be substituted --&gt;\n     &lt;!-- into text or attributes where ${property} is the substitution pattern --&gt;\n     &lt;!-- The properties can reference other properties --&gt;\n     &lt;properties&gt;\n         &lt;enabled&gt;true&lt;/enabled&gt;\n         &lt;dir&gt;xml&lt;/dir&gt;\n         &lt;aparam&gt;overridden&lt;/aparam&gt;\n     &lt;/properties&gt;\n     &lt;!-- A regular expression for matching the file affected. --&gt;\n     &lt;file name=\".*WEB-INF/config\\.xml\"&gt;\n         &lt;!-- This example will update the file attribute of the xml element with the name attribute 'countries' --&gt;\n         &lt;replaceAtt xpath=\"default/gui/xml[@name = 'countries']\" attName=\"file\" value=\"${dir}/europeanCountries.xml\"/&gt;\n         &lt;!-- if there is no value then the attribute is removed --&gt;\n         &lt;replaceAtt xpath=\"default/gui\" attName=\"removeAtt\"/&gt;\n         &lt;!-- If the attribute does not exist it is added --&gt;\n         &lt;replaceAtt xpath=\"default/gui\" attName=\"newAtt\" value=\"newValue\"/&gt;\n\n         &lt;!-- This example will replace all the xml in resources with the contained xml --&gt;\n         &lt;replaceXML xpath=\"resources\"&gt;\n           &lt;resource enabled=\"${enabled}\"&gt;\n             &lt;name&gt;main-db&lt;/name&gt;\n             &lt;provider&gt;jeeves.resources.dbms.DbmsPool&lt;/provider&gt;\n              &lt;config&gt;\n                  &lt;user&gt;admin&lt;/user&gt;\n                  &lt;password&gt;admin&lt;/password&gt;\n                  &lt;driver&gt;oracle.jdbc.driver.OracleDriver&lt;/driver&gt;\n                  &lt;!-- ${host} will be updated to be local host --&gt;\n                  &lt;url&gt;jdbc:oracle:thin:@${host}:1521:fs&lt;/url&gt;\n                  &lt;poolSize&gt;10&lt;/poolSize&gt;\n              &lt;/config&gt;\n           &lt;/resource&gt;\n         &lt;/replaceXML&gt;\n         &lt;!-- This example simple replaces the text of an element --&gt;\n         &lt;replaceText xpath=\"default/language\"&gt;${lang}&lt;/replaceText&gt;\n         &lt;!-- This examples shows how only the text is replaced not the nodes --&gt;\n         &lt;replaceText xpath=\"default/gui\"&gt;ExtraText&lt;/replaceText&gt;\n         &lt;!-- append xml as a child to a section (If xpath == \"\" then that indicates the root of the document),\n              this case adds nodes to the root document --&gt;\n         &lt;addXML xpath=\"\"&gt;&lt;newNode/&gt;&lt;/addXML&gt;\n         &lt;!-- append xml as a child to a section, this case adds nodes to the root document --&gt;\n         &lt;addXML xpath=\"default/gui\"&gt;&lt;newNode2/&gt;&lt;/addXML&gt;\n         &lt;!-- remove a single node --&gt;\n         &lt;removeXML xpath=\"default/gui/xml[@name = countries2]\"/&gt;\n         &lt;!-- The logging files can also be overridden, although not as easily as other files.  \n              The files are assumed to be property files and all the properties are loaded in order.  \n              The later properties overriding the previously defined parameters. Since the normal\n              log file is not automatically located, the base must be also defined.  It can be the once\n              shipped with geonetwork or another. --&gt;\n         &lt;logging&gt;\n             &lt;logFile&gt;/WEB-INF/log4j.cfg&lt;/logFile&gt;\n             &lt;logFile&gt;/WEB-INF/log4j-jeichar.cfg&lt;/logFile&gt;\n         &lt;/logging&gt;\n     &lt;/file&gt;\n     &lt;file name=\".*WEB-INF/config2\\.xml\"&gt;\n         &lt;replaceText xpath=\"default/language\"&gt;de&lt;/replaceText&gt;\n     &lt;/file&gt;\n     &lt;!-- a normal file tag is for updating XML configuration files --&gt;\n     &lt;!-- textFile tags are for updating normal text files like sql files --&gt;\n     &lt;textFile name=\"test-sql.sql\"&gt;\n         &lt;!-- each line in the text file is matched against the linePattern attribute and the new value is used for substitution --&gt;\n         &lt;update linePattern=\"(.*) Relations\"&gt;$1 NewRelations&lt;/update&gt;\n         &lt;update linePattern=\"(.*)relatedId(.*)\"&gt;$1${aparam}$2&lt;/update&gt;\n     &lt;/textFile&gt;\n    &lt;!-- configure the spring aspects of geonetwork --&gt;\n    &lt;spring&gt;\n      &lt;!-- import a complete spring xml file --&gt;\n      &lt;import file=\"./config-spring-overrides.xml\"/&gt;\n      &lt;!-- declare a file as a spring properties override file: See http://static.springsource.org/spring/docs/3.0.x/api/org/springframework/beans/factory/config/PropertyOverrideConfigurer.html --&gt;\n      &lt;propertyOverrides file=\"./config-property-overrides.properties\" /&gt;\n      &lt;!-- set a property on one bean to reference another bean --&gt;\n      &lt;set&gt;beanName.propertyName=beanName&lt;/set&gt;\n      &lt;!-- add a references to a bean to a property on another bean.  This assumes the property is a collection --&gt;\n      &lt;add&gt;beanName.propertyName=beanName&lt;/add&gt;\n    &lt;/spring&gt;\n &lt;/overrides&gt;\n</code></pre>"},{"location":"users/admin/advanced-configuration/#adv_configuration_lucene","title":"Lucene configuration","text":"<p>Lucene is the search engine used by GeoNetwork. All Lucene configuration is defined in WEB-INF/config-lucene.xml.</p>"},{"location":"users/admin/advanced-configuration/#add-a-search-field","title":"Add a search field","text":"<p>Indexed fields are defined on a per schema basis on the schema folder (eg. xml/schemas/iso19139) in index-fields.xsl file. This file define for each search criteria the corresponding element in a metadata record. For example, indexing the title of an ISO19139 record:</p> <pre><code>&lt;xsl:for-each select=\"gmd:identificationInfo/gmd:MD_DataIdentification/\n                       gmd:citation/gmd:CI_Citation/\n                       gmd:title/gco:CharacterString\"&gt;\n    &lt;Field name=\"mytitle\" string=\"{string(.)}\" store=\"true\" index=\"true\"/&gt;\n&lt;/xsl:for-each&gt;\n</code></pre> <p>Usually, if the field is only for searching and should not be displayed in search results the store attribute could be set to false.</p> <p>Once the field added to the index, user could query using it as a search criteria in the different kind of search services. For example using:</p> <pre><code>http://localhost:8080/geonetwork/srv/en/q?mytitle=africa\n</code></pre> <p>If user wants this field to be tokenized, it should be added to the tokenized section of config-lucene.xml:</p> <pre><code>&lt;tokenized&gt;\n  &lt;Field name=\"mytitle\"/&gt;\n</code></pre> <p>If user wants this field to be returned in search results for the search service, then the field should be added to the Lucene configuration in the dumpFields section:</p> <pre><code>&lt;dumpFields&gt;\n  &lt;field name=\"mytitle\" tagName=\"mytitle\"/&gt;\n</code></pre>"},{"location":"users/admin/advanced-configuration/#boosting-documents-and-fields","title":"Boosting documents and fields","text":"<p>Document and field boosting allows catalogue administrator to be able to customize default Lucene scoring in order to promote certain types of records.</p> <p>A common use case is when the catalogue contains lot of series for aggregating datasets. Not promoting the series could make the series \"useless\" even if those records contains important content. Boosting this type of document allows to promote series and guide the end-user from series to related records (through the relation navigation).</p> <p>In that case, the following configuration allows boosting series and minor importance of records part of a series:</p> <pre><code>&lt;boostDocument name=\"org.fao.geonet.kernel.search.function.ImportantDocument\"&gt;\n  &lt;Param name=\"fields\" type=\"java.lang.String\" value=\"type,parentUuid\"/&gt;\n  &lt;Param name=\"values\" type=\"java.lang.String\" value=\"series,NOTNULL\"/&gt;\n  &lt;Param name=\"boosts\" type=\"java.lang.String\" value=\".2F,-.3F\"/&gt;\n&lt;/boostDocument&gt;\n</code></pre> <p>The boost is a positive or negative float value.</p> <p>This feature has to be used by expert users to alter default search behavior scoring according to catalogue content. It needs tuning and experimentation to not promote too much some records. During testing, if search results looks different while being logged or not, it could be relevant to ignore some internal fields in boost computation which may alter scoring according to current user. Example configuration:</p> <pre><code>&lt;fieldBoosting&gt;\n  &lt;Field name=\"_op0\" boost=\"0.0F\"/&gt;\n  &lt;Field name=\"_op1\" boost=\"0.0F\"/&gt;\n  &lt;Field name=\"_op2\" boost=\"0.0F\"/&gt;\n  &lt;Field name=\"_dummy\" boost=\"0.0F\"/&gt;\n  &lt;Field name=\"_isTemplate\" boost=\"0.0F\"/&gt;\n  &lt;Field name=\"_owner\" boost=\"0.0F\"/&gt;\n&lt;/fieldBoosting&gt;\n</code></pre>"},{"location":"users/admin/advanced-configuration/#boosting-search-results","title":"Boosting search results","text":"<p>By default Lucene compute score according to search criteria and the corresponding result set and the index content. In case of search with no criteria, Lucene will return top docs in index order (because none are more relevant than others).</p> <p>In order to change the score computation, a boost function could be define. Boosting query needs to be loaded in classpath. A sample boosting class is available. RecencyBoostingQuery will promote recently modified documents:</p> <pre><code>&lt;boostQuery name=\"org.fao.geonet.kernel.search.function.RecencyBoostingQuery\"&gt;\n  &lt;Param name=\"multiplier\" type=\"double\" value=\"2.0\"/&gt;\n  &lt;Param name=\"maxDaysAgo\" type=\"int\" value=\"365\"/&gt;\n  &lt;Param name=\"dayField\" type=\"java.lang.String\" value=\"_changeDate\"/&gt;\n&lt;/boostQuery&gt;\n</code></pre>"},{"location":"users/admin/advanced-configuration/#faceted-search-configuration","title":"Faceted search configuration","text":"<p>Faceted search provides a way to easily filter search:</p> <p></p> <p>In WEB-INF/config-summary.xml, catalogue administrator can configure the faceted search displayed in the search page.</p> <p>In the hits section, new facet could be added:</p> <pre><code>&lt;hits&gt;\n  &lt;item name=\"keyword\" plural=\"keywords\" indexKey=\"keyword\" max=\"15\"/&gt;\n</code></pre> <p>An item element defines a facet with the following parameters:</p> <ul> <li>name: the name of the facet (ie. the tag name in the XML response)</li> <li>plural: the plural for the name (ie. the parent tag of each facet values)</li> <li>indexKey: the name of the field in the index</li> <li>(optional) sortBy: the ordering for the facet. Defaults is by count.</li> <li>(optional) sortOrder: asc or desc. Defaults is descendant.</li> <li>(optional) max: the number of values to be returned for the facet. Defaults is 10.</li> </ul> <p>When an item is modified or added, reload the lucene configuration and rebuild the index from the administration panel.</p> <p>For easier update, config overrides could be used to modify the config-summary file (See Configuration override).</p>"},{"location":"users/admin/advanced-configuration/#character-set","title":"Character Set","text":"<p>By default the character set of geonetwork is UTF-8. This works well for many locales in the world and is compatible with ASCII that is typically used in US and Canada. However, if UTF-8 is not a compatible characterset in your environment you can change the default.</p> <p>To change it within GeoNetwork simply start the application with the system property geonetwork.file.encoding set to the desired character set name.</p> <p>For example if you are running tomcat you can set</p> <p>JAVA_OPTS=\"-Dgeonetwork.file.encoding=UTF-16\"</p> <p>to the startup script and the default codec in Geonetwork will be UTF-16.</p> <p>It is also recommended to set the file.encoding parameter to the same codec as this dictates to the default encoding used in Java and the Web Server may reference at times use the default codec.</p> <p>Finally, by default the URL parameters are typically interpretted as ASCII characters which can be a problem when searching for metadata that are not in the english language. Each Web Server will have a method for configuring the encoding used when reading the parameters. For example, in Tomcat the encoding/charset configuration is in the server.xml Connector element.</p>"},{"location":"users/admin/authentication/","title":"Authentication","text":"<p>In this section you define the source against which the catlaog will authenticate users and passwords.</p> <p>By default, users are authenticated against info held in the catalog database. When the catalog database is used as the authentication source, the user self-registration function can be enabled. A later section (see User Self-Registration) discusses user self-registration and the configuration options it requires.</p> <p>You may choose to authenticate logins against either the catalog database tables or LDAP (the lightweight directory access protocol) or both. The next section describes how to authenticate against the different authentication providers:</p> <p>In addition to either of these options, you may also configure other authentication sources. At present, Shibboleth is one additional authentication source that can be configured. Shibboleth is typically used for national access federations such as the Australian Access Federation. Configuring shibboleth authentication in the catalog to use such a federation would allow not only users from a local database or LDAP directory to use your installation, but any user from such a federation.</p> <p>Authentication is using Spring Security framework and could support multiple authentication providers.</p> <p>Authentication configuration is defined in WEB-INF/config-security.properties file. When making a change to that configuration file, the catalog need to be restarted to take parameters into account.</p>"},{"location":"users/admin/authentication/#authentication_ldap","title":"LDAP","text":""},{"location":"users/admin/authentication/#connection-settings","title":"Connection Settings","text":"<p>To enable LDAP support:</p> <ol> <li> <p>add the LDAP base URL property in config-security.properties:</p> <pre><code># LDAP security properties\nldap.base.provider.url=ldap://localhost:389\nldap.base.dn=dc=fao,dc=org\nldap.security.principal=cn=admin,dc=fao,dc=org\nldap.security.credentials=ldap\n</code></pre> <ul> <li>ldap.base.provider.url: This tells the portal where the LDAP server is located. Make sure that the computer with the catalog can hit the computer with the LDAP server. Check to make sure that the appropriate ports are opened, etc.</li> <li>ldap.base.dn=dc=fao,dc=org: this will usually look something like: \"dc=organizationnamehere,dc=org\"</li> <li>ldap.security.principal &amp; ldap.security.credentials: Define LDAP administrator user to use to bind to LDAP. If not define, an anonymous bind is made. Principal is the username and credentials property the password.</li> <li>To verify that you have the correct settings, try to connect to the LDAP server using an LDAP browser application.</li> </ul> </li> <li> <p>define where to find users in LDAP structure for authentication:</p> <pre><code>ldap.base.search.base=ou=people\nldap.base.dn.pattern=uid={0},${ldap.base.search.base}\n#ldap.base.dn.pattern=mail={0},${ldap.base.search.base}\n</code></pre> <ul> <li>ldap.base.search.base: this is where the catalog will look for users (for authentication)</li> <li>ldap.base.dn.pattern: this is the distinguished name for the user to bind with. {0} is replaced by the user name typed in the sign in screen.</li> </ul> </li> <li> <p>add the following import to config-security.xml:</p> <pre><code>&lt;import resource=\"config-security-ldap.xml\"/&gt;\n</code></pre> </li> </ol>"},{"location":"users/admin/authentication/#authorization-settings","title":"Authorization Settings","text":"<p>When using LDAP, user information and privileges could be defined from the LDAP attributes.</p>"},{"location":"users/admin/authentication/#user-details","title":"User details","text":"<p>All user informations could be retrieved from the LDAP as defined in the config-security-overrides.properties. This property file defined for each user attribute in the catalog database which LDAP attributes match. If the attribute is empty or not defined, a default value could be defined. The configuration is the following:</p> <pre><code># Map user information to LDAP attributes and default values\n# ldapUserContextMapper.mapping[name]=ldap_attribute,default_value\nldapUserContextMapper.mapping[name]=cn,\nldapUserContextMapper.mapping[surname]=givenName,\nldapUserContextMapper.mapping[mail]=mail,data@myorganization.org\nldapUserContextMapper.mapping[organisation]=,myorganization\nldapUserContextMapper.mapping[kind]=,\nldapUserContextMapper.mapping[address]=,\nldapUserContextMapper.mapping[zip]=,\nldapUserContextMapper.mapping[state]=,\nldapUserContextMapper.mapping[city]=,\nldapUserContextMapper.mapping[country]=,\n</code></pre>"},{"location":"users/admin/authentication/#privileges-configuration","title":"Privileges configuration","text":"<p>When using LDAP, user groups and user profiles could be set from LDAP information or not. To manage user privileges from the local database, set the ldap.privilege.import property in config-security.properties to false:</p> <pre><code>ldap.privilege.import=false\n</code></pre> <p>If LDAP information should be used to define user privileges, set it to true:</p> <pre><code>ldap.privilege.import=true\n</code></pre> <p>When importing privileges from LDAP, the catalog administrator could decide to create groups defined in the LDAP and not defined in local database. For this set the following property to true:</p> <pre><code>ldap.privilege.create.nonexisting.groups=false\n</code></pre>"},{"location":"users/admin/authentication/#simple-privileges-configuration","title":"Simple privileges configuration","text":"<p>In order to define which groups the user is member of and which profile is the user:</p> <pre><code>ldapUserContextMapper.mapping[privilege]=groups,sample\n# If not set, the default profile is RegisteredUser\n# Valid profiles are http://geonetwork-opensource.org/manuals/trunk/eng/developer/apidocs/geonetwork/org/fao/geonet/constants/Geonet.Profile.html\nldapUserContextMapper.mapping[profile]=privileges,RegisteredUser\n</code></pre> <p>Attributes configuration:</p> <ul> <li>privilege attribute contains the group this user is member of. More than one group is allowed.</li> <li>profile attribute contains the profile of the user</li> </ul> <p>User valid profiles are:</p> <ul> <li>Administrator</li> <li>UserAdmin</li> <li>Reviewer</li> <li>Editor</li> <li>RegisteredUser</li> <li>Guest</li> </ul>"},{"location":"users/admin/authentication/#profile-mapping-configuration","title":"Profile mapping configuration","text":"<p>If LDAP attribute containing profiles does not match the catalog profile list, a mapping could be defined in config-security-overrides.properties:</p> <pre><code># Map LDAP custom profiles to catalog profiles. Not used if ldap.privilege.pattern is defined.\nldapUserContextMapper.profilMapping[Admin]=Administrator\nldapUserContextMapper.profilMapping[Editeur]=Reviewer\nldapUserContextMapper.profilMapping[Public]=RegisteredUser\n</code></pre> <p>For example, in the previous configuration, the attribute value Admin will be mapped to Administrator (which is a valid profile for the catalog).</p>"},{"location":"users/admin/authentication/#advanced-privileges-configuration","title":"Advanced privileges configuration","text":"<p>An attribute could define both the profile and the group for a user. To extract this information, a custom pattern could be defined to populate user privileges according to that attribute:</p> <pre><code># In config-security-overrides.properties\nldapUserContextMapper.mapping[privilege]=cat_privileges,sample\n\n# In config-security.properties\nldap.privilege.pattern=CAT_(.*)_(.*)\nldap.privilege.pattern.idx.group=1\nldap.privilege.pattern.idx.profil=2\n</code></pre> <p>The LDAP attribute can contains the following configuration to define the different type of users:</p> <pre><code>-- Define a catalog admin:\ncat_privileges=CAT_ALL_Administrator\n\n-- Define a reviewer for the group GRANULAT\ncat_privileges=CAT_GRANULAT_Reviewer\n\n-- Define a reviewer for the group GRANULAT and editor for MIMEL\ncat_privileges=CAT_GRANULAT_Reviewer\ncat_privileges=CAT_MIMEL_Editor\n\n-- Define a reviewer for the group GRANULAT and editor for MIMEL and RegisteredUser for NATURA2000\ncat_privileges=CAT_GRANULAT_Reviewer\ncat_privileges=CAT_MIMEL_Reviewer\ncat_privileges=CAT_NATURA2000_RegisterdUser\n\n-- Only a registered user for GRANULAT\ncat_privileges=CAT_GRANULAT_RegisteredUser\n</code></pre>"},{"location":"users/admin/authentication/#synchronization","title":"Synchronization","text":"<p>A synchronization task is taking care of removing LDAP user which may be deleted. For example:</p> <ul> <li>T0: a user A sign in the catalog. A local user A is created in the user database</li> <li>T1: A is deleted from the LDAP (A could not sign in in the catalog anymore)</li> <li>T2: the synchronization task will check that all local LDAP users exist in LDAP:<ul> <li>if user is not owner of any records, it will be deleted</li> <li>if user is owner of metadata records, warning message is avaialable on the catalog logging system. record's owner should be changed to another user before the task could remove the user.</li> </ul> </li> </ul> <p>By default the task is runned once every day. Configuration could be changed in config-security.properties:</p> <pre><code># Run LDAP sync every day at 23:30\nldap.sync.cron=0 30 23 * * ?\n</code></pre>"},{"location":"users/admin/authentication/#debugging","title":"Debugging","text":"<p>If connection fails, try to increase logging for LDAP in log4j.cfg:</p> <pre><code>log4j.logger.geonetwork.ldap          = DEBUG\nlog4j.logger.org.springframework = DEBUG, console, jeeves\nlog4j.logger.org.springframework.* = DEBUG\nlog4j.logger.org.springframework.security.ldap = DEBUG\n</code></pre>"},{"location":"users/admin/authentication/#authentication_cas","title":"CAS","text":"<p>To enable CAS support:</p> <ol> <li> <p>add the CAS base URL property in config-security.properties:</p> <pre><code>cas.baseURL=https://localhost:8443/cas\ncas.ticket.validator.url=${cas.baseURL}\ncas.login.url=${cas.baseURL}/login\ncas.logout.url=${cas.baseURL}/logout?url=${geonetwork.https.url}/\n</code></pre> </li> <li> <p>add the following import to config-security.xml:</p> <pre><code>&lt;import resource=\"config-security-cas.xml\"/&gt;\n&lt;import resource=\"config-security-cas-ldap.xml\"/&gt;\n</code></pre> </li> </ol>"},{"location":"users/admin/authentication/#authentication_shibboleth","title":"Shibboleth authentication","text":"<p>When using either the GeoNetwork database or LDAP for authentication, you can also configure shibboleth to allow authentication against access federations.</p> The Shibboleth configuration options <p>Shibboleth authentication requires interaction with Apache web server. In particular, the apache web server must be configured to require Shibboleth authentication to access the path entered in the configuration. The apache web server configuration will contain the details of the shibboleth server that works out where a user is located (sometimes called a 'where are you from' server).</p> <p>The remainder of the shibboleth login configuration describes how shibboleth authentication attributes are mapped to GeoNetwork user database fields as once a user is authenticated against shibboleth, their details are copied to the local GeoNetwork database.</p>"},{"location":"users/admin/authentication/#authentication_self_register","title":"User Self-Registration","text":"<p>From Administration, system configuration, GeoNetwork has a self-registration function which allows a user to request a login which provides access to 'registered-user' functions. By default this capability is switched off. To configure this capability you must complete the following sections in the 'System configuration' menu:</p> <ul> <li>configure the site name and organization name as these will be used in emails from this GeoNetwork site to newly registered users. An example of how to config these fields at the top of the system configuration form is:</li> </ul> <p></p> <ul> <li>configure feedback email address, SMTP host and SMTP port. The feedback email address will be sent an email when a new user registers and requests a profile other than 'Registered User'. An example of how to config these fields in the system configuration form is:</li> </ul> <p></p> <ul> <li>check the box, enable user self-registration in the Authentication section of the system configuration form as follows:</li> </ul> <p></p> <p>When you save the system configuration form, return to the home page and log out as admin, your banner menu should now include two new options, 'Forgot your password?' and 'Register' (or their translations into your selected language) as follows:</p> <p></p> <p>You should also configure the xml file that includes contact details to be displayed when an error occurs in the registration process. This file is localized - the english version is located in INSTALL_DIR/web/geonetwork/loc/en/xml/registration-sent.xml.</p> <p>Finally, if you want to change the content of the email that contains registration details for new users, you should modify INSTALL_DIR/web/geonetwork/xsl/registration-pwd-email.xsl.</p>"},{"location":"users/admin/configuration/","title":"System configuration","text":"<p>Many GeoNetwork System configuration parameters can be changed using the web interface. Database parameters can be changed using the GAST application.</p> <p>Important</p> <p>Configuration of these parameters is critically important for for a GeoNetwork catalogue in an operational context. Misunderstanding these settings may result in a system that does not function as expected. For example, downloads may fail to be correctly processed, or metadata harvesting from other servers may not work.</p> <p>To get to the System configuration parameters, you must be logged on as administrator first. Open the Administration page and select System configuration (The link is inside the red ellipse).</p> <p>Important</p> <p>New installations of GeoNetwork use admin for both username and password. It is important to change the password using the links in the Administration page the first time you log on!</p> The link to the System configuration page <p>Clicking the link bring up the system configuration menu. A detailed description of these parameters follows.</p> The configuration options - part 1 The configuration options - part 2 The configuration options - part 3 <p>Note: at the bottom of the page (you will need to scroll down) there are three buttons with the following purpose:</p> <ul> <li>Back Simply returns to the main administration page, ignoring any changes you may have made.</li> <li>Save Saves the current options. If some options are invalid, the system will show a dialogue with the wrong parameter and will focus its text field on the page. Once the configuration is saved a success dialogue will be shown.</li> <li>Refresh Reads the settings from the database again and refreshes the options with those values.</li> </ul>"},{"location":"users/admin/configuration/#site-parameters","title":"Site parameters","text":"<p>Catalogue identifier A universally unique identifier (uuid) that distinguishes your catalogue from any other catalogue. This a unique identifier for your catalogue and its best to leave it as a uuid.</p> <p>Name The name of the GeoNetwork node. Information that helps identify the catalogue to a human user.</p> <p>Organization The organization the node belongs to. Again, this is information that helps identify the catalogue to a human user.</p>"},{"location":"users/admin/configuration/#server-parameters","title":"Server parameters","text":"<p>Here you have to enter the details of the web address of your GeoNetwork node. This address is important because it will be used to build addresses that access services and data on the GeoNetwork node. In particular:</p> <ol> <li>building links to data file uploaded with a metadata record in the editor.</li> <li>when the OGC CSW server is asked to describe its capabilities. The GetCapabilities operation returns an XML document with HTTP links to the CSW services provided by the server. These links are dynamically built using the host and port values.</li> </ol> <p>Protocol The HTTP protocol used to access the server. Choosing http means that all communication with GeoNetwork will be visible to anyone listening to the protocol. Since this includes usernames and passwords this is not secure. Choosing https means that all communication with GeoNetwork will be encrypted and thus much harder for a listener to decode.</p> <p>Host The node's address or IP number. If your node is publicly accessible from the Internet, you have to use the domain name. If your node is hidden inside your private network and you have a firewall or web server that redirects incoming requests to the node, you have to enter the public address of the firewall or web server. A typical configuration is to have an Apache web server on address A that is publicly accessible and redirects the requests to a Tomcat server on a private address B. In this case you have to enter A in the host parameter.</p> <p>Port The node's port (usually 80 or 8080). If the node is hidden, you have to enter the port on the public firewall or web server.</p>"},{"location":"users/admin/configuration/#intranet-parameters","title":"Intranet Parameters","text":"<p>A common need for an organisation is to automatically discriminate between anonymous internal users that access the node from within an organisation (Intranet) and anonymous external users from the Internet. GeoNetwork defines anonymous users from inside the organisation as belonging to the group Intranet, while anonymous users from outside the organisation are defined by the group All. To automatically distinguish users that belong to the Intranet group you need to tell GeoNetwork the intranet IP address and netmask.</p> <p>Network The intranet address in IP form (eg. 147.109.100.0).</p> <p>Netmask The intranet netmask (eg. 255.255.255.0).</p>"},{"location":"users/admin/configuration/#metadata-search-results","title":"Metadata Search Results","text":"<p>Configuration settings in this group determine what the limits are on user interaction with the search results.</p> <p>Maximum Selected Records The maximum number of search results that a user can select and process with the batch operations eg. Set Privileges, Categories etc.</p>"},{"location":"users/admin/configuration/#multi-threaded-indexing","title":"Multi-Threaded Indexing","text":"<p>Configuration settings in this group determine how many processor threads are allocated to indexing tasks in GeoNetwork. If your machine has many processor cores, you can now determine how many to allocate to GeoNetwork indexing tasks. This can bring dramatic speed improvements on large indexing tasks (eg. changing the privileges on 20,000 records) because GeoNetwork can split the indexing task into a number of pieces and assign them to different processor cores.</p> <p>Number of processing threads The maximum number of processing threads that can be allocated to an indexing task.</p> <p>Note: this option is only available for databases that have been tested. Those databases are PostGIS and Oracle. You should also carefully consider how many connections to the database you allocate in the database configuration as each thread could tie up one database connection for the duration of a long indexing session (for example). See Advanced configuration for more details of how to configure the number of connections in the database connection pool.</p>"},{"location":"users/admin/configuration/#lucene-index-optimizer","title":"Lucene Index Optimizer","text":"<p>Configuration settings in this group determine when the Lucene Index Optimizer is run. By default, this takes place at midnight each day. With recent upgrades to Lucene, particularly Lucene 3.6.1, the optimizer is becoming less useful, so this configuration group will very likely be removed in future versions.</p>"},{"location":"users/admin/configuration/#z3950-configuration","title":"Z39.50 configuration","text":"<p>GeoNetwork can act as a Z39.50 server. Z39.50 is the name of an older communication protocol used for distributed searching across metadata catalogs.</p> <p>Enable: Check this option to enable the Z39.50 server, uncheck it to disable the Z39.50 server.</p> <p>Port: This is the port on which GeoNetwork will be listening for incoming Z39.50 requests. Z3950 servers can run on any port, but 210 (not recommended), 2100 and 6668 are common choices. If you have multiple GeoNetwork nodes running on the same machine then you need to make sure each one has a different port number.</p> <p>GeoNetwork must be restarted to put any changes to these values into use.</p>"},{"location":"users/admin/configuration/#oai-provider","title":"OAI Provider","text":"<p>Options in this group control the way in which the OAI Server in GeoNetwork responds to OAIPMH harvest requests from remote sites.</p> <p>Datesearch: OAI Harvesters may request records from GeoNetwork in a date range. GeoNetwork can use one of two date fields from the metadata to check for a match with this date range. The default choice is Temporal extent, which is the temporal extent from the metadata record. The other option, Modification date, uses the modification date of the metadata record in the GeoNetwork database. The modification date is the last time the metadata record was updated in or harvested by GeoNetwork.</p> <p>Resumption Token Timeout: Metadata records that match an OAI harvest search request are usually returned to the harvester in groups with a fixed size (eg. in groups of 10 records). With each group a resumption token is included so that the harvester can request the next group of records. The resumption token timeout is the time (in seconds) that GeoNetwork OAI server will wait for a resumption token to be used. If the timeout is exceeded GeoNetwork OAI server will drop the search results and refuse to recognize the resumption token. The aim of this feature is to ensure that resources in the GeoNetwork OAI server are released.</p> <p>Cache size: The maximum number of concurrent OAI harvests that the GeoNetwork OAI server can support.</p> <p>GeoNetwork must be restarted to put any changes to the resumption token timeout and the Datesearch options into use.</p>"},{"location":"users/admin/configuration/#xlink_config","title":"XLink resolver","text":"<p>The XLink resolver replaces the content of elements with an attribute @xlink:href (except for srv:operatesOn element) with the content obtained from the URL content of @xlink:href. The XLink resolver should be enabled if you want to harvest metadata fragments or reuse fragments of metadata in your metadata records.</p> <p>Enable: Enables/disables the XLink resolver.</p> <p>Note: to improve performance GeoNetwork will cache content that is not in the local catalog.</p>"},{"location":"users/admin/configuration/#search_stats_config","title":"Search Statistics","text":"<p>Enables/disables search statistics capture. Search statistics are stored in the database and can be queried using the Search Statistics interface on the Administration page. There is very little compute overhead involved in storing search statistics as they are written to the database in a background thread. However database storage for a very busy site must be carefully planned.</p>"},{"location":"users/admin/configuration/#multilingual-settings","title":"Multilingual Settings","text":"<p>Options in this group determine how GeoNetwork will search metadata in multiple languages.</p> <p>Enable auto-detecting search request language: If this option is selected, Geonetwork will analyse the search query and attempt to detect the language that is used before defaulting to the GUI language.</p> <p>Search results in requested language sorted on top: If this option is selected, a sort clause will be added to each query to ensure that results in the current language are always sorted on top. This is different from increasing priority of the language in that it overrides the relevance of the result. For example, if a german result has very high relevance but the search language is french then the french results will all come before the german result.</p> <p>Search only in requested language The options in this section determines how documents are sorted/prioritised relative to the language in the document compared to the search language.</p> <ul> <li>All documents in all languages (No preferences) - The search language is ignored and will have no effect on the ordering of the results</li> <li>Prefer documents with translations requested language - Documents with a translation in the search language (anywhere in the document) will be prioritized over documents without any elements in the search language</li> <li>Prefer documents whose language is the requested language - Documents that are the same language as the search language (ie. the documents that are specified as being in the same language as the search language) are prioritized over documents that are not.</li> <li>Translations in requested language - The search results will only contain documents that have some translations in the search language.</li> <li>Document language is the requested language - The search results will contain documents whose metadata language is specified as being the in search language</li> </ul> <p>Note:</p> <pre><code>Using \"All documents in all languages (No preferences)\" and having metadata content in more than one language \n(eg. english and french) or in a language that is not english is not recommended when \nusing language specific analyzer like the GeoNetworkAnalyzer (See `Lucene configuration &lt;../advanced-configuration/index.rst#adv_configuration_lucene&gt;`_).\nGeoNetworkAnalyzer uses different stopwords list for each language. In that situation, the search will always \nuse the default GeoNetworkAnalyzer (with an english set of stopwords) and searching for \"les cours d'eau\" will\nnot match anything because \"les\" is not removed by search field analysis (and it was during indexing the value in the\nindex in French). Use another option or switch to a non language specific analyzer.\n</code></pre>"},{"location":"users/admin/configuration/#data-for-download-service","title":"Data-For-Download Service","text":"<p>GeoNetwork editor supports uploading one or more files that can be stored with the metadata record. When such a record is displayed in the search results, a 'Download' button is provided which will allow the user to select which file they want to download. This option group determines how that download will occur.</p> <p>Use GeoNetwork simple file download service: Clicking on any file stored with the metadata record will deliver that file directly to the user via the browser.</p> <p>Use GeoNetwork disclaimer and constraints service: Clicking on any file stored with the metadata record will deliver a zip archive to the user (via the browser) that contains the data file, the metadata record itself and a summary of the resource constraint metadata as an html document. In addition, the user will need to provide some details (name, organisation, email and optional comment) and view the resource constraints before they can download the zip archive.</p>"},{"location":"users/admin/configuration/#clickable-hyperlinks","title":"Clickable hyperlinks","text":"<p>Enables/disables hyperlinks in metadata content. If a URL is present in the metadata content, GeoNetwork will detect this and make it into a clickable hyperlink when it displays the metadata content.</p>"},{"location":"users/admin/configuration/#local-rating","title":"Local rating","text":"<p>Enables/disables local rating of metadata records.</p>"},{"location":"users/admin/configuration/#automatic-fixes","title":"Automatic fixes","text":"<p>For each metadata schema, GeoNetwork has an XSLT that it can apply to a metadata record belonging to that schema. This XSLT is called update-fixed-info.xsl and the aim of this XSLT is to allow fixed schema, site and GeoNetwork information to be applied to a metadata record every time the metadata record is saved in the editor. As an example, GeoNetwork uses this XSLT to build and store the URL of any files uploaded and stored with the metadata record in the editor.</p> <p>Enable: Enabled by default. It is recommended you do not use the GeoNetwork default or advanced editor when auto-fixing is disabled. See http://trac.osgeo.org/geonetwork/ticket/368 for more details.</p>"},{"location":"users/admin/configuration/#inspire","title":"INSPIRE","text":"<p>Enables/disables the INSPIRE support:</p> <ul> <li> <p>CSW GetCapabilities includes the INSPIRE section (ie. ExtendedCapabilities) that administrator can customize in xml/csw/capabilities_inspire.xml and response support language extensions. The language provided defines:</p> </li> <li> <p>Natural language fields are returned in the language requested (see OGC CSW server configuration)</p> </li> <li> <p>The end-points are returned for the language requested</p> </li> <li> <p>INSPIRE themes are indexed (check that INSPIRE themes thesaurus is available and reindex the catalog)</p> </li> <li>Enables/disables INSPIRE search panel: Add INSPIRE criteria in the advanced search panel (eg. Annex, INSPIRE theme)</li> </ul>"},{"location":"users/admin/configuration/#metadata-views","title":"Metadata Views","text":"<p>Options in this section enable/disable metadata element groups in the metadata editor/viewer.</p> <p>Enable simple view: The simple view in the metadata editor/viewer: - removes much of the hierarchy from nested metadata records (such as ISO19115/19139) - will not let the user add metadata elements that are not already in the metadata record It is intended to provide a flat, simple view of the metadata record. A disadvantage of the simple view is that some of the context information supplied by the nesting in the metadata record is lost. Enable ISO view: The ISO19115/19139 metadata standard defines three groups of elements: - Minimum: those elements that are mandatory - Core: the elements that should be present in any metadata record describing a geographic dataset - All: all the elements Enable INSPIRE view: Enables the metadata element groups defined in the EU INSPIRE directive. Enable XML view: This is a raw text edit view of the XML record. You can disable this if (for example), you don't want inexperienced users to be confused by the XML presentation provided by this view.</p>"},{"location":"users/admin/configuration/#metadata-privileges","title":"Metadata Privileges","text":"<p>Only set privileges to user's groups: If enabled then only the groups that the user belongs to will be displayed in the metadata privileges page (unless the user is an Administrator). At the moment this option cannot be disabled and is likely to be deprecated in the next version of GeoNetwork.</p>"},{"location":"users/admin/configuration/#editing_harvested_records","title":"Harvesting","text":"<p>Allow editing on harvested records: Enables/Disables editing of harvested records in the catalogue. By default, harvested records cannot be edited.</p>"},{"location":"users/admin/configuration/#proxy","title":"Proxy","text":"<p>For some functions (eg. harvesting) GeoNetwork must be able to connect to remote sites. This may not be possible if an organisation uses proxy servers. If your organisation uses a proxy server then GeoNetwork must be configured to use the proxy server in order to correctly route outgoing requests to remote sites.</p> <p>Use: Checking this box will display the proxy configuration options panel.</p> The proxy configuration options <p>Host: The proxy server name or address to use (usually an IP address).</p> <p>Port: The proxy server port to use.</p> <p>Username (optional): a username should be provided if the proxy server requires authentication.</p> <p>Password (optional): a password should be provided if the proxy server requires authentication.</p>"},{"location":"users/admin/configuration/#feedback","title":"Feedback","text":"GeoNetwork needs to send email if: <ul> <li>you are using the User Self-registration system or the Metadata Status workflow</li> <li>a file uploaded with a metadata record is downloaded</li> <li>a user provides feedback using the online form.</li> </ul> <p>You have to configure the mail server GeoNetwork should use in order to enable it to send these emails.</p> <p>Email: This is the email address that will be used to send the email (the From address).</p> <p>SMTP host: the mail server address to use when sending email.</p> <p>SMTP port: the mail server SMTP port (usually 25).</p>"},{"location":"users/admin/configuration/#removed-metadata","title":"Removed metadata","text":"<p>Defines the directory used to store a backup of metadata and data after a delete action. This directory is used as a backup directory to allow system administrators to recover metadata and possibly related data after erroneous deletion. By default the removed directory is created in the GeoNetwork data folder.</p>"},{"location":"users/admin/csw-configuration/","title":"OGC CSW server configuration","text":"<p>To get to the CSW server configuration, you must be logged on as administrator first. Open the Administration page and select CSW Server configuration (The link is surrounded with a red ellipse in the image below).</p> <p></p> <p>Clicking on this link will open a configuration menu that looks like the following.</p> <p></p> <p>The Open Geospatial Catalogue Service for the Web (OGC-CSW) service, is a self-describing service that allows query, update and insertion of metadata records. The service can be asked to provide a description of itself, the human who administers it and other information through a GetCapabilities request (eg. http://localhost:8080/geonetwork/srv/en/csw?request=GetCapabilities&amp;service=CSW&amp;version=2.0.2). This form allows you to configure the CSW server and fill out some of the properties returned in response to a GetCapabilities request. A description of each of the fields in this form now follows:</p> <p>Enable: This option allows you to start or stop the CSW services. If this option is disabled, other catalogues cannot connect to the node using CSW protocol.</p> <p>Inserted metadata is public: By default, metadata inserted with the CSW Harvest and CSW Transaction operations is not publicly viewable. A user with the appropriate access rights could do this after the CSW Harvest and CSW Transaction operations, but this is not always convenient. If this option is checked all metatada inserted using the CSW Harvest and CSW Transaction operations will be publicly viewable.</p> <p>Contact: The drop down select list shows the current users in the local GeoNetwork catalog. The contact details of the user chosen from this list will be provided in the GetCapabilities document of the CSW service.</p> <p>Language: The language that is used in the service description fields.</p> <p>Title: The title of the CSW service.</p> <p>Abstract: The abstract of the CSW service. The abstract can contain a brief description of what the service provides and who runs it.</p> <p>Fees: If there are any fees for usage of the service then they should be detailed here.</p> <p>Access constraints: If there are any constraints on access to the service then they should be detailed here.</p> <p>The last function on this page is the CSW ISO Profile test. Clicking on this link brings up a javascript based interface that allows you to submit requests to the CSW server. The requests used by this interface are XML files in INSTALL_DIR/web/geonetwork/xml/csw/test.</p>"},{"location":"users/admin/csw-configuration/#VirtualCSW","title":"Virtual CSW server entry points","text":"<p>This feature of CSW server adds the capability to create custom CSW entry points that apply extra criteria to the CSW requests, allowing to implement several useful cases like, for example:</p> <ul> <li>Define an INSPIRE CSW entry point to deliver only the INSPIRE related metadata stored in the catalog.</li> <li>Define CSW entry points to deliver only metadata related to specific theme/s: climate, boundaries, etc.</li> </ul> <p>The CSW service entry points are defined in the configuration file <code>WEB-INF/config-csw-servers.xml</code> using the following syntax:</p> <pre><code>&lt;service name=\"csw-with-my-filter-environment\"&gt;\n   &lt;class name=\".services.main.CswDispatcher\" &gt;\n           &lt;param name=\"filter\" value=\"+inspirerelated:on +themekey:environment\"/&gt;\n   &lt;/class&gt;\n&lt;/service&gt;\n\n&lt;service name=\"csw-with-my-filter-climate\"&gt;\n   &lt;class name=\".services.main.CswDispatcher\" &gt;\n           &lt;param name=\"filter\" value=\"+inspirerelated:on +themekey:climate\"/&gt;\n   &lt;/class&gt;\n&lt;/service&gt;\n</code></pre> <p>The <code>filter</code> parameter value should use the Lucene query parser syntax (see http://lucene.apache.org/java/2_9_1/queryparsersyntax.html) and is use in these CSW operations:</p> <ul> <li>GetRecords: the <code>filter</code> is applied with the CSW query as an extra query criteria.</li> <li>GetRecordById: the <code>filter</code> is applied with the metadata <code>id</code> requested as an extra query criteria.</li> <li>GetDomain: the <code>filter</code> is applied as a query criteria to retrieve the metadata properties requested.</li> <li>GetCapabilities: the <code>filter</code> is applied as a query criteria to fill the metadata keywords list in the GetCapabilities document.</li> </ul> <p>The list of available Lucene index fields to use in the <code>filter</code> parameter can be obtained from the files <code>index-fields.xsl</code> in the schema folders located in <code>WEB-INF/xml/schemas</code>.</p> <p>As Harvest and Transaction operations are not affected by <code>filter</code> parameter, to avoid confusion is better to use this feature as readonly CSW endpoints.</p>"},{"location":"users/admin/csw-configuration/#configuration","title":"Configuration","text":"<p>Adding a new CSW entry point to GeoNetwork opensource requires these steps (suppose the new CSW entry point is call <code>csw-with-my-filter-environment</code>):</p> <ul> <li> <p>Create the service definition in the configuration file <code>WEB-INF/config-csw-servers.xml</code> with the custom filter criteria as describe before:</p> <pre><code>&lt;service name=\"csw-with-my-filter-environment\"&gt;\n   &lt;class name=\".services.main.CswDispatcher\" &gt;\n           &lt;param name=\"filter\" value=\"+inspirerelated:on +themekey:environment\"/&gt;\n   &lt;/class&gt;\n&lt;/service&gt;\n</code></pre> </li> <li> <p>Define permissions for the service in the file <code>WEB-INF/user-profiles.xml</code> file:</p> <pre><code>&lt;profile name=\"Guest\"&gt;\n   &lt;allow service=\"csw-with-my-filter-environment\"/&gt;\n</code></pre> </li> <li> <p>Restart the application. The new CSW entry point is accessible in http://localhost:8080/srv/en/csw-with-my-filter-environment</p> </li> </ul>"},{"location":"users/admin/csw-configuration/#configuration-using-geonetwork-overrides","title":"Configuration using GeoNetwork overrides","text":"<p>In this section is described how to use GeoNetwork overrides feature to configure a new CSW entry point. This feature allows to use different configurations to handle multiple deployment platforms. See additional documentation of this feature in Configuration override.</p> <ul> <li>Add the next override to a configuration override file, for example <code>WEB-INF/config-overrides-csw.xml</code>:<pre><code>&lt;overrides xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"&gt;\n &lt;!-- Add custom CSW service --&gt;\n &lt;file name=\".*/WEB-INF/config-csw-servers.xml\"&gt;\n   &lt;addXML xpath=\"services\"&gt;\n     &lt;service name=\"csw-with-my-filter-environment\"&gt;\n       &lt;class name=\".services.main.CswDispatcher\"&gt;\n         &lt;param name=\"filter\" value=\"+inspirerelated:on +themekey:environment\"/&gt;\n       &lt;/class&gt;\n     &lt;/service&gt;\n   &lt;/addXML&gt;\n &lt;/file&gt;\n &lt;file name=\".*/WEB-INF/user-profiles.xml\"&gt;\n   &lt;addXML xpath=\"profile[@name='Guest']\"&gt;\n     &lt;allow service=\"csw-with-my-filter-environment\"/&gt;\n   &lt;/addXML&gt;\n &lt;/file&gt;\n&lt;/overrides&gt;\n</code></pre> </li> </ul> <p>For more information about configuration overrides see Configuration override</p> <ul> <li>Restart the application. The new CSW entry point is accessible in http://localhost:8080/srv/en/csw-with-my-filter-environment</li> </ul>"},{"location":"users/admin/localization/","title":"Localization","text":""},{"location":"users/admin/localization/#localization-of-dynamic-user-interface-elements","title":"Localization of dynamic user interface elements","text":"<p>The user interface of GeoNetwork can be localized into several languages through XML language files. Beside static text, there is also more dynamic text that can be added and changed interactively. This text is stored in the database and is translated using the Localization form that is part of the administrative functions.</p> How to open the Localization form <p>The form allows you to localize the following entities: Groups, Categories, Operations and Regions. The localization form is subdivided in a left and a right panel.</p> <p>The left panel allows you to choose which elements you want to edit. On the top, a dropdown let you choose which entity to edit. All elements of the selected type are shown in a list.</p> <p>When you select an element from the list, the right panel will show the text as it will be displayed in the user interface. The text in the source language is read only while you can update the text in the target language field.</p> <p>Note</p> <p>You can change the source and target languages to best suit your needs. Some users may for instance prefer to translate from French to Spanish, others prefer to work with English as the source language.</p> <p>Use the Save button to store the updated label and move to the next element.</p> <p>Warning</p> <p>If the user changes a label and chooses another target language without saving, the label change is lost.</p> The Localization form"},{"location":"users/admin/monitoring/","title":"System Monitoring","text":"<p>The monitoring system provides automated monitoring of a Geonetwork web application to be able track the health of the system over time. The monitoring is based on the '''Metrics''' library (http://metrics.codahale.com/) by Yammer and detailed explanation for developers desiring specific monitors can be found there.</p> <p>The metrics are available via JMX or as JSON with http GET requests. The same information is available through both APIs. The web requests provided are:</p> <ul> <li>/monitor/metrics?[pretty=(true|false)][class=metric.name] - returns a json response with all of the registered metrics</li> <li>/monitor/threads - returns a text representation of the stack dump at the moment of the call</li> <li>/monitor/healthcheck - runs ALL health checks and returns 200 if all checks pass or 500 Internal Service Error if one fails (and human readable response of the failures)</li> <li>/criticalhealthcheck - runs only the critical (fast) health checks and returns 200 if all checks pass or 500 Internal Service Error if one fails</li> <li>/warninghealthcheck - runs only the non-critical health checks and returns 200 if all checks pass or 500 Internal Service Error if one fails</li> <li>/expensivehealthcheck - runs only the expensive critical health checks and returns 200 if all checks pass or 500 Internal Service Error if one fails</li> <li>/monitor - provide links to pages listed above.</li> </ul> <p>Links to this data is also available in the geonetwork/srv/eng/config.info administration user interface as well.</p> <p>By default the /monitor/* urls are protected and may only be accessed by an ''administrator'' or ''monitor'', however it is possible in the web.xml to provide a whitelist of URLs or IP addresses of monitoring servers that are permitted to access the monitoring data without needing an administration account.</p> <p>The monitors available are:</p> <ul> <li>Database Health Monitor - checks that the database is accessible</li> <li>Index Health Monitor - checks that the Lucene index is searchable</li> <li>Index Error Health Monitor - checks that there are no index errors in index (documents with _indexError field == 1)</li> <li>CSW GetRecords Health Monitor - Checks that GetRecords? does not return an error for a basic hits search</li> <li>CSW GetCapabilities Health Monitor - Checks that the GetCapabilities is returned and is not an error document</li> <li>Database Access timer - Time taken to access a DBMS instance. This gives and idea of the level of contention over the database connections</li> <li>Database Open Timer - Tracks the length of time a Database access is kept open</li> <li>Database Connection Counter - Counts the number of open Database connections</li> <li>Harvester Error Counter - Tracks errors that are raised during harvesting</li> <li>Service timer - Track the time of service execution</li> <li>Gui Services timer - Track the time of spend executing Gui services</li> <li>XSL output timer - Track the time of output xsl transform</li> <li>Log4j integration - monitors the frequency that logs are made for each log level so (for example) the rate that error are logged can be monitored. See http://metrics.codahale.com/manual/log4j</li> </ul> <p>The monitors that are enabled are in the config-monitoring.xml file and if desired certain monitors can be disabled.</p> <p>In the source code repository there are configuration files for collectd (and perhaps other monitoring software in the future).</p>"},{"location":"users/admin/usersandgroups/","title":"User and Group Administration","text":"<p>GeoNetwork uses the concept of Users, Groups and User Profiles.</p> <ul> <li>A User can be part of one or more Groups.</li> <li>A User has a User Profile.</li> <li>A User can only have one User Profile associated.</li> </ul> <p>The combination of User Profile and Group defines what tasks the User can perform on the system or on specific metadata records.</p>"},{"location":"users/admin/usersandgroups/#creating-new-user-groups","title":"Creating new user Groups","text":"<p>The administrator can create new groups of users. User groups can correspond to logical units within an organisation. For example groups for Fisheries, Agriculture, Land and Water, Health etcetera.</p> <p>To create new groups you should be logged on with an account that has Administrative privileges.</p> <ol> <li> <p>Select the Administration button in the menu. On the Administration page, select Group management.</p> <p></p> <p>Administration page - Group management</p> </li> <li> <p>Select Add a new group. You may want to remove the Sample group;</p> <p></p> <p>Group management</p> </li> <li> <p>Fill out the details. The email address will be used to send feedback on data downloads when they occur for resources that are part of the Group.</p> <p>Warning</p> <p>The Name should NOT contain spaces! You can use the Localization panel to provide localized names for groups.</p> <p></p> <p>Group edit form</p> </li> <li> <p>Click on Save</p> </li> </ol> <p>Access privileges can be set per metadata record. You can define privileges on a per Group basis.</p> <p>Privileges that can be set relate to visibility of the Metadata (Publish), data Download, Interactive Map access and display of the record in the Featured section of the home page.</p> <p>Editing defines the groups for which editors can edit the metadata record.</p> <p>Notify defines what Groups are notified when a file managed by GeoNetwork is downloaded.</p> <p>Below is an example of the privileges management table related to a dataset.</p> <p></p> <p>Privilege settings</p>"},{"location":"users/admin/usersandgroups/#creating-new-users","title":"Creating new Users","text":"<p>To add a new user to the GeoNetwork system you do the following:</p> <ol> <li> <p>Select the Administration button in the menu. On the Administration page, select User management.</p> <p></p> <p>Administration page - User management</p> </li> <li> <p>Click the button Add a new user;</p> <p></p> <p>User administration form</p> </li> <li> <p>Provide the information required for the new user;</p> <p></p> <p>User information form</p> </li> <li> <p>Assign the correct profile;</p> </li> <li> <p>Assign the user to a group;</p> </li> <li> <p>Click on Save.</p> </li> </ol>"},{"location":"users/admin/usersandgroups/#user_profiles","title":"User Profiles","text":"<p>Users can have different profiles depending on their role in the GeoNetwork system. A profile defines what tasks the user can perform.</p> <p>User profiles are hierarchical and based on inheritance. This means that a user with an Editor profile can create and modify new metadata records, but can also use all functions a Registered user can use.</p> <p>Rights associated with the profiles are illustrated in detail in the list below:</p> <ol> <li> <p>Administrator Profile</p> <p>The Administrator has special privileges that give access to all available functions.</p> <p>These include:</p> <ul> <li>Full rights for creating new groups and new users</li> <li>Rights to change users/groups' profiles</li> <li>Full rights for creating/editing/deleting new/old metadata</li> <li>Perform system administration and configuration tasks.</li> </ul> </li> <li> <p>User Administrator Profile</p> <p>The User Administrator is the administrator of his/her own group with the following privileges:</p> <ul> <li>Full rights on creating new users within the own group</li> <li>Rights to change users profiles within the own group</li> <li>Full rights on creating/editing/ deleting new/old data within the own group</li> </ul> </li> <li> <p>Content Reviewer Profile</p> <p>The content reviewer is the only person allowed to give final clearance on the metadata publication on the Intranet and/or on the Internet:</p> <ul> <li>Rights on reviewing metadata content within the own group and authorising its publication</li> </ul> </li> <li> <p>Editor Profile</p> <p>The editor works on metadata with following privileges:</p> <ul> <li>Full rights on creating/editing/ deleting new/old data within the own group</li> </ul> </li> <li> <p>Registered User Profile</p> <p>The Registered User has more access privileges than non-authenticated Guest users:</p> <ul> <li>Right to download protected data</li> </ul> </li> </ol>"},{"location":"users/admin/usersandgroups/#user-self-registration","title":"User Self-Registration","text":"<p>See User Self-Registration Functions.</p>"},{"location":"users/appendix/foss4g/","title":"Free and Open Source Software for Geospatial Information Systems","text":"<p>A range of related software packages can be used in addition to GeoNetwork opensource to deploy a full Spatial Data Infrastructure. These include Web Map Server software, GIS desktop applications and Web Map Viewers.</p> <p>Below you will find some examples of open source software available for each categories.</p>"},{"location":"users/appendix/foss4g/#web-map-server-software","title":"Web Map Server software","text":"<ul> <li>GeoServer (All)</li> <li>MapServer (All)</li> <li>MapGuide Open Source (Windows &amp; Linux)</li> <li>Deegree (All)</li> </ul>"},{"location":"users/appendix/foss4g/#gis-desktop-software","title":"GIS Desktop software","text":"<ul> <li>GRASS (All)</li> <li>gvSIG (All)</li> <li>uDig (All)</li> <li>Quantum GIS (All)</li> <li>OSSIM (Windows &amp; OSX)</li> </ul>"},{"location":"users/appendix/foss4g/#web-map-viewer-and-map-server-management","title":"Web Map Viewer and Map Server Management","text":"<ul> <li>OpenLayers (All)</li> <li>MapBender (All)</li> </ul> <p>Note</p> <p>All = The Windows, Linux and Mac OS X operating systems.</p>"},{"location":"users/appendix/glossary_of_metadata/","title":"Glossary of Metadata Fields Description","text":"<p>This glossary provides you with brief descriptions of the minimum set of metadata fields required to properly describe a geographical data as well as some optional elements highly suggested for a more extensive standard description.</p> Access constraints <p>Access constraints applied to assure the protection of privacy or intellectual property, and any special restrictions or limitations on obtaining the resource</p> Abstract <p>Brief narrative summary of the content of the resource(s)</p> Administrative area <p>State, province of the location</p> Temporal extent - Begin date <p>Formatted as 2007-09-12T15:00:00 (YYYY-MM-DDTHHss)</p> Character set <p>Full name of the character coding standard used for the metadata set</p> Grid spatial representation - Cell geometry <p>Identification of grid data as point or cell</p> City <p>City of the location</p> Reference System Info - Code <p>Alphanumeric value identifying an instance in the namespace</p> Country <p>Country of the physical address</p> Data quality info <p>Provides overall assessment of quality of a resource(s)</p> Date <p>Reference date and event used to describe it (YYYY-MM-DD)</p> Date stamp <p>Date that the metadata was created (YYYY-MM-DDThhss)</p> Date type <p>Event used for reference date</p> Delivery point <p>Address line for the location (as described in ISO 11180, annex A)</p> Equivalent scale - Denominator <p>The number below the line in a vulgar fraction</p> Data Quality - Description <p>Description of the event, including related parameters or tolerances</p> OnLine resource - Description <p>Detailed text description of what the online resource is/does</p> Descriptive keywords <p>Provides category keywords, their type, and reference source</p> Grid spatial representation - Dimension name <p>Name of the axis i.e. row, column</p> Grid spatial representation - Dimension size <p>Number of elements along the axis</p> Dimension size Resolution <p>Number of elements along the axis</p> Distribution info <p>Provides information about the distributor of and options for obtaining the resource(s)</p> Geographic bounding box - East bound longitude <p>Eastern-most coordinate of the limit of the dataset extent, expressed in longitude in decimal degrees (positive east)</p> Edition <p>Version of the cited resource</p> Electronic mail address <p>Address of the electronic mailbox of the responsible organisation or individual</p> Temporal extent - End date <p>Formatted as 2007-09-12T15:00:00 (YYYY-MM-DDTHHss)</p> Equivalent scale <p>Level of detail expressed as the scale of a comparable hardcopy map or chart</p> Extent <p>Information about spatial, vertical, and temporal extent</p> Facsimile <p>Telephone number of a facsimile machine for the responsible organisation or individual</p> File identifier <p>Unique identifier for this metadata file</p> Vector spatial representation - Geometric object type <p>Name of point and vector spatial objects used to locate zero-, one-and two-dimensional spatial locations in the dataset</p> Vector spatial representation - Geometric object count <p>Total number of the point or vector object type occurring in the dataset</p> Geographic bounding box <p>Geographic position of the dataset</p> Grid spatial representation <p>Information about grid spatial objects in the dataset</p> Grid spatial representation - Resolution value <p>Degree of detail in the grid dataset</p> Grid spatial representation - Transformation parameter availability <p>Indication of whether or not parameters for transformation exists</p> Data Quality - Hierarchy level <p>Hierarchical level of the data specified by the scope</p> Identification info <p>Basic information about the resource(s) to which the metadata applies</p> Point of Contact - Individual name <p>Name of the responsible person- surname, given name, title separated by a delimiter</p> Keyword <p>Commonly used word(s) or formalised word(s) or phrase(s) used to describe the subject</p> Data Language <p>Language used for documenting data</p> Metadata - Language <p>Language used for documenting metadata</p> Data Quality - Lineage <p>Non-quantitative quality information about the lineage of the data specified by the scope. Mandatory if report not provided</p> OnLine resource - Linkage <p>Location (address) for on-line access using a Uniform Resource Locator address or similar addressing scheme such as http://www.statkart.no/isotc211</p> Maintenance and update frequency <p>Frequency with which changes and additions are made to the resource after the initial resource is completed</p> Metadata author <p>Party responsible for the metadata information</p> Metadata standard name <p>Name of the metadata standard (including profile name) used</p> Metadata standard version <p>Version (profile) of the metadata standard used</p> OnLine resource - Name <p>Name of the online resource</p> Geographic bounding box - North bound latitude <p>Northern-most, coordinate of the limit of the dataset extent expressed in latitude in decimal degrees (positive north)</p> Grid spatial representation - Number of dimensions <p>Number of independent spatial-temporal axes</p> Distribution Info - OnLine resource <p>Information about online sources from which the resource can be obtained</p> Point of Contact - Organisation name <p>Name of the responsible organisation</p> Other constraints <p>Other restrictions and legal prerequisites for accessing and using the resource</p> Point of contact <p>Identification of, and means of communication with, person(s) and organisations(s) associated with the resource(s)</p> Point of contact - Position name <p>Role or position of the responsible person</p> Postal code <p>ZIP or other postal code</p> Presentation form <p>Mode in which the resource is represented</p> OnLine resource - Protocol <p>Connection protocol to be used</p> Purpose <p>Summary of the intentions with which the resource(s) was developed</p> Reference system info <p>Description of the spatial and temporal reference systems used in the datasetData</p> Data Quality - Report <p>Quantitative quality information for the data specified by the scope. Mandatory if lineage not provided</p> Grid spatial representation - Resolution value <p>Degree of detail in the grid dataset</p> Point of contact - Role <p>Function performed by the responsible party</p> Geographic bounding box - South bound latitude <p>Southern-most coordinate of the limit of the dataset extent, expressed in latitude in decimal degrees (positive north)</p> Spatial representation info <p>Digital representation of spatial information in the dataset</p> Spatial representation type <p>Method used to spatially represent geographic information</p> Data Quality - Statement <p>General explanation of the data producer's knowledge about the lineage of a dataset</p> Status <p>Status of the resource(s)</p> Supplemental Information <p>Any other descriptive information about the dataset</p> Temporal Extent <p>Time period covered by the content of the dataset</p> Title <p>Name by which the cited resource is known</p> Topic category code <p>High-level geographic data thematic classification to assist in the grouping and search of available geographic data sets. Can be used to group keywords as well. Listed examples are not exhaustive. NOTE It is understood there are overlaps between general categories and the user is encouraged to select the one most appropriate.</p> Grid spatial representation - Transformation parameter availability <p>Indication of whether or not parameters for transformation exists</p> Vector spatial representation - Topology level <p>Code which identifies the degree of complexity of the spatial relationships</p> Type <p>Subject matter used to group similar keywords</p> URL <p>Unified Resource Locator</p> Use constraints <p>Constraints applied to assure the protection of privacy or intellectual property, and any special restrictions or limitations or warnings on using the resource</p> Vector spatial representation <p>Information about the vector spatial objects in the dataset</p> Voice <p>Telephone number by which individuals can speak to the responsible organisation or individual</p> Geographic bounding box - West bound longitude <p>Western-most coordinate of the limit of the dataset extent, expressed in longitude in decimal degrees (positive east)</p>"},{"location":"users/appendix/iso_topic_categories/","title":"ISO Topic Categories","text":"<p>Iso Topic Categories and Keywords</p> <p></p> <p></p> <p></p>"},{"location":"users/features/","title":"Features","text":""},{"location":"users/features/multilingual/","title":"Multilingual search","text":""},{"location":"users/features/multilingual/#introduction","title":"Introduction","text":"<p>GeoNetwork supports multilingual search. Depending on the configuration, this influences which search results are returned and how they are presented:</p> <p>Enable auto-detecting search request language: If this option is selected, Geonetwork will analyse the search query and attempt to detect the language that is used before defaulting to the GUI language.</p> <p>Search only in requested language The options in this section determines how documents are sorted/prioritised relative to the language in the document compared to the search language.</p> <ul> <li>All documents in all languages (No preferences) - The search language is ignored and will have no effect on the ordering of the results</li> <li>Prefer documents with translations requested language - Documents with a translation in the search language (anywhere in the document) will be prioritized over documents without any elements in the search language</li> <li>Prefer documents whose language is the requested language - Documents that are the same language as the search language (IE the documents that are specified as being in the same language as the search language) or prioritized over documents that are not.</li> <li>Translations in requested language - The search results will only contain documents that have some translations in the search language.</li> <li>Document language is the requested language - The search results will contain documents whose metadata language is specified as being the in search language</li> </ul> <p>Administrator users can change these settings in the System Configuration page:</p> <p></p>"},{"location":"users/features/multilingual/#requested-language","title":"Requested language","text":"<p>The requested language is determined as follows (in this order):</p> <ul> <li>request parameter: in the GUI, the user may select a language:</li> </ul> For XML searches, the client may add::  <p>&lt;requestedLanguage&gt;language-code&lt;/requestedLanguage&gt;</p> <p>where language-code is one of the ISO 639-2 (three-character) language codes, see http://www.loc.gov/standards/iso639-2/php/code_list.php.</p> <ul> <li>if the request parameter is not sent (the user selected \"any\" language, or it's not in the XML request), the requested language may be automatically detected, if an Administrator user has enabled this in the System Configuration:</li> </ul> <p></p> <p>The auto-detection feature uses Language Detection Library for Java, see https://code.google.com/p/language-detection/. This library tries to detect the language of search terms in parameter 'any'. This may not work very well, depending on the language, if there is only one or very few search terms. This is why this feature is disabled by default. At the time of writing the auto-detection supports these languages:</p> <ul> <li>Afrikaans</li> <li>Arabic</li> <li>Bulgarian</li> <li>Bengali</li> <li>Czech</li> <li>Danish</li> <li>German</li> <li>Greek (modern)</li> <li>English</li> <li>Spanish</li> <li>Estonian</li> <li>Persian</li> <li>Finnish</li> <li>French</li> <li>Gujarati</li> <li>Hebrew</li> <li>Hindi</li> <li>Croatian</li> <li>Hungarian</li> <li>Indonesian</li> <li>Italian</li> <li>Japanese</li> <li>Kannada</li> <li>Korean</li> <li>Lithuanian</li> <li>Latvian</li> <li>Macedonian</li> <li>Malayalam</li> <li>Marathi</li> <li>Nepali</li> <li>Dutch</li> <li>Norwegian</li> <li>Punjabi</li> <li>Polish</li> <li>Portuguese</li> <li>Romanian</li> <li>Russian</li> <li>Slovak</li> <li>Slovenian</li> <li>Somali</li> <li>Albanian</li> <li>Swedish</li> <li>Swahili</li> <li>Tamil</li> <li>Telugu</li> <li>Thai</li> <li>Tagalog</li> <li>Turkish</li> <li>Ukrainian</li> <li>Urdu</li> <li>Vietnamese</li> <li>Chinese (traditional)</li> <li> <p>Chinese (simplified)</p> </li> <li> <p>if autodetecting the language is disabled (the default), the current language of the user's GUI is used as the requested language</p> </li> <li>if there is no GUI, the requested language is hardcoded to be English</li> </ul>"},{"location":"users/features/multilingual/#stopwords","title":"Stopwords","text":"<p>Stopwords are words that are considered to carry little or no meaning relevant to search. To improve relevance ranking of search results, stopwords are often removed from search terms. In GeoNetwork stopwords are automatically used if a stopwords list for the requested language is available; if not, no stopwords are used. At the time of writing there are stopword lists for:</p> <ul> <li>Arabic</li> <li>Bulgarian</li> <li>Bengali</li> <li>Catalan</li> <li>Czech</li> <li>Danish</li> <li>German</li> <li>Greek (modern)</li> <li>English</li> <li>Spanish</li> <li>Persian</li> <li>Finnish</li> <li>French</li> <li>Hindi</li> <li>Hungarian</li> <li>Italian</li> <li>Japanese</li> <li>Korean</li> <li>Marathi</li> <li>Malay</li> <li>Dutch</li> <li>Norwegian</li> <li>Polish</li> <li>Portuguese</li> <li>Romanian</li> <li>Russian</li> <li>Swedish</li> <li>Turkish</li> <li>Chinese</li> </ul> <p>System administrators may add additional languages' stopword lists by placing them in the directory /web/resources/stopwords. The filenames should be .txt. If you do add a stopwords list for another language, please consider contributing it for inclusion in GeoNetwork. <p>Likewise, to disable stopwords usage for one or more languages, the stopword list files should be removed or renamed.</p>"},{"location":"users/features/search_statistics/","title":"Search Statistics","text":"<p>Searches made through the user interface on the local catalog are logged to the GeoNetwork database. The database holds metadata about the search request (eg. date on which it was made, simple or advanced, query, ip address of the client making the request) and the details of the search terms/parameters and values used in the search query.</p>"},{"location":"users/features/search_statistics/#querying-search-statistics","title":"Querying search statistics","text":"<p>The search statistics page is part of the Administration menu. You need to be logged in as an Administrator to access it and search statistics needs to be enabled in the System Configuration. See Multilingual Settings in the 'System Configuration' section of the manual.</p> <p></p> <p>Finding search statistics in the Administration page</p> <p>As delivered the search statistics page delivers a number of indicators and some reports.</p>"},{"location":"users/features/search_statistics/#adding-your-own-search-statistics","title":"Adding your own search statistics","text":"<p>The indicators and reports that are needed/desired at your site might be different to those provided with GeoNetwork on the search statistics page. For that reason the search statistics implementation has been designed with extensibility in mind.</p> <p>There are two types of search statistic services:</p> <ul> <li>pure XML: you specify a query on the database and a stylesheet to process the XML output from the query and display a web page in HTML - this could be used to add your own indicators to the search statistics page (or your own custom stats page).</li> <li>Java+XSLT: this is the more traditional GeoNetwork service, where you need to code a Jeeves service in Java which produces some XML and provide an XSLT to style the output from that service - this could be used in conjunction with the JFreeChart Java API to produce a chart or report from the search statistics</li> </ul> <p>The service definitions for the default search statistics provide examples of both these types of service. You can find the service definitions in the GeoNetwork release at INSTALL_DIR/web/geonetwork/WEB-INF/config-statistics.xml. The XSLTs that style the output from these services are in INSTALL_DIR/web/geonetwork/xsl/statistics.</p>"},{"location":"users/features/search_statistics/#exporting-the-search-statistics-as-a-csv-file","title":"Exporting the search statistics as a CSV file","text":"<p>If you feel so inclined, you may want to export the search statistics from the GeoNetwork database as a CSV file and process them in a spreadsheet. The search statistics page provided with GeoNetwork has this capability.</p>"},{"location":"users/features/thesaurus/","title":"Thesaurus","text":""},{"location":"users/features/thesaurus/#introduction","title":"Introduction","text":"<p>A thesaurus is a list of words (or concepts) from a specialized field of knowledge. In a metadata catalog, words from a thesaurus can be assigned to a metadata record (as keywords) as a way of associating it with one or more concepts from a field of knowledge. For example, a record may be assigned a keyword 'AGRICULTURE - Crops' meaning that the record describes a resource or activity relating to crops in the field of Agriculture.</p> <p>In GeoNetwork, the process of assigning keywords to a metadata record takes place in the metadata editor. The user can choose words from one or more thesauri to associate the record with the concepts described by those words. This process is supported for both ISO19115/19139 and dublin core metadata records using an extjs based thesaurus picker.</p> <p>Concepts within a field of knowledge or in different fields of knowledge may be related or even be equivalent. For example, in a thesaurus describing geographic regions, the Australian state of 'Tasmania' is a specialization of the country of Australia. As an example of overlapping concepts in different fields, a thesaurus describing science activities in the field of global change may have concepts relating to agricultural activities that will be equivalent to terms from a thesaurus that describes the themes used in a map series.</p> <p>In GeoNetwork, thesauri are represented as SKOS (Simple Knowledge Organisation System). SKOS (more on this below) captures concepts and relationships between concepts. SKOS thesauri can be imported from standalone files or they can be generated from ISO19135 register records in the local GeoNetwork catalog. ISO19135 (more on this below) not only captures the concepts and relationships between the concepts, but (amongst other things) how the concepts have evolved and most importantly, who has contributed to and managed the evolution of the concepts and the thesauri itself.</p>"},{"location":"users/features/thesaurus/#external-local-and-register-thesauri","title":"External, Local and Register Thesauri","text":"<p>There are three types of thesaurus in GeoNetwork. The different types are based on where the thesaurus comes from:</p> <ul> <li>External: A thesaurus managed by an external organisation and imported as a SKOS file. It is flagged to \"external\" which means that users are not allowed to edit the thesaurus.</li> <li>Local: A thesaurus built in the GeoNetwork thesaurus editor and stored as a SKOS file. It is flagged as \"local\" which means that users are allowed to edit the thesaurus.</li> <li>Register: A SKOS thesaurus created from an ISO19135 register record. Users can edit the thesaurus by changing the content of the ISO19135 register record in the GeoNetwork metadata editor and then regenerating the thesaurus. Users cannot edit the thesaurus in thesaurus manager.</li> </ul>"},{"location":"users/features/thesaurus/#iso1911519139-thesaurus-categories","title":"ISO19115/19139 Thesaurus Categories","text":"<p>All thesauri in GeoNetwork are categorized using the codelist values for the gmd:MD_KeywordTypeCode element from ISO19115/19139. The categories and their meanings are given below but can also be found in http://www.isotc211.org/2005/resources/gmxCodelist.xml:</p> ISO Thesaurus Category Description place Thesaurus has concepts identifying a location stratum Thesaurus has concepts identifying layers of any deposited substance temporal Thesaurus has concepts identifying a time period theme Thesaurus has concepts identifying a particular subject or topic discipline Thesaurus has concepts identifying a branch of instruction or specialized learning"},{"location":"users/features/thesaurus/#skos-format","title":"SKOS format","text":"<p>The Simple Knowledge Organisation Systems (SKOS) http://www.w3.org/2004/02/skos/ is an area of work developing specifications and standards to support the use of knowledge organisation systems (KOS) such as thesauri, classification schemes. This format is used by GeoNetwork to store thesaurus information.</p> <p>A concept is defined by an identifier, a preferred label, a definition and links with other concepts. Labels and definitions could be stored in multiple languages (using the xml:lang attributes). Three type of links between concepts have been defined in the SKOS format:</p> <ul> <li>related terms</li> <li>broader terms</li> <li>narrower terms</li> </ul> <p>For example, a concept \"ABLETTE\" could be defined as follow with a label in French and English, linked to broader concept:</p> <pre><code>&lt;skos:Concept rdf:about=\"http://www.oieau.org/concept#c4fc54576dc00227b82a709287ac3681\"&gt;\n    &lt;skos:prefLabel xml:lang=\"fr\"&gt;ABLETTE&lt;/skos:prefLabel&gt;\n    &lt;skos:prefLabel xml:lang=\"en\"&gt;BLEAK&lt;/skos:prefLabel&gt;\n    &lt;skos:broader rdf:resource=\"http://www.oieau.org/concept#9f25ece36d04776e09492c66627cccb9\"/&gt;\n&lt;/skos:Concept&gt;\n</code></pre> <p>GeoNetwork supports multilingual thesauri (e.g. Agrovoc). Search and editing takes place in the current user interface language (i.e. if the interface is in English, when editing metadata, GeoNetwork will only search for concept in English).</p> <p>We use SKOS to represent thesauri in GeoNetwork because:</p> <ul> <li>it provides a simple and compact method of describing concepts and relationships between concepts from a field of knowledge</li> <li>SKOS concepts can be queried and managed by the sesame/openRDF software used by GeoNetwork</li> </ul>"},{"location":"users/features/thesaurus/#iso19135-register-format","title":"ISO19135 register format","text":"<p>ISO19135 is an ISO standard that describes procedures for registering an item and the schema for describing a list (or register) of items and the processes by which the items can be created and evolve. This schema is available as a plugin for use in GeoNetwork. To use it, you must download and load the iso19135 plugin schema into GeoNetwork. FIXME: We need a standard way of referring to plugin schemas and a standard place from which they can be downloaded.</p> <p>A typical ISO19135 register record describes:</p> <ul> <li>the name and a description of the register</li> <li>version and language information</li> <li>contact information of those that have a role in the register (eg. manager, contributor, custodian, publisher etc)</li> <li>the elements used to describe an item in the register</li> <li>the items</li> </ul> <p>The standard information used to describe a register item includes:</p> <ul> <li>identifier</li> <li>name and description of item</li> <li>field of application</li> <li>lineage and references to related register items</li> </ul> <p>An example of a register item from register of the NASA GCMD (Global Change Master Directory) science keywords is shown below.</p> <pre><code>&lt;grg:RE_RegisterItem uuid=\"d1e7\"&gt;\n   &lt;grg:itemIdentifier&gt;\n      &lt;gco:Integer&gt;7&lt;/gco:Integer&gt;\n   &lt;/grg:itemIdentifier&gt;\n   &lt;grg:name&gt;\n      &lt;gco:CharacterString&gt;Aquaculture&lt;/gco:CharacterString&gt;\n   &lt;/grg:name&gt;\n   &lt;grg:status&gt;\n      &lt;grg:RE_ItemStatus&gt;valid&lt;/grg:RE_ItemStatus&gt;\n   &lt;/grg:status&gt;\n   &lt;grg:dateAccepted&gt;\n      &lt;gco:Date&gt;2006&lt;/gco:Date&gt;\n   &lt;/grg:dateAccepted&gt;\n   &lt;grg:definition gco:nilReason=\"missing\"/&gt;\n   &lt;grg:itemClass xlink:href=\"#Item_Class\"/&gt;\n   &lt;grg:specificationLineage&gt;\n      &lt;grg:RE_Reference&gt;\n         &lt;grg:itemIdentifierAtSource&gt;\n            &lt;gco:CharacterString&gt;5&lt;/gco:CharacterString&gt;\n         &lt;/grg:itemIdentifierAtSource&gt;\n         &lt;grg:similarity&gt;\n            &lt;grg:RE_SimilarityToSource codeListValue=\"generalization\"\n               codeList=\"http://ww.../lists.xml#RE_SimilarityToSource\"/&gt;\n         &lt;/grg:similarity&gt;\n      &lt;/grg:RE_Reference&gt;\n   &lt;/grg:specificationLineage&gt;\n&lt;/grg:RE_RegisterItem&gt;\n</code></pre> <p>As mentioned earlier, to use a thesaurus described by an ISO19135 register record, GeoNetwork uses an XSLT called xml_iso19135ToSKOS.xsl (from the convert subdirectory in the iso19135 plugin schema) to extract the following from the ISO19135 register record:</p> <ul> <li>valid concepts (grg:itemIdentifier, grg:name, grg:status)</li> <li>relationships to other concepts (grg:specificationLineage)</li> <li>title, version and other management info</li> </ul> <p>This information is used build a SKOS file. The SKOS file is then available for query and management by the sesame/openRDF software used in GeoNetwork.</p>"},{"location":"users/features/thesaurus/#creating-or-importing-a-thesaurus","title":"Creating or Importing a Thesaurus","text":"<p>External and local thesauri are created or imported using the thesaurus manager. You can use the thesaurus manager by:</p> <ul> <li>logging in as an administrator</li> <li>navigating to the 'Administration' page and clicking on the link \"Manage thesauri\"</li> </ul> <p>The thesaurus manager page will show a list of thesauri that have been created or imported. The upper part of the page provides the user with functions to edit, add, modify or search a thesaurus. The lower part provides a function to upload an external thesaurus in SKOS format.</p>"},{"location":"users/features/thesaurus/#creating-a-local-thesaurus","title":"Creating a local thesaurus","text":"<p>To create a local thesaurus, click the \"+\" sign on the category you want your thesaurus to be in. Once created, the thesaurus can be updated through the edit interface. The meaning of each column is as follows:</p> <ul> <li>Type - This is an identifier assigned to the thesaurus in GeoNetwork. It is composed of the ISO category to which the thesaurus has been assigned (see the codelist for the gmd:MD_KeywordTypeCode element in http://www.isotc211.org/2005/resources/gmxCodelist.xml), whether the thesaurus is a local, external or register thesaurus and the filename of the SKOS file that holds the thesaurus. (Note: the name of the file used to hold a register thesaurus is the uuid of the ISO19135 register record that describes the thesaurus).</li> <li>Name - This is the name of the thesaurus which is the administrator on creation or the filename if the thesaurus is ting a thesaurus, the name of the thesaurus will be the filename of the thesaurus.</li> </ul> Administration interface for thesaurus <p>For each thesaurus the following buttons are available:</p> <ul> <li>Download - Link to the SKOS RDF file.</li> <li>Delete - Remove thesaurus from the current node.</li> <li>View - If type is external, the view button allows to search and view concepts.</li> <li>Edit - If type is local, the edit button allows to search, add, remove and view concepts.</li> </ul>"},{"location":"users/features/thesaurus/#import-an-external-thesaurus","title":"Import an external thesaurus","text":"<p>GeoNetwork allows thesaurus import in SKOS format. Once uploaded, an external thesaurus cannot be updated. Select the category, browse for the thesaurus file and click upload. The SKOS file will be in <code>GEONETWORK_DATA_DIR/config/codelist/external/thesauri/&lt;category&gt;</code>.</p> Upload interface for thesaurus <p>At the bottom of the page there are the following buttons:</p> <ol> <li>Back: Go back to the main administration page.</li> <li>Upload: Upload the selected RDF file to the node. Then it will list all thesaurus available on the node.</li> </ol>"},{"location":"users/features/thesaurus/#creating-a-register-thesaurus","title":"Creating a register thesaurus","text":"<p>An ISO19135 record in the local GeoNetwork catalog can be turned into a SKOS file and used as a thesaurus in GeoNetwork. ISO19135 records not in the local catalog can be harvested from other catalogs (eg. the catalog of the organisation that manages the register). Once the ISO19135 register record is in the local catalog, the process of turning it into a thesaurus for use in the keywords selector begins a search for the record. Having located the record in the search results, one of the actions on the record is to 'Create/Update Thesaurus'.</p> Search results showing ISO19135 record with thesaurus creation action <p>After selecting this action, you can choose the ISO thesaurus category appropriate for this thesaurus:</p> Selecting the ISO thesaurus category when creating a thesaurus <p>After selecting the ISO thesaurus category, the ISO19135 register record is converted to a SKOS file and installed as a thesaurus ready for use in the metadata editor. As described above in the section on ISO19135, only the valid register items are included in the thesaurus. This behaviour and any of the mappings between ISO19135 register items and the SKOS thesaurus file can be changed or inspected by looking at the XSLT xml_iso19135TOSKOS.xsl in the convert subdirectory of the iso19135 schema plugin.</p>"},{"location":"users/features/thesaurus/#editingbrowsing-a-local-or-external-thesaurus-addremovebrowse-keywords","title":"Editing/browsing a local or external thesaurus: add/remove/browse keywords","text":"<p>From the thesaurus administration interface, click on the edit button for a local thesaurus or the view button for an external thesaurus. This interface allows:</p> <ul> <li>keywords search</li> <li>add/remove keywords for local thesaurus.</li> </ul> <p>Use the textbox and the type of search in order to search for keywords.</p> Browse interface for thesaurus Keyword description"},{"location":"users/features/thesaurus/#editing-a-register-thesaurus","title":"Editing a register thesaurus","text":"<p>A register thesaurus is created from an ISO19135 metadata record as described above, so a register thesaurus is updated by editing the ISO19135 metadata record and then regenerating the register thesaurus. The ISO19135 metadata record can be created and edited in the GeoNetwork editor.</p>"},{"location":"users/features/thesaurus/#xlinks_thesaurus","title":"Preparing to edit an ISO19135 register record","text":"<p>Register records can be very large. For example, a register record describing the ANZLIC Geographic Extent Names register has approx 1800 register items. Each register item holds not only the name of the geographic extent, but also its geographic extent and details of the lineage, relationships to other terms and potentially, the evolution of the extent (changes to name, geographic extent) including the details of changes and why those changes occurred. Editing such a large record in the GeoNetwork editor can cause performance problems for both the browser and the server because the editor constructs an HTML form describing the entire record. Fortunately a much more scaleable approach exists which is based on extracting the register items from the ISO19135 register record and storing them as subtemplates (essentially small metadata records with just the content of the register item). The process for extracting register items from an ISO19135 register record is as follows:</p> <ul> <li>search for and select the register record</li> <li>choose 'Extract register items' from the 'Actions on selected set' menu</li> </ul> Extracting subtemplates from a register record <ul> <li>After the register items have been extracted, you should see a results summary like the following.</li> </ul> <p></p> <ul> <li>The figure for 'Subtemplates extracted' is the number of register items extracted from the ISO19135 register record.</li> </ul>"},{"location":"users/features/thesaurus/#editing-a-register-item","title":"Editing a register item","text":"<p>To edit/change any of the register items that have been extracted as subtemplates, you can use the Directory management interface. This interface is accessed from the 'Administration' menu, under 'Manage Directories'. In this interface:</p> <ul> <li>select 'Register Item (GeoNetwork)' as the type of subtemplate to edit as follows.</li> </ul> Managing a Directory of subtemplates, selecting 'Register Item' subtemplates <ul> <li>enter a search term or just select the search option to return the first 50 register items.</li> <li>register items will appear in the left hand side bar, selecting on one will open an editing interface in the right hand panel.</li> </ul> Managing a Directory of subtemplates, opening a Register Item for editing"},{"location":"users/features/thesaurus/#editing-global-register-information","title":"Editing global register information","text":"<p>To edit/change any of the global register information (eg. register owner, manager, version, languages), edit the register record in the normal GeoNetwork metadata editing interface.</p>"},{"location":"users/features/thesaurus/#metadata-editing-adding-keywords","title":"Metadata editing: adding keywords","text":"<p>When editing an ISO metadata record, a keyword (or concept) picker can be used which allows the editor to:</p> <ul> <li>do searches for keywords in one or more thesauri in the catalog (search results are displayed on the left).</li> <li>select one or more keywords and add them to the selected items list (using arrows or drag &amp; drop) on the right.</li> <li>add the selected keywords directly into metadata, grouping keywords by thesaurus.</li> </ul> <p>The editor can also control how many keywords from searches are displayed in the keyword picker (default is 50).</p> Keyword selection interface (editing mode) Keywords in Metadata Record (editing mode) Keywords in Metadata Record (view mode) <p>Notice that a URL pointing to the source thesaurus is included in the Thesaurus Name citation (the actual element used for this is gmd:otherCitationDetails/gmx:FileName). The thesaurus can be downloaded as a SKOS file if it is a local or external thesaurus. For register thesauri the URL refers to the ISO19135 register record from which the thesaurus was created.</p>"},{"location":"users/features/thesaurus/#search-criteria-keywords","title":"Search criteria: keywords","text":"<p>You can search on keywords in the advanced search interface. To help select a keyword you can click in the keyword search field to bring up a list of all the keywords that have been used in the metadata records in this catalog. These keywords are indexed by Lucene on creation/update of metadata. Each keyword in the list has the number of records that use the keyword displayed next to it.</p> Thesaurus search interface Auto-complete function in thesaurus search interface <p>If an XML element named keyword-select-panel is present as a child of the search element in the config-gui.xml file (in the WEB-INF directory), then search for keyword using the keyword selection panel is available as in the metadata editor:</p> <pre><code>&lt;search&gt;\n &lt;!-- Display or not keyword selection panel in advanced search panel \n  &lt;keyword-selection-panel/&gt; \n --&gt;\n&lt;/search&gt;\n</code></pre>"},{"location":"users/features/user-self-registration/","title":"User Self-Registration Functions","text":"<p>To enable the self-registration functions, see Config User Self Registration section of this manual. When self-registration is enabled, the banner menu functions shown to a user who has not logged in should contain two additional choices: 'Forgot your password?' and 'Register' as follows:</p> <p></p> <p>If 'Register' is chosen the user will be asked to fill out a form as follows:</p> <p></p> <p>The fields in this form are self-explanatory except for the following:</p> <p>Email: The user's email address. This is mandatory and will be used as the username.</p> <p>Profile: By default, self-registered users are given the 'Registered User' profile (see previous section). If any other profile is selected:</p> <ul> <li>the user will still be given the 'Registered User' profile</li> <li>an email will be sent to the Email address nominated in the Feedback section of the 'System Administration' menu, informing them of the request for a more privileged profile</li> </ul>"},{"location":"users/features/user-self-registration/#what-happens-when-a-user-self-registers","title":"What happens when a user self-registers?","text":"<p>When a user self-registration occurs, the user receives an email with the new account details that looks something like the following:</p> <pre><code>Dear User,\n\n  Your registration at The Greenhouse GeoNetwork Site was successful.\n\n  Your account is:\n  username :    dubya.shrub@greenhouse.gov\n  password :    0110O3\n  usergroup:    GUEST\n  usertype :    REGISTEREDUSER\n\n  You've told us that you want to be \"Editor\", you will be contacted by our office soon.\n\n  To log in and access your account, please click on the link below.\n  http://greenhouse.gov/geonetwork\n\n  Thanks for your registration.\n\n    Yours sincerely,\n    The team at The Greenhouse GeoNetwork Site\n</code></pre> <p>Notice that the user has requested an 'Editor' profile. As a result an email will be sent to the Email address nominated in the Feedback section of the 'System Administration' menu which looks something like the following:</p> <p>Notice also that the user has been added to the built-in user group 'GUEST'. This is a security restriction. An administrator/user-administrator can add the user to other groups if that is required later.</p> <p>If you want to change the content of this email, you should modify INSTALL_DIR/web/geonetwork/xsl/registration-pwd-email.xsl.</p> <pre><code>Dear Admin,\n\n    Newly registered user dubya.shrub@greenhouse.gov has requested \"Editor\" access for:\n\n    Instance:     The Greenhouse GeoNetwork Site\n    Url:          http://greenhouse.gov/geonetwork\n\n    User registration details:\n\n    Name:         Dubya\n    Surname:      Shrub\n    Email:        dubya.shrub@greenhouse.gov\n    Organisation: The Greenhouse\n    Type:         gov\n    Address:      146 Main Avenue, Creationville\n    State:        Clerical\n    Post Code:    92373 \n    Country:      Mythical\n\nPlease action.\n\nThe Greenhouse GeoNetwork Site\n</code></pre> <p>If you want to change the content of this email, you should modify INSTALL_DIR/web/geonetwork/xsl/registration-prof-email.xsl.</p>"},{"location":"users/features/user-self-registration/#the-forgot-your-password-function","title":"The 'Forgot your password?' function","text":"<p>This function allows users who have forgotten their password to request a new one. For security reasons, only users that have the 'Registered User' profile can request a new password.</p> <p>If a user takes this option they will receive an email inviting them to change their password as follows:</p> <pre><code>You have requested to change your Greenhouse GeoNetwork Site password.\n\nYou can change your password using the following link:\n\nhttp://localhost:8080/geonetwork/srv/en/password.change.form?username=dubya.shrub@greenhouse.gov&amp;changeKey=635d6c84ddda782a9b6ca9dda0f568b011bb7733\n\nThis link is valid for today only.\n\nGreenhouse GeoNetwork Site\n</code></pre> <p>GeoNetwork has generated a changeKey from the forgotten password and the current date and emailed that to the user as part of a link to a change password form.</p> <p>If you want to change the content of this email, you should modify INSTALL_DIR/web/geonetwork/xsl/password-forgotten-email.xsl.</p> <p>When the user clicks on the link, a change password form is displayed in their browser and a new password can be entered. When that form is submitted to GeoNetwork, the changeKey is regenerated and checked with the changeKey supplied in the link, if they match then the password is changed to the new password supplied by the user.</p> <p>The final step in this process is a verification email sent to the email address of the user confirming that a change of password has taken place:</p> <pre><code>Your Greenhouse GeoNetwork Site password has been changed.\n\nIf you did not change this password contact the Greenhouse GeoNetwork Site helpdesk\n\nThe Greenhouse GeoNetwork Site team\n</code></pre> <p>If you want to change the content of this email, you should modify INSTALL_DIR/web/geonetwork/xsl/password-changed-email.xsl.</p>"},{"location":"users/managing_metadata/","title":"Managing Metadata","text":""},{"location":"users/managing_metadata/export/","title":"Export facilities","text":"<p>GeoNetwork has two different types of export function - both of which operate on selected sets of metadata from the search results. As such they are accessible from the \"actions on selection\" menu as shown in the following example:</p> <p></p> <p>The export functions: ZIP and CSV - highlighted</p>"},{"location":"users/managing_metadata/export/#export-as-a-zip-archive","title":"Export as a ZIP archive","text":"<p>When a selected set of metadata records is exported as a ZIP archive, each metadata record is inserted in the ZIP archive as a directory containing the metadata, any data uploaded with the metadata record and the thumbnails. This type of ZIP archive is the MEF (Metadata Exchange Format) Version 2.0. You can find more details of MEF V2 in the GeoNetwork Developers Manual.</p>"},{"location":"users/managing_metadata/export/#export-as-a-csv-file","title":"Export as a CSV file","text":"<p>When a selected set of metadata records is exported as a CSV/TXT file, the following process takes place for each metadata record:</p> <ul> <li>a brief summary of some of the elements from each selected metadata record is generated by applying the brief template from the metadata schema eg. for an iso19139 metadata record the brief template from <code>GEONETWORK_DATA_DIR/config/schema_plugins/iso19139/present/metadata-iso19139.xsl</code> would be applied to the metadata record.</li> <li>the elements common to the brief summary elements for all metadata records are extracted (as they may differ according to the metadata schema)</li> <li>a title record with comma separated element names is created</li> <li>the content of each element is laid out in comma separated form. Where there is more than one child element in the brief element (eg. for geoBox), the content from each child element is separated using '###'.</li> </ul> <p>An example of an ISO metadata record in CSV format is shown as follows:</p> <pre><code>\"schema\",\"uuid\",\"id\",\"title\",\"geoBox\",\"metadatacreationdate\"\n\"iso19139\",\"6ad9e3b8-907e-477b-9d82-1cc4efd2581d\",\"17729\",\"ER-2 AVIRIS Imagery\",\"-126.7###-116.5###48.4###51.15\",\"2001-12-10\"\n</code></pre> <p>It is possible to override the brief summary of metadata elements by creating a special template in the presentation XSLT of the metadata schema. As an example of how to do this, we will override the brief summary for the iso19139 schema and replace it with just one element: gmd:title. To do this we create an XSLT template as follows:</p> <pre><code>&lt;xsl:template match=\"gmd:MD_Metadata\" mode=\"csv\"&gt;\n  &lt;xsl:param name=\"internalSep\"/&gt;\n  &lt;metadata&gt;\n    &lt;!-- add in our field --&gt;\n    &lt;xsl:copy-of select=\"gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title\"/&gt;\n    &lt;!-- copy geonet:info element in - has special metadata eg schema name  --&gt;\n    &lt;xsl:copy-of select=\"geonet:info\"/&gt; \n  &lt;/metadata&gt;\n&lt;/xsl:template&gt;\n</code></pre> <p>This template, when added to <code>GEONETWORK_DATA_DIR/config/schema_plugins/iso19139/present/metadata-iso19139.xsl</code>, will replace the brief summary (produced by the brief template) with just one element, gmd:title.</p>"},{"location":"users/managing_metadata/formatter/","title":"Formatter","text":""},{"location":"users/managing_metadata/formatter/#introduction","title":"Introduction","text":"<p>The metadata.show service (the metadata viewer) displays a metadata document using the default metadata display stylesheets. However it can be useful to provide alternate stylesheets for displaying the metadata. Consider a central catalog that is used by several partners. Each partner might have special branding and wish to emphasize particular components of the metadata document.</p> <p>To this end the metadata.formatter.html and metadata.formatter.xml services allow an alternate stylesheet to be used for displaying the metadata. The urls of interest to an end-user are:</p> <ul> <li>/geonetwork/srv//metadata.formatter.html?xsl=&amp;id= <li>Applies the stylesheet identified by xsl parameter to the metadata identified by id param and returns the document with the html contentType</li> <li>/geonetwork/srv//metadata.formatter.xml?xsl=&amp;id= <li>Applies the stylesheet identified by xsl parameter to the metadata identified by id param and returns the document with the xml contentType</li> <li>/geonetwork/srv//metadata.formatter.list <li>Lists all of the metadata formatter ids</li> <p>Another use-case for metadata formatters is to embed the metadata in other websites. Often a metadata document contains a very large amount of data and perhaps only a subset is interesting for a particular website or perhaps the branding/stylesheets needs to be customized to match the website.</p>"},{"location":"users/managing_metadata/formatter/#administration","title":"Administration","text":"<p>A metadata formatter is a bundle of files that can be uploaded to Geonetwork as a zip file (or in the simplest case just upload the xsl).</p> <p>An administration user interface exists for managing these bundles. The starting page of the ui contains a list of the available bundles and has a field for uploading new bundles. There are three upload options:</p> <ul> <li>Single xsl file - A new bundle will be created for the xsl file and the name of the bundle will be based on the xsl file name</li> <li>Zip file (flat) - A zip file which contains a view.xsl file and other required resources at the root of the zip file so that when unzipped the files will be unzipped into the current directory</li> <li>Zip file (folder) - A zip file with a single folder that contains a view.xsl file and the other required resources so that when unzipped a single directory will be created that contains the formatter resources.</li> </ul> <p>If a bundle is uploaded any existing bundles with the same name will be replaced with the new version.</p> <p>See Bundle format section below for more details about what files can be contained in the format bundle.</p> <p>When a format in the formatter list is selected the following options become enabled:</p> <ul> <li>Delete - Delete the format bundler from Geonetwork</li> <li>Download - Download the bundle. This allows the administrator to download the bundle and edit the contents then upload at a later date</li> <li>Edit - This provides some online edit capabilities of the bundle. At the moment it allows editing of existing text files. Adding new files etc... maybe added in the future but is not possible at the moment. When edit is clicked a dialog with a list of all editable files are displayed in a tree and double clicking on a file will open a new window/tab with a text area containing the contents of the file. The webpage has buttons for saving the file or viewing a metadata with the style. The view options do NOT save the document before execution, that must be done before pressing the view buttons.</li> </ul>"},{"location":"users/managing_metadata/formatter/#bundle-format","title":"Bundle format","text":"<p>A format bundle is at minimum a single xsl file. If the xsl file is uploaded it can have any name. On the server a folder will be created that contains the xsl file but renamed to view.xsl.</p> <p>If a zip file is uploaded the zip file must contain a file view.xsl. The view.xsl file is the entry point of the transformation. It can reference other xsl stylesheets if necessary as well as link to css stylesheets or images that are contained within the bundle or elsewhere.</p> <p>The view.xsl stylesheet is executed on an xml file with essentially the following format:</p> <ul> <li> <p>root</p> </li> <li> <p>url - text of the url tag is the base url to make requests to geonetwork. An example is /geonetwork/</p> </li> <li> <p>locUrl - text of the url tag is the localised url to make requests to geonetwork. An example is /geonetwork/srv/eng/</p> </li> <li> <p>resourceUrl - a base url for accessing a resource from the bundle. An example of image tag might be:</p> <pre><code>     &lt;img src=\"{/root/resourceURL}/img.png\"/&gt;\n&lt;metadata&gt;\n</code></pre> <p>The root of the metadata document</p> </li> <li> <p>loc</p> </li> <li> <p>lang - the text of this tag is the lang code of the localization files that are loaded in this section</p> <ul> <li><code>&lt;bundle loc file&gt;</code> - the contents of the bundles loc//*.xml files <li> <p>strings - the contents of geonetwork/loc//xml/strings.xml <li> <p>schemas</p> <ul> <li><code>&lt;schema&gt;</code> - the name of the schema of the labels and codelists strings to come</li> <li>labels - the localised labels for the schema as defined in the <code>schema_plugins/&lt;schema&gt;/loc/&lt;locale&gt;/labels.xml</code></li> <li>codelists - the localised codelists labels for the schema as defined in the <code>schema_plugins/&lt;schema&gt;/loc/&lt;locale&gt;/codelists.xml</code></li> <li>strings - the localised strings for the schema as defined in the <code>schema_plugins/&lt;schema&gt;/loc/&lt;locale&gt;/strings.xml</code></li> </ul> </li> <p>If the view.xsl output needs to access resources in the formatter bundle (like css files or javascript files) the xml document contains a tag: resourceUrl that contains the url for obtaining that resource. An example of an image tag is:</p> <pre><code>&lt;img src=\"{/root/resourceURL}/img.png\"/&gt;\n</code></pre> <p>By default the strings, labels, etc... will be localized based on the language provided in the URL. For example if the url is /geonetwork/srv/eng/metadata.formatter.html?xsl=default&amp;id=32 then the language code that is used to look up the localization will be eng. However if the language code does not exist it will fall back to the Geonetwork platform default and then finally just load the first local it finds.</p> <p>Schemas and geonetwork strings all have several different translations but extra strings, etc... can be added to the formatter bundle under the loc directory. The structure would be:</p> <pre><code>loc/&lt;langCode&gt;/strings.xml\n</code></pre> <p>The name of the file does not have to be strings.xml. All xml files in the loc// directory will be loaded and added to the xml document. <p>The format of the formatter bundle is as follows:</p> <pre><code>config.properties\nview.xsl\nloc/&lt;langCode&gt;/\n</code></pre> <p>Only the view.xsl is required. If a single xsl file is uploaded then the rest of the directory structure will be created and some files will be added with default values. So a quick way to get started on a bundle is to upload an empty xsl file and then download it again. The downloaded zip file will have the correct layout and contain any other optional files.</p>"},{"location":"users/managing_metadata/formatter/#configproperties","title":"Config.properties","text":"<p>The config.properties file contains some configuration options used when creating the xml document. Some of the properties include:</p> <ul> <li>fixedLang - sets the language of the strings to the fixed language, this ensures that the formatter will always use the same language for its labels, strings, etc... no matter what language code is in the url.</li> <li>loadGeonetworkStrings - if true or non-existent then geonetwork strings will be added to the xml document before view.xsl is applied. The default is true so if this parameter is not present then the strings will be loaded</li> <li> <p>schemasToLoad - defines which schema localization files should be loaded and added to the xml document before view.xsl is applied</p> </li> <li> <p>if a comma separated list then only those schemas will be loaded</p> </li> <li>if all then all will be loaded</li> <li> <p>if none then no schemas will be loaded</p> </li> <li> <p>applicableSchemas - declares which schemas the bundle can format</p> </li> <li> <p>A comma separated list indicates specifically which schemas the bundle applies to</p> </li> <li>If the value is all (or value is empty) then all schemas are considered supported</li> </ul>"},{"location":"users/managing_metadata/fragments/","title":"Fragments","text":"<p>GeoNetwork supports metadata records that are composed from fragments of metadata. The idea is that the fragments of metadata can be used in more than one metadata record.</p> <p>Here is a typical example of a fragment. This is a responsible party and it could be used in the same metadata record more than once or in more than one metadata record if applicable.</p> <pre><code>&lt;gmd:CI_ResponsibleParty xmlns:gmd=\"http://www.isotc211.org/2005/gmd\" xmlns:gco=\"http://www.isotc211.org/2005/gco\" &gt;\n  &lt;gmd:individualName&gt;\n    &lt;gco:CharacterString&gt;John D'ath&lt;/gco:CharacterString&gt;\n  &lt;/gmd:individualName&gt;\n  &lt;gmd:organisationName&gt;\n    &lt;gco:CharacterString&gt;Mulligan &amp;amp; Sons, Funeral Directors&lt;/gco:CharacterString&gt;\n  &lt;/gmd:organisationName&gt;\n  &lt;gmd:positionName&gt;\n    &lt;gco:CharacterString&gt;Undertaker&lt;/gco:CharacterString&gt;\n  &lt;/gmd:positionName&gt;\n  &lt;gmd:role&gt;\n    &lt;gmd:CI_RoleCode codeList=\"./resources/codeList.xml#CI_RoleCode\" codeListValue=\"pointOfContact\"/&gt;\n  &lt;/gmd:role&gt;\n&lt;/gmd:CI_ResponsibleParty&gt;\n</code></pre> <p>Metadata fragments that are saved in the GeoNetwork database are called subtemplates. This is mainly for historical reasons as a subtemplate is like a template metadata record in that it can be used as a 'template' for constructing a new metadata record.</p> <p>Fragments are not handled by GeoNetwork unless xlink support is enabled. See XLink resolver in the 'System Configuration' section of this manual. The reason for this is that XLinks are the main mechanism by which fragments of metadata can be included in metadata records.</p> <p></p> <p>Fragments may be created by harvesting (see Harvesting Fragments of Metadata to support re-use), used in register thesauri (see Preparing to edit an ISO19135 register record) and linked into metadata records using the GeoNetwork editor in the javascript widget interface.</p> <p>This section of the manual will describe:</p> <ul> <li>how to manage directories of subtemplates</li> <li>how to extract fragments from an existing set of metadata records and store them as subtemplates</li> <li>how to manage the fragment cache that GeoNetwork uses to speed up access to fragments that are not in the local catalogue</li> </ul>"},{"location":"users/managing_metadata/fragments/#managing-directories-of-subtemplates","title":"Managing Directories of subtemplates","text":"<p>There are some differences between the handling of subtemplates and metadata records in GeoNetwork. Unlike metadata records, subtemplates do not have a consistent root element, the metadata schema they use may not be recognizable, they do not appear in search results (unless they are part of a metadata record) and they cannot be assigned privileges. But like metadata records, they are allocated an integer id and are stored in the GeoNetwork metadata table (with template field set to \"s\").</p> <p>Because of these differences, a separate interface has been built to search, display and edit subtemplates in directories based upon their root element. The interface is accessed from the GeoNetwork \"Administration\" page. To access this page you need to be logged in as a GeoNetwork Administrator. The relevant part of the GeoNetwork Administration page is shown in the following screenshot with the directory interface highlighted.</p> <p></p> <p>The subtemplate directory function on the Administration page</p> <p>Clicking on this link will bring up the directory interface. The directory interface allows you to browse the available subtemplates according to their root element or search for any subtemplate with content content containing the search term. A typical directory for a site is shown in the following screenshot.</p> <p></p> <p>Notice in the screenshot that we have selected the directory of subtemplates with the root element gmd:CI_Contact? The other directories for this particular site are also shown.</p> <p>The edit interface shown in the right hand panel is self-explanatory.</p>"},{"location":"users/managing_metadata/fragments/#extracting-subtemplates-from-a-metadata-record","title":"Extracting subtemplates from a metadata record","text":"<p>Many sites have existing metadata records with common information eg. contact information in an ISO CI_Contact element. Fragments such as these can be extracted from a selected set of metadata records using the \"Extract subtemplates\" function provided in the \"actions on selected set menu\".</p> <p>To use this function the following set of steps should be followed:</p> <ul> <li>Make sure you understand what an XPath is - see http://www.w3schools.com/xpath/default.asp for example.</li> <li>Identify fragments of metadata that they would like to manage as reusable subtemplates in the metadata record. This can be done using an XPath. eg. the XPath <code>/gmd:MD_Metadata/gmd:contact/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact</code> identifies metadata contact information in iso19139 metadata records. An example of such a fragment (taken from one of the GeoNetwork sample records) is shown in the following example:</li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> Viale delle Terme di Caracalla Rome 00153 Italy jippe.hoogeveen@fao.org </p> <ul> <li>Identify and record the XPath of a field or fields within the fragment which text content will be used as the title of the subtemplate. It is important to choose a set of fields that will allow a human to identify the subtemplate when they choose to either reuse the subtemplate in a new record or edit in the subtemplate directories interface. This XPath should be relative to the root element of the fragment identified in the previous step. So for example, in the fragment above we could choose <code>gmd:address/gmd:CI_Address/gmd:electronicMailAddress/gco:CharacterString</code> as the title for the fragments to be created.</li> <li>On the GeoNetwork home page, search for and then select the records from which the subtemplates will be extracted. Choose \"Extract subtemplates\" from the \"actions on selection\" menu as shown in the following screenshot:</li> </ul> <p></p> <ul> <li>Fill in the form with the information collected in the previous steps. It should look something like the following:</li> </ul> <p></p> <ul> <li>Run the extract subtemplate function in test mode (ie. without checking the \"I really want to do this\" box). This will test whether your XPaths are correct by extracting one subtemplate from the selected set of records and displaying the results.</li> <li>If you are happy with the test results, go ahead with the actual extraction by checking the \"I really want to do this\" checkbox. After the extraction completes you should see some results.</li> </ul> <p></p> <ul> <li>Finally, go to the subtemplate directory management interface and you should be able to select the root element of your subtemplates to examine the extracted subtemplates.</li> </ul> <p></p> <ul> <li>The metadata records from which the subtemplates were extracted now have xlinks to the subtemplates.</li> </ul>"},{"location":"users/managing_metadata/fragments/#managing-the-fragment-cache","title":"Managing the fragment cache","text":"<p>If metadata records in your catalog link in fragments from external sites, GeoNetwork caches these fragments after the first look up so as to reduce the amount of network traffic and speed up the display of metadata records in search results.</p> <p>The cache is handled automatically using the Java Cache System (JCS). JCS handles large caches intelligently by:</p> <ul> <li>defining a maximum number of cached objects</li> <li>using as much main memory as possible before moving to secondary storage (disk)</li> <li>providing cache persistence: the cache is saved to disk when the GeoNetwork web application is shutdown and restores the cache from disk when GeoNetwork restarts</li> </ul> <p>You can configure JCS parameters in GeoNetwork using the JCS configuration file in INSTALL_DIR/web/geonetwork/WEB-INF/classes/cache.ccf.</p> <p>Some operations in GeoNetwork (such as harvesting) that generate metadata fragments, will automatically refresh the XLink cache when a new fragment is generated. However, if you are linking fragments from an external site, then depending on how often the change, you will need to manually refresh the XLink cache. To do this you should navigate to the Administration page and select the \"Clear XLink Cache and Rebuild Index of Records with XLinks\" function as highlighted in the following screenshot of the \"Administration\" page.</p> <p></p> <p>Function to clearing the XLink cache on the Administration page</p> <p>Note</p> <p>finer control of the XLink cache will be implemented in a future version of GeoNetwork.</p>"},{"location":"users/managing_metadata/harvesting/","title":"Harvesting","text":"<p>There has always been a need to share metadata between GeoNetwork nodes and bring metadata into GeoNetwork from other sources eg. self-describing web services that deliver data and metadata or databases with organisational metadata etc.</p> <p>Harvesting is the process of collecting metadata from a remote source and storing it locally in GeoNetwork for fast searching via Lucene. This is a periodic process to do, for example, once a week. Harvesting is not a simple import: local and remote metadata are kept aligned.</p> <p>GeoNetwork is able to harvest from the following sources (for more details see below):</p> <ol> <li>Another GeoNetwork node (version 2.1 or above). See GeoNetwork Harvesting</li> <li>An old GeoNetwork 2.0 node (deprecated). See GeoNetwork 2.0 Harvester</li> <li>A WebDAV server. See WEBDAV Harvesting</li> <li>A CSW 2.0.1 or 2.0.2 catalogue server. See CSW Harvesting</li> <li>A GeoPortal 9.3.x or 10.x server. See GeoPortal REST Harvesting</li> <li>A File system acessible by GeoNetwork. See Local File System Harvesting</li> <li>An OAI-PMH server. See OAIPMH Harvesting</li> <li>An OGC service using its GetCapabilities document. These include WMS, WFS, WPS and WCS services. See Harvesting OGC Services</li> <li>An ArcSDE server. See Harvesting an ARCSDE Node</li> <li>A THREDDS catalog. See THREDDS Harvesting</li> <li>An OGC WFS using a GetFeature query. See WFS GetFeature Harvesting</li> <li>One or more Z3950 servers. See Z3950 Harvesting</li> </ol>"},{"location":"users/managing_metadata/harvesting/#mechanism-overview","title":"Mechanism overview","text":"<p>The harvesting mechanism relies on the concept of a universally unique identifier (UUID). This is a special id because it is not only unique locally to the node that generated it but it is globally unique. It is a combination of the network interface MAC address, the current date/time and a random number. Every time you create a new metadata record in GeoNetwork, a new UUID is generated and assigned to it.</p> <p>Another important concept behind the harvesting is the last change date. Every time you change a metadata record, the last change date is updated. Just storing this parameter and comparing it with a new one allows any system to find out if the metadata record has been modified since last update.</p> <p>These two concepts allow GeoNetwork to fetch remote metadata, check if it has been updated and remove it locally if it has been removed remotely. Furthermore, thanks to UUIDs, a hierarchy of harvesting nodes can be built where B harvests from C and A harvests from B.</p>"},{"location":"users/managing_metadata/harvesting/#harvesting-life-cycle","title":"Harvesting life cycle","text":"<p>When a harvester is first set up, there is no harvested metadata. During the first run, all remote matching metadata are retrieved and stored locally. For some harvesters, after the first run, only metadata that has changed will be retrieved.</p> <p>Harvested metadata are (by default) not editable for the following reasons:</p> <ol> <li>The harvesting is periodic so any local change to harvested metadata will be lost during the next run.</li> <li>The change date may be used to keep track of changes so if the metadata gets changed, the harvesting mechanism may be compromised.</li> </ol> <p>Metadata properties (like categories, privileges etc...) on harvested metadata records cannot be changed.</p> <p>Note</p> <p>if you really want to edit harvested metadata records and aren't worried by the possible issues described above, there is now a configuration setting which will permit this. See Harvesting for more details.</p> <p>The harvesting process goes on until one of the following situations arises:</p> <ol> <li>An administrator stops (deactivates) the harvester.</li> <li>An exception arises. In this case the harvester is automatically stopped.</li> </ol> <p>When a harvester is removed, all metadata records associated with that harvester are removed.</p>"},{"location":"users/managing_metadata/harvesting/#multiple-harvesting-and-hierarchies","title":"Multiple harvesting and hierarchies","text":"<p>Catalogues that use UUIDs to identify metadata records (eg. GeoNetwork) can be harvested several times without having to take care about metadata overlap.</p> <p>As an example, consider the GeoNetwork harvesting type which allows one GeoNetwork node to harvest metadata records from another GeoNetwork node and the following scenario:</p> <ol> <li>Node (A) has created metadata (a)</li> <li>Node (B) harvests (a) from (A)</li> <li>Node (C) harvests (a) from (B)</li> <li>Node (D) harvests from both (A), (B) and (C)</li> </ol> <p>In this scenario, Node (D) will get the same metadata (a) from all 3 nodes (A), (B), (C). The metadata will flow to (D) following 3 different paths but thanks to its UUID only one copy will be stored. When (a) is changed in (A), a new version will flow to (D) but, thanks to the change date, the copy in (D) will be updated with the most recent version.</p>"},{"location":"users/managing_metadata/harvesting/#harvesting_fragments","title":"Harvesting Fragments of Metadata to support re-use","text":"<p>All the harvesters except for the THREDDS and OGC WFS GetFeature harvester create a complete metadata record that is inserted into or replaces an existing record in the catalog. However, it's often the case that:</p> <ul> <li>the metadata harvested from an external source is really only one or more fragments of the metadata required to describe a resource such as a dataset</li> <li>you might want to combine harvested fragments of metadata with manually entered or static metadata in a single record</li> <li>a fragment of metadata harvested from an external source may be required in more than one metadata record</li> </ul> <p>For example, you may only be interested in harvesting the geographic extent and/or contact information from an external source and manually entering or maintaining the remainder of the content in the metadata record. You may also be interested in re-using the contact information for a person or organisation in more than one metadata record.</p> <p>To support this capability, both the WFS GetFeature Harvester and the THREDDS harvester, allow fragments of metadata to be harvested and linked or copied into a template record to create metadata records. Fragments that are saved into the GeoNetwork database are called subtemplates and can be used in more than one metadata record. These concepts are shown in the diagram below.</p> Harvesting Metadata Fragments <p>As shown above, an example of a metadata fragment is the gmd:contactInfo element of an iso19139 document. This element contains contact details for an individual or an organisation. If a fragment is stored in the geonetwork database as a subtemplate for a given person or organisation, then this fragment can be referenced in metadata records where this organisation or individual is specified using an XML linking mechanism called XLink. An example of an XLink is shown in the following diagram.</p> <p></p>"},{"location":"users/managing_metadata/harvesting/#https-support","title":"HTTPS support","text":"<p>Harvesting between GeoNetwork nodes may require the HTTPS protocol. If harvesting from an https GeoNetwork URL, the server will need to have a trusted certificate available in a JVM keystore accessible to the GeoNetwork node running the harvest.</p> <p>If you don't have a trusted certificate in the JVM keystore being used by GeoNetwork, the harvester may issue an exception like this when you try to harvest from the https GeoNetwork:</p> <pre><code>javax.net.ssl.SSLHandshakeException: \n   sun.security.validator.ValidatorException: PKIX path building failed: \n   sun.security.provider.certpath.SunCertPathBuilderException: \n   unable to find valid certification path to requested target\n\nCaused by: sun.security.validator.ValidatorException: \n   PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: \n   unable to find valid certification path to requested target\n\nCaused by: sun.security.provider.certpath.SunCertPathBuilderException: \n   unable to find valid certification path to requested target\n</code></pre> <p>The server certificate for the GeoNetwork server being harvested needs to be added to the JVM keystore with keytool in order to be trusted.</p> <p>An alternative way to add the certificate is to use a script like:</p> <pre><code>## JAVA SSL Certificate import script\n## Based on original MacOs script by LouiSe@louise.hu : http://louise.hu\n##\n## Usage: ./ssl_key_import.sh &lt;sitename&gt; &lt;port&gt;\n##\n## Example: ./ssl_key_import.sh mail.google.com 443 (to read certificate from https://mail.google.com)\n\n## Compile and start \njavac InstallCert.java\njava InstallCert $1:$2\n\n## Copy new cert into local JAVA keystore\necho \"Please, enter admnistrator password:\"\nsudo cp jssecacerts $JAVA_HOME/jre/lib/security/jssecacerts\n# Comment previous line and uncomment next one for MacOs\n#sudo cp jssecacerts /Library/Java/Home/lib/security/\n</code></pre> <p>To use the script, the Java compiler must be installed and the file InstallCert.java, must be downloaded and placed in the same directory as the script.</p> <p>The script will add the certificate to the JVM keystore, if you run it as follows::</p> <pre><code>$ ./ssl_key_import.sh https_server_name 443\n</code></pre>"},{"location":"users/managing_metadata/harvesting/#the-main-page","title":"The main page","text":"<p>To access the harvesting main page you have to be logged in as an administrator. From the administration page, click the link shown below with a red rectangle.</p> How to access the harvesting main page <p>The harvesting main page will then be displayed.</p> The harvesting main page <p>The page shows a list of the currently defined harvesters and a set of buttons for management functions. The meaning of each column in the list of harvesters is as follows:</p> <ol> <li>Select Check box to select one or more harvesters. The selected harvesters will be affected by the first row of buttons (activate, deactivate, run, remove). For example, if you select three harvesters and press the Remove button, they will all be removed.</li> <li>Name This is the harvester name provided by the administrator.</li> <li>Type The harvester type (eg. GeoNetwork, WebDAV etc...).</li> <li>Status An icon showing current status. See Harvesting Status and Error Icons for the different icons and status descriptions.</li> <li>Errors An icon showing the result of the last harvesting run, which could have succeeded or not. See Harvesting Status and Error Icons for the different icons and error descriptions. Hovering the cursor over the icon will show detailed information about the last harvesting run.</li> <li>Run at and Every: Scheduling of harvester runs. Essentially the time of the day + how many hours between repeats and on which days the harvester will run.</li> <li>Last run The date, in ISO 8601 format, of the most recent harvesting run.</li> <li> <p>Operation A list of buttons/links to operations on a harvester.</p> </li> <li> <p>Selecting Edit will allow you to change the parameters for a harvester.</p> </li> <li>Selecting Clone will allow you to create a clone of this harvester and start editing the details of the clone.</li> <li>Selecting History will allow you to view/change the harvesting history for a harvester - see Harvest History.</li> </ol> <p>At the bottom of the list of harvesters are two rows of buttons. The first row contains buttons that can operate on a selected set of harvesters. You can select the harvesters you want to operate on using the check box in the Select column and then press one of these buttons. When the button finishes its action, the check boxes are cleared. Here is the meaning of each button:</p> <ol> <li>Activate When a new harvester is created, the status is inactive. Use this button to make it active and start the harvester(s) according to the schedule it has/they have been configured to use.</li> <li>Deactivate Stops the harvester(s). Note: this does not mean that currently running harvest(s) will be stopped. Instead, it means that the harvester(s) will not be scheduled to run again.</li> <li>Run Start the selected harvesters immediately. This is useful for testing harvester setups.</li> <li>Remove Remove all currently selected harvesters. A dialogue will ask the user to confirm the action.</li> </ol> <p>The second row contains general purpose buttons. Here is the meaning of each button:</p> <ol> <li>Back Simply returns to the main administration page.</li> <li>Add This button creates a new harvester.</li> <li>Refresh Refreshes the current list of harvesters from the server. This can be useful to see if the harvesting list has been altered by someone else or to get the status of any running harvesters.</li> <li>History Show the harvesting history of all harvesters. See Harvest History for more details.</li> </ol>"},{"location":"users/managing_metadata/harvesting/#admin_harvesting_status","title":"Harvesting Status and Error Icons","text":"Icon Status Description Inactive The harvester is stopped. Active The harvesting engine is waiting for the next scheduled run time of the harvester. Running The harvesting engine is currently running, fetching metadata. When the process is finished, the result of the harvest will be available as an icon in the Errors column <p>Possible status icons</p> Icon Description The harvesting was OK, no errors were found. In this case, a tool tip will show some harvesting results (like the number of harvested metadata etc...). The harvesting was aborted due to an unexpected condition. In this case, a tool tip will show some information about the error. <p>Possible error icons</p>"},{"location":"users/managing_metadata/harvesting/#harvesting-result-tips","title":"Harvesting result tips","text":"<p>When a harvester runs and completes, a tool tip showing detailed information about the harvesting process is shown in the Errors column for the harvester. If the harvester succeeded then hovering the cursor over the tool tip will show a table, with some rows labelled as follows:</p> <ul> <li>Total - This is the total number of metadata found remotely. Metadata with the same id are considered as one.</li> <li>Added - Number of metadata added to the system because they were not present locally.</li> <li>Removed - Number of metadata that have been removed locally because they are not present in the remote server anymore.</li> <li>Updated - Number of metadata that are present locally but that needed to be updated because their last change date was different from the remote one.</li> <li>Unchanged - Local metadata left unchanged. Their remote last change date did not change.</li> <li>Unknown schema - Number of skipped metadata because their format was not recognised by GeoNetwork.</li> <li>Unretrievable - Number of metadata that were ready to be retrieved from the remote server but for some reason there was an exception during the data transfer process.</li> <li>Bad Format - Number of skipped metadata because they did not have a valid XML representation.</li> <li>Does not validate - Number of metadata which did not validate against their schema. These metadata were harvested with success but skipped due to the validation process. Usually, there is an option to force validation: if you want to harvest these metadata anyway, simply turn/leave it off.</li> <li>Thumbnails/Thumbnails failed - Number of metadata thumbnail images added/that could not be added due to some failure.</li> <li>Metadata URL attribute used - Number of layers/featuretypes/coverages that had a metadata URL that could be used to link to a metadata record (OGC Service Harvester only).</li> <li>Services added - Number of ISO19119 service records created and added to the catalogue (for THREDDS catalog harvesting only).</li> <li>Collections added - Number of collection dataset records added to the catalogue (for THREDDS catalog harvesting only).</li> <li>Atomics added - Number of atomic dataset records added to the catalogue (for THREDDS catalog harvesting only).</li> <li>Subtemplates added - Number of subtemplates (= fragment visible in the catalog) added to the metadata catalog.</li> <li>Subtemplates removed - Number of subtemplates (= fragment visible in the catalog) removed from the metadata catalog.</li> <li>Fragments w/Unknown schema - Number of fragments which have an unknown metadata schema.</li> <li>Fragments returned - Number of fragments returned by the harvester.</li> <li>Fragments matched - Number of fragments that had identifiers that in the template used by the harvester.</li> <li>Existing datasets - Number of metadata records for datasets that existed when the THREDDS harvester was run.</li> <li>Records built - Number of records built by the harvester from the template and fragments.</li> <li>Could not insert - Number of records that the harvester could not insert into the catalog (usually because the record was already present eg. in the Z3950 harvester this can occur if the same record is harvested from different servers).</li> </ul> Result vs harvesting type GeoNetwork WebDAV CSW OAI-PMH OGC Service OGC WFS Features THREDDS Z3950 Server(s) GeoPortal REST <p>Total Added Removed Updated Unchanged Unknown schema Unretrievable Bad Format Does Not Validate Thumbnails / Thumbnails failed Metadata URL attribute used Services Added Collections Added Atomics Added Subtemplates Added Subtemplates removed Fragments w/Unknown Schema Fragments Returned Fragments Matched Existing datasets Records Built Could not insert</p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p></p> <p></p> <p></p> <p> </p> <p></p> <p></p> <p></p> <p></p> <p> </p> <p> </p> <p></p> <p> </p> <p>Result information supported by harvesting types</p>"},{"location":"users/managing_metadata/harvesting/#adding-new-harvesters","title":"Adding new harvesters","text":"<p>The Add button in the main page allows you to add new harvesters. A drop down list is then shown with all the available harvester protocols.</p> Adding a new harvester <p>You can choose the type of harvest you intend to perform and press Add to begin the process of adding the harvester. The supported harvesters and details of what to do next are in the following sections:</p> <p>gn/index.rst webdav/index.rst csw/index.rst geoPREST/index.rst localfilesystem/index.rst gn2.0/index.rst oaipmh/index.rst ogcwxs/index.rst sde/index.rst thredds/index.rst wfs-getfeatures/index.rst z3950/index.rst</p>"},{"location":"users/managing_metadata/harvesting/#harvest_history","title":"Harvest History","text":"<p>Each time a harvester is run, it generates a status report of what was harvested and/or what went wrong (eg. exception report). These reports are stored in a table in the database used by GeoNetwork. The entire harvesting history for all harvesters can be recalled using the History button on the Harvesting Management page. The harvest history for an individual harvester can also be recalled using the History link in the Operations for that harvester.</p> An example of the Harvesting Management Page with History functions An example of the Harvesting History for all harvesters An example of the Harvesting History for a harvester <p>Once the harvest history has been displayed it is possible to:</p> <ul> <li>expand the detail of any exceptions</li> <li>sort the history by harvest date (or in the case of the history of all harvesters, by harvester name)</li> <li>delete any history entry or the entire history</li> </ul>"},{"location":"users/managing_metadata/harvesting/common_categories/","title":"Common categories","text":"<ul> <li>Select one or more categories from the scrolling list. The harvested metadata will be assigned to the selected categories.</li> </ul>"},{"location":"users/managing_metadata/harvesting/common_notes/","title":"Common notes","text":"<ul> <li>in order to be successfully harvested, metadata records retrieved from the remote site must match a metadata schema in the local GeoNetwork instance</li> </ul>"},{"location":"users/managing_metadata/harvesting/common_options/","title":"Common options","text":"<ul> <li>Run at - The time when the harvester will run.</li> <li>Will run again every - Choose an interval from the drop down list and then select the days for which this scheduling will take place.</li> <li>One run only - Checking this box will cause the harvester to run only when manually started using the <code>Run</code> button on the Harvesting Management page.</li> </ul>"},{"location":"users/managing_metadata/harvesting/common_privileges/","title":"Common privileges","text":"<ul> <li>Groups - Groups can be selected from the scrolling list. When the <code>Add</code> button is pushed, a row of privileges will be created below the scrolling list for each group. Privileges can then be checked/unchecked for each group as required.</li> <li>Remove - To remove a row click on the <code>Remove</code> button on the right of the row.</li> </ul>"},{"location":"users/managing_metadata/harvesting/csw/","title":"CSW Harvesting","text":"<p>This harvester will connect to a remote CSW server and retrieve metadata records that match the query parameters specified.</p>"},{"location":"users/managing_metadata/harvesting/csw/#adding-a-csw-harvester","title":"Adding a CSW harvester","text":"Adding a Catalogue Services for the Web harvesting node <p>The figure above shows the options available:</p> <ul> <li> <p>Site - Options about the remote site.</p> <ul> <li>Name - This is a short description of the remote site. It will be shown in the harvesting main page as the name for this instance of the CSW harvester.</li> <li>Service URL - The URL of the capabilities document of the CSW server to be harvested. eg. http://geonetwork-site.com/srv/eng/csw?service=CSW&amp;request=GetCabilities&amp;version=2.0.2. This document is used to discover the location of the services to call to query and retrieve metadata.</li> <li>Icon - An icon to assign to harvested metadata. The icon will be used when showing harvested metadata records in the search results.</li> <li>Use account - Account credentials for basic HTTP authentication on the CSW server.</li> </ul> </li> <li> <p>Search criteria - Using the Add button, you can add several search criteria. You can query only the fields recognised by the CSW protocol.</p> </li> <li> <p>Options - Scheduling options.</p> </li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> -   Options - Specific harvesting options for this harvester.</p> <pre><code>-   *Validate* - If checked, the metadata will be validated after retrieval. If the validation does not pass, the metadata will be skipped.\n</code></pre> <ul> <li>Privileges - Assign privileges to harvested metadata.</li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> -   Categories</p>"},{"location":"users/managing_metadata/harvesting/csw/#notes","title":"Notes","text":""},{"location":"users/managing_metadata/harvesting/geoPREST/","title":"GeoPortal REST Harvesting","text":"<p>This harvester will connect to a remote GeoPortal version 9.3.x or 10.x server and retrieve metadata records that match the query parameters specified using the GeoPortal REST API.</p>"},{"location":"users/managing_metadata/harvesting/geoPREST/#adding-a-geoportal-rest-harvester","title":"Adding a GeoPortal REST harvester","text":"Adding a GeoPortal REST harvester <p>The figure above shows the options available:</p> <ul> <li> <p>Site - Options about the remote site.</p> <ul> <li>Name - This is a short description of the remote site. It will be shown in the harvesting main page as the name for this instance of the GeoPortal REST harvester.</li> <li>Base URL - The base URL of the GeoPortal server to be harvested. eg. http://yourhost.com/geoportal. The harvester will add the additional path required to access the REST services on the GeoPortal server.</li> <li>Icon - An icon to assign to harvested metadata. The icon will be used when showing harvested metadata records in the search results.</li> </ul> </li> <li> <p>Search criteria - Using the Add button, you can add several search criteria. You can query any field on the GeoPortal server using the Lucene query syntax described at http://webhelp.esri.com/geoportal_extension/9.3.1/index.htm#srch_lucene.htm.</p> </li> <li> <p>Options - Scheduling options.</p> </li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> -   Harvested Content - Options that are applied to harvested content.     -   Apply this XSLT to harvested records - Choose an XSLT here that will convert harvested records to a different format. See notes section below for typical usage.     -   Validate - If checked, the metadata will be validated after retrieval. If the validation does not pass, the metadata will be skipped. -   Privileges - Assign privileges to harvested metadata.</p> <p><pre><code>&lt;!-- --&gt;\n</code></pre> -   Categories</p>"},{"location":"users/managing_metadata/harvesting/geoPREST/#notes","title":"Notes","text":"<ul> <li> <p>this harvester uses two REST services from the GeoPortal API:</p> </li> <li> <p><code>rest/find/document</code> with searchText parameter to return an RSS listing of metadata records that meet the search criteria (maximum 100000)</p> </li> <li> <p><code>rest/document</code> with id parameter from each result returned in the RSS listing</p> </li> <li> <p>this harvester has been tested with GeoPortal 9.3.x and 10.x. It can be used in preference to the CSW harvester if there are issues with the handling of the OGC standards etc.</p> </li> </ul> GeoPortal REST harvester for a version 10 site <ul> <li>typically ISO19115 metadata produced by the Geoportal software will not have a 'gmd' prefix for the namespace <code>http://www.isotc211.org/2005/gmd</code>. GeoNetwork XSLTs will not have any trouble understanding this metadata but will not be able to map titles and codelists in the viewer/editor. To fix this problem, please select the <code>Add-gmd-prefix</code> XSLT for the Apply this XSLT to harvested records in the Harvested Content set of options described earlier</li> </ul>"},{"location":"users/managing_metadata/harvesting/gn/","title":"GeoNetwork Harvesting","text":"<p>This is the standard and most powerful harvesting protocol used in GeoNetwork. It is able to log in into the remote site, to perform a standard search using the common query fields and to import all matching metadata. Furthermore, the protocol will try to keep both remote privileges and categories of the harvested metadata if they exist locally.</p>"},{"location":"users/managing_metadata/harvesting/gn/#adding-a-geonetwork-harvester","title":"Adding a GeoNetwork harvester","text":"<p>Adding a GeoNetwork Harvester</p> <p>A description of the options follows:</p> <ul> <li> <p>Site - Information about the GeoNetwork site you wish to harvest from. The URL should have the format: <code>http[s]://server[:port]/geonetwork</code>. If you want to search privileged metadata you have to specify account credentials that are valid on the remote GeoNetwork site. The Name parameter is a short description of the remote site that will be used as the name for this instance of the GeoNetwork harvester.</p> <ul> <li>Set categories if exist locally - This option allows to maintain category assignments. If the metadata belongs to a category on the remote site and a category with the same name is present on the local site, then the harvested metadata will be assigned to that category if this option is checked on.</li> <li>Use full MEF format - If checked, then the remote site will include any thumbnails and data files with the metadata record they are attached too. The option refers to the fact that the MEF file type used to in this case will be the full export type.</li> <li>XSL filter name - This option will apply a custom XSL filter to the metadata record before it is inserted into the local database. A common use case is to anoymize metadata records using the anonymizer process which remove or rename contact personal information (See the Processing section for more information).</li> </ul> </li> <li> <p>Search criteria - In this section you can specify search parameters to select metadata records for harvesting. The parameters are the same or similar to those found on the GeoNetwork search form.</p> <ul> <li>source: A GeoNetwork site can contain both its own metadata and metadata harvested from other sources. Use the Retrieve sources button to retrieve the sources from the remote site. You can then choose a source name to constrain the search to a particular source. eg. You could constrain the search to the source representing metadata that has not been harvested from other sites. Leaving source blank will retrieve all metadata from the remote site.</li> </ul> <p>You can add multiple search criteria through the Add button: multiple searches will be performed and results merged. Search criteria sets an be removed using the small cross button at the top left of the criteria set. If no search criteria are added, a global unconstrained search will be performed.</p> </li> <li> <p>Options - Scheduling Options.</p> </li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> -   Harvested Content</p> <pre><code>-   *Validate* - if checked then harvested metadata records will be validated against the relevant metadata schema. Invalid records will be rejected.\n</code></pre> <ul> <li> <p>Privileges - Use this section to handle remote group privileges. Press the Retrieve groups button and the list of groups on the remote site will be returned. You can then assign a copy policy to each group.</p> <ul> <li> <p>The All group has a different policy to the other groups:</p> <ol> <li> <p>Copy: Privileges are copied.</p> </li> <li> <p>Copy to Intranet: Privileges are copied but to the Intranet group. This allows public metadata to be protected.</p> </li> <li> <p>Don't copy: Privileges are not copied and harvested metadata will not be publicly visible.</p> </li> </ol> </li> <li> <p>For all other groups the policies are these:</p> <ol> <li>Copy: Privileges are copied only if there is a local group with the same (not localised) name as the remote group.</li> <li> <p>Create and copy: Privileges are copied. If there is no local group with the same name as the remote group then it is created.</p> </li> <li> <p>Don't copy: Privileges are not copied.</p> </li> </ol> </li> </ul> </li> </ul> <p>Note</p> <p>The Intranet group is not considered because it does not make sense to copy its privileges.</p> <ul> <li>Categories<ul> <li>Select one or more categories from the scrolling list. The harvested metadata will be assigned to the selected categories (except where the Set categories if exist locally option described above causes the metadata to be assigned to a matching local category).</li> </ul> </li> </ul>"},{"location":"users/managing_metadata/harvesting/gn/#notes","title":"Notes","text":"<ul> <li>This harvester will not work if the remote site has a version prior to GeoNetwork 2.1 eg. GeoNetwork 2.0.2.</li> <li>During harvesting, site icons are harvested and local copies are updated. Icons are propagated to new sites as soon as those sites harvest from this one.</li> <li>The metadata record uuid is taken from the info.xml file of the MEF bundle.</li> </ul>"},{"location":"users/managing_metadata/harvesting/gn2.0/","title":"GeoNetwork 2.0 Harvester","text":"<p>GeoNetwork 2.1 introduced a new powerful harvesting engine which is not compatible with GeoNetwork version 2.0 based catalogues. Old 2.0 servers can still harvest from 2.1 servers but harvesting metadata from a v2.0 server requires this harvesting type. Due to the fact that GeoNetwork 2.0 was released more than 5 years ago, this harvesting type is deprecated.</p>"},{"location":"users/managing_metadata/harvesting/localfilesystem/","title":"Local File System Harvesting","text":"<p>This harvester will harvest metadata as XML files from a filesystem available on the machine running the GeoNetwork server.</p>"},{"location":"users/managing_metadata/harvesting/localfilesystem/#adding-a-local-file-system-harvester","title":"Adding a Local File System harvester","text":"Adding a Local Filesystem harvester <p>The figure above shows the options available:</p> <ul> <li> <p>Site - Options about the remote site.</p> <ul> <li>Name - This is a short description of the filesystem harvester. It will be shown in the harvesting main page as the name for this instance of the Local Filesystem harvester.</li> <li>Directory - The path name of the directory containing the metadata (as XML files) to be harvested.</li> <li>Recurse - If checked and the Directory path contains other directories, then the harvester will traverse the entire file system tree in that directory and add all metadata files found.</li> <li>Keep local if deleted at source - If checked then metadata records that have already been harvested will be kept even if they have been deleted from the Directory specified.</li> <li>Icon - An icon to assign to harvested metadata. The icon will be used when showing harvested metadata records in the search results.</li> </ul> </li> <li> <p>Options - Scheduling options.</p> </li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> -   Harvested Content - Options that are applied to harvested content.     -   Apply this XSLT to harvested records - Choose an XSLT here that will convert harvested records to a different format.     -   Validate - If checked, the metadata will be validated after retrieval. If the validation does not pass, the metadata will be skipped. -   Privileges - Assign privileges to harvested metadata.</p> <p><pre><code>&lt;!-- --&gt;\n</code></pre> -   Categories</p>"},{"location":"users/managing_metadata/harvesting/localfilesystem/#notes","title":"Notes","text":"<ul> <li>in order to be successfully harvested, metadata records retrieved from the file system must match a metadata schema in the local GeoNetwork instance</li> </ul>"},{"location":"users/managing_metadata/harvesting/oaipmh/","title":"OAIPMH Harvesting","text":"<p>This is a harvesting protocol that is widely used among libraries. GeoNetwork implements version 2.0 of the protocol.</p>"},{"location":"users/managing_metadata/harvesting/oaipmh/#adding-an-oai-pmh-harvester","title":"Adding an OAI-PMH harvester","text":"<p>An OAI-PMH server implements a harvesting protocol that GeoNetwork, acting as a client, can use to harvest metadata.</p> Adding an OAI-PMH harvesting harvester <p>Configuration options:</p> <ul> <li>Site - Options describing the remote site.<ul> <li>Name - This is a short description of the remote site. It will be shown in the harvesting main page as the name for this instance of the OAIPMH harvester.</li> <li>URL - The URL of the OAI-PMH server from which metadata will be harvested.</li> <li>Icon - An icon to assign to harvested metadata. The icon will be used when showing search results.</li> <li>Use account - Account credentials for basic HTTP authentication on the OAIPMH server.</li> </ul> </li> <li>Search criteria - This allows you to select metadata records for harvest based on certain criteria:<ul> <li>From - You can provide a start date here. Any metadata whose last change date is equal to or greater than this date will be harvested. To add or edit a value for this field you need to use the icon alongside the text box. This field is optional so if you don't provide a start date the constraint is dropped. Use the icon to clear the field.</li> <li>Until - Functions in the same way as the From parameter but adds an end constraint to the last change date search. Any metadata whose last change data is less than or equal to this data will be harvested.</li> <li>Set - An OAI-PMH server classifies metadata into sets (like categories in GeoNetwork). You can request all metadata records that belong to a set (and any of its subsets) by specifying the name of that set here.</li> <li>Prefix - 'Prefix' means metadata format. The oai_dc prefix must be supported by all OAI-PMH compliant servers.</li> <li>You can use the Add button to add more than one Search Criteria set. Search Criteria sets can be removed by clicking on the small cross at the top left of the set.</li> </ul> </li> </ul> <p>Note</p> <p>the 'OAI provider sets' drop down next to the Set text box and the 'OAI provider prefixes' drop down next to the Prefix textbox are initially blank. After specifying the connection URL, you can press the Retrieve Info button, which will connect to the remote OAI-PMH server, retrieve all supported sets and prefixes and fill the drop downs with these values. Selecting a value from either of these drop downs will fill the appropriate text box with the selected value.</p> <ul> <li>Options - Scheduling Options.</li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> -   Privileges</p> <p><pre><code>&lt;!-- --&gt;\n</code></pre> -   Categories</p>"},{"location":"users/managing_metadata/harvesting/oaipmh/#notes","title":"Notes","text":"<ul> <li>if you request the oai_dc output format, GeoNetwork will convert it to Dublin Core format.</li> <li>when you edit a previously created OAIPMH harvester instance, both the set and prefix drop down lists will be empty. You have to press the retrieve info button again to connect to the remote server and retrieve set and prefix information.</li> <li>the id of the remote server must be a UUID. If not, metadata can be harvested but during hierarchical propagation id clashes could corrupt harvested metadata.</li> </ul>"},{"location":"users/managing_metadata/harvesting/ogcwxs/","title":"Harvesting OGC Services","text":"<p>An OGC service implements a GetCapabilities operation that GeoNetwork, acting as a client, can use to produce metadata for the service (ISO19119) and resources delivered by the service (ISO19115/19139). This harvester supports the following OGC services and versions:</p> <ul> <li>Web Map Service (WMS) - versions 1.0.0, 1.1.1, 1.3.0</li> <li>Web Feature Service (WFS) - versions 1.0.0 and 1.1.0</li> <li>Web Coverage Service (WCS) - version 1.0.0</li> <li>Web Processing Service (WPS) - version 0.4.0 and 1.0.0</li> <li>Catalogue Services for the Web (CSW) - version 2.0.2</li> <li>Sensor Observation Service (SOS) - version 1.0.0</li> </ul>"},{"location":"users/managing_metadata/harvesting/ogcwxs/#adding-an-ogc-service-harvester","title":"Adding an OGC Service Harvester","text":"Adding an OGC service harvesting node <p>Configuration options:</p> <ul> <li> <p>Site</p> <ul> <li>Name - The name of the catalogue and will be one of the search criteria.</li> <li>Type - The type of OGC service indicates if the harvester has to query for a specific kind of service. Supported type are WMS (1.0.0, 1.1.1, 1.3.0), WFS (1.0.0 and 1.1.0), WCS (1.0.0), WPS (0.4.0 and 1.0.0), CSW (2.0.2) and SOS (1.0.0).</li> <li>Service URL - The service URL is the URL of the service to contact (without parameters like \"REQUEST=GetCapabilities\", \"VERSION=\", ...). It has to be a valid URL like http://your.preferred.ogcservice/type_wms.</li> <li>Metadata language - Required field that will define the language of the metadata. It should be the language used by the OGC web service administrator.</li> <li>ISO topic category - Used to populate the topic category element in the metadata. It is recommended to choose one as the topic category is mandatory for the ISO19115/19139 standard if the hierarchical level is \"datasets\".</li> <li>Type of import - By default, the harvester produces one service metadata record. Check boxes in this group determine the other metadata that will be produced. <pre><code>-   *Create metadata for layer elements using GetCapabilities information*: Checking this option means that the harvester will loop over datasets served by the service as described in the GetCapabilities document.\n-   *Create metadata for layer elements using MetadataURL attributes*: Checkthis option means that the harvester will generate metadata from an XML document referenced in the MetadataUrl attribute of the dataset in the GetCapabilities document. If the document referred to by this attribute is not valid (eg. unknown schema, bad XML format), the GetCapabilites document is used as per the previous option.\n-   *Create thumbnails for WMS layers*: If harvesting from an OGC WMS, then checking this options means that thumbnails will be created during harvesting.\n</code></pre> </li> <li>Target schema - The metadata schema of the dataset metadata records that will be created by this harvester.</li> <li>Icon - The default icon displayed as attribution logo for metadata created by this harvester.</li> </ul> </li> <li> <p>Options - Scheduling Options.</p> </li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> -   Privileges</p> <p><pre><code>&lt;!-- --&gt;\n</code></pre> -   Category for service - Metadata for the harvested service is assigned to the category selected in this option (eg. \"interactive resources\"). -   Category for datasets - Metadata for the harvested datasets is assigned to the category selected in this option (eg. \"datasets\").</p>"},{"location":"users/managing_metadata/harvesting/ogcwxs/#notes","title":"Notes","text":"<ul> <li>every time the harvester runs, it will remove previously harvested records and create new records. GeoNetwork will generate the uuid for all metadata (both service and datasets). The exception to this rule is dataset metadata created using the MetadataUrl tag is in the GetCapabilities document, in that case, the uuid of the remote XML document is used instead</li> <li>thumbnails can only be generated when harvesting an OGC Web Map Service (WMS). The WMS should support the WGS84 projection</li> <li>the chosen Target schema must have the support XSLTs which are used by the harvester to convert the GetCapabilities statement to metadata records from that schema. If in doubt, use iso19139.</li> </ul>"},{"location":"users/managing_metadata/harvesting/sde/","title":"Harvesting an ARCSDE Node","text":"<p>This is a harvesting protocol for metadata stored in an ArcSDE installation.</p>"},{"location":"users/managing_metadata/harvesting/sde/#adding-an-arcsde-harvester","title":"Adding an ArcSDE harvester","text":"<p>The harvester identifies the ESRI metadata format: ESRI ISO, ESRI FGDC to apply the required xslts to transform metadata to ISO19139</p> Adding an ArcSDE harvesting node <p>Configuration options:</p> <ul> <li> <p>Site</p> <ul> <li>Name - This is a short description of the node. It will be shown in the harvesting main page.</li> <li>Server - ArcSde server IP address or name</li> <li>Port - ArcSde service port (typically 5151)</li> <li>Username - Username to connect to ArcSDE server</li> <li>Password - Password of the ArcSDE user</li> <li>Database name - ArcSDE instance name (typically esri_sde)</li> </ul> </li> <li> <p>Options</p> </li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> -   Harvested Content     -   Validate - if checked then harvested metadata records will be validated against the relevant metadata schema. Invalid records will be rejected. -   Privileges</p> <p><pre><code>&lt;!-- --&gt;\n</code></pre> -   Categories</p>"},{"location":"users/managing_metadata/harvesting/thredds/","title":"THREDDS Harvesting","text":"<p>THREDDS catalogs describe inventories of datasets. They are organised in a hierarchical manner, listing descriptive information and access methods for each dataset. They typically catalog netCDF datasets but are not restricted to these types of files. This harvesting type crawls through a THREDDS catalog harvesting metadata for datasets and services described in it or in referenced netCDF datasets. This harvesting type can extract fragments of metadata from the THREDDS catalog, allowing the user to link or copy these fragments into a template to create metadata records.</p>"},{"location":"users/managing_metadata/harvesting/thredds/#adding-a-thredds-catalog-harvester","title":"Adding a THREDDS Catalog Harvester","text":"Adding a THREDDS catalog harvester <p>The available options are:</p> <ul> <li> <p>Site</p> <ul> <li>Name - This is a short description of the THREDDS catalog. It will be shown in the harvesting main page as the name of this THREDDS harvester instance. </li> <li>Catalog URL - The remote URL of the THREDDS Catalog from which metadata will be harvested. This must be the xml version of the catalog (i.e. ending with .xml). The harvester will crawl through all datasets and services defined in this catalog creating metadata for them as specified by the options described further below. </li> <li>Metadata language - Use this option to specify the language of the metadata to be harvested. </li> <li>ISO topic category - Use this option to specify the ISO topic category of service metadata. </li> <li>Create ISO19119 metadata for all services in catalog - Select this option to generate iso19119 metadata for services defined in the THREDDS catalog (eg. OpenDAP, OGC WCS, ftp) and for the THREDDS catalog itself. </li> <li>Create metadata for Collection datasets - Select this option to generate metadata for each collection dataset (THREDDS dataset containing other datasets). Creation of metadata can be customised using options that are displayed when this option is selected as described further below. </li> <li>Create metadata for Atomic datasets - Select this option to generate metadata for each atomic dataset (THREDDS dataset not containing other datasets -- for example cataloguing a netCDF dataset). Creation of metadata can be customised using options that are displayed when this option is selected as described further below. <pre><code>&gt; -   *Ignore harvesting attribute* - Select this option to harvest metadata for selected datasets regardless of the harvest attribute for the dataset in the THREDDS catalog. If this option is not selected, metadata will only be created for datasets that have a harvest attribute set to true.\n&gt;\n&gt; -   *Extract DIF metadata elements and create ISO metadata* - Select this option to generate ISO metadata for datasets in the THREDDS catalog that have DIF metadata elements. When this option is selected a list of schemas is shown that have a DIFToISO.xsl stylesheet available (see for example `GEONETWORK_DATA_DIR/config/schema_plugins/iso19139/convert/DIFToISO.xsl`). Metadata is generated by reading the DIF metadata items in the THREDDS into a DIF format metadata record and then converting that DIF record to ISO using the DIFToISO stylesheet.\n&gt;\n&gt; -   *Extract Unidata dataset discovery metadata using fragments* - Select this option when the metadata in your THREDDS or netCDF/ncml datasets follows Unidata dataset discovery conventions (see &lt;http://www.unidata.ucar.edu/software/netcdf-java/formats/DataDiscoveryAttConvention.html&gt;). You will need to write your own stylesheets to extract this metadata as fragments and define a template to combine with the fragments. When this option is selected the following additional options will be shown:\n&gt;\n&gt;     &gt; -   *Select schema for output metadata records* - choose the ISO metadata schema or profile for the harvested metadata records. Note: only the schemas that have THREDDS fragment stylesheets will be displayed in the list (see the next option for the location of these stylesheets).\n&gt;     &gt; -   *Stylesheet to create metadata fragments* - Select a stylesheet to use to convert metadata for the dataset (THREDDS metadata and netCDF ncml where applicable) into metadata fragments. These stylesheets can be found in the directory convert/ThreddsToFragments in the schema directory eg. for iso19139 this would be `GEONETWORK_DATA_DIR/config/schema_plugins/iso19139/convert/ThreddsToFragments`.\n&gt;     &gt; -   *Create subtemplates for fragments and XLink them into template* - Select this option to create a subtemplate (=metadata fragment stored in GeoNetwork catalog) for each metadata fragment generated.\n&gt;     &gt; -   *Template to combine with fragments* - Select a template that will be filled in with the metadata fragments generated for each dataset. The generated metadata fragments are used to replace referenced elements in the templates with an xlink to a subtemplate if the *Create subtemplates* option is checked. If *Create subtemplates* is not checked, then the fragments are simply copied into the template metadata record.\n&gt;     -   For Atomic Datasets , one additional option is provided *Harvest new or modified datasets only*. If this option is checked only datasets that have been modified or didn't exist when the harvester was last run will be harvested.\n</code></pre> </li> <li>Create Thumbnails - Select this option to create thumbnails for WMS layers in referenced WMS services </li> <li>Icon - An icon to assign to harvested metadata. The icon will be used when showing search results.</li> </ul> </li> <li> <p>Options - Scheduling Options.</p> </li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> -   Privileges</p> <p><pre><code>&lt;!-- --&gt;\n</code></pre> -   Category for Service - Select the category to assign to the ISO19119 service records for the THREDDS services. -   Category for Datasets - Select the category to assign the generated metadata records (and any subtemplates) to.</p> <p>At the bottom of the page there are the following buttons:</p> <ul> <li>Back - Go back to the main harvesting page. The harvesting definition is not added.</li> <li>Save - Saves this harvester definition creating a new harvesting instance. After the save operation has completed, the main harvesting page will be displayed.</li> </ul>"},{"location":"users/managing_metadata/harvesting/thredds/#more-about-harvesting-thredds-dif-metadata-elements-with-the-thredds-harvester","title":"More about harvesting THREDDS DIF metadata elements with the THREDDS Harvester","text":"<p>THREDDS catalogs can include elements from the DIF metadata standard. The Unidata netcdf-java library provides a DIFWriter process that can create a DIF metadata record from these elements. GeoNetwork has a DIFToISO stylesheet to transform these DIF records to ISO. An example of a THREDDS Catalog with DIF-compliant metadata elements is shown below.</p> A THREDDS catalog with DIF compliant metadata elements"},{"location":"users/managing_metadata/harvesting/thredds/#more-about-harvesting-unidata-dataset-discovery-metadata-with-the-thredds-harvester","title":"More about harvesting Unidata dataset discovery metadata with the THREDDS Harvester","text":"<p>The options described above for the Extract Unidata dataset discovery metadata using fragments (see http://www.unidata.ucar.edu/software/netcdf-java/formats/DataDiscoveryAttConvention.html for more details of these conventions) invoke the following process for each collection dataset or atomic dataset in the THREDDS catalog:</p> <ol> <li>The harvester bundles up the catalog URI, a generated uuid, the THREDDS metadata for the dataset (generated using the catalog subset web service) and the ncml for netCDF datasets into a single xml document. An example is shown below.</li> <li>This document is then transformed using the specified stylesheet (see Stylesheet option above) to obtain a metadata fragments document.</li> <li>The metadata fragment harvester is then called to create subtemplates and/or metadata for the each dataset as requested</li> </ol> An example THREDDS dataset document created by the THREDDS fragment harvester"},{"location":"users/managing_metadata/harvesting/thredds/#example","title":"Example","text":"<p>DIF Metadata elements on datasets in THREDDS catalogs are not as widely used as metadata elements that follow the Unidata dataset discovery metadata conventions. This example will show how to harvest metadata elements that follow the Unidata data discovery conventions (see http://www.unidata.ucar.edu/software/netcdf-java/formats/DataDiscoveryAttConvention.html).</p> <p>Two reference stylesheets are provided as examples of how to harvest metadata fragments from a THREDDS catalog. One of these stylesheets, thredds-metadata.xsl, is for generating iso19139 metadata fragments from THREDDS metadata following Unidata dataset discovery conventions. The other stylesheet, netcdf-attributes.xsl, is for generating iso19139 fragments from netCDF datasets following Unidata dataset discovery conventions. These stylesheets are designed for use with the 'HARVESTING TEMPLATE -- THREDDS -- DATA DISCOVERY' template and can be found in the schema 'convert' directory eg. for ISO19139 this is <code>GEONETWORK_DATA_DIR/config/schema_plugins/iso19139/convert/ThreddsToFragments</code>.</p> <p>A sample template 'HARVESTING TEMPLATE -- THREDDS -- DATA DISCOVERY' has been provided for use with the stylesheets described above for the iso19139 metadata schema. This template is in the schema 'templates' directory eg. for ISO19139, this is <code>GEONETWORK_DATA_DIR/config/schema_plugins/iso19139/templates/thredds-harvester-unidata-data-discovery.xml</code>. Before attempting to run this example, you should make sure that this template and others from the iso19139 schema have been loaded into GeoNetwork using the 'Add templates' function in the Administration menu.</p> <p>We'll now give an example of how to set up a harvester and harvest THREDDS metadata from one of the public unidata motherlode catalogs at http://motherlode.ucar.edu:8080/thredds/catalog/satellite/3.9/WEST-CONUS_4km/catalog.xml. If you were to paste this URL into your browser, you would see the XML representation of this THREDDS catalog. This is the document that is read and converted into metadata by the THREDDS harvester. A snippet of this catalog is shown below.</p> Example XML THREDDS catalog <p>In GeoNetwork, go into the Administration menu, choose Harvesting Management as described earlier. Add a THREDDS Catalog harvester. Fill out the harvesting management form as shown in the form below.</p> THREDDS harvester form for motherlode THREDDS catalog example <p>The first thing to notice is that the Service URL should be http://motherlode.ucar.edu:8080/thredds/catalog/satellite/3.9/WEST-CONUS_4km/catalog.xml. Make sure that you use the xml version of the catalog. If you use an html version, you will not be able to harvest any metadata.</p> <p>Now because this unidata motherload THREDDS catalog has lots of file level datasets (many thousands in fact), we will only harvest collection metadata. To do this you should check Create metadata for Collection Datasets and ignore the atomic datasets.</p> <p>Next, because the metadata in this catalog follows Unidata data discovery conventions, so we will choose Extract Unidata dataset discovery metadata using fragments.</p> <p>Next, we will check Ignore harvesting attribute. We do this because datasets in the THREDDS catalog can have an attribute indicating whether the dataset should be harvested or not. Since none of the datasets in this catalog have the harvesting attribute, we will ignore it. If we didn't check this box, all the datasets would be skipped.</p> <p>Next we will select the metadata schema that the harvested metadata will be written out in. We will choose iso19139 here because this is the schema for which we have stylesheets that will convert THREDDS metadata to fragments of iso19139 metadata and a template into which these fragments of metadata can be copied or linked. After choosing iso19139, choices will appear that show these stylesheets and templates.</p> <p>The first choice is the stylesheet that will create iso19139 metadata fragments. Because we are interested in the thredds metadata elements in the THREDDS catalog, we will choose the (iso19139) thredds-metadata (located in <code>GEONETWORK_DATA_DIR/config/schema_plugins/iso19139/convert/ThreddsToFragments</code>) to convert these elements to iso19139 metadata fragments.</p> <p>For the purposes of this demonstration, we will not check Create subtemplates for fragments (xlinks...). This means that the fragments of metadata created by the stylesheet will be copied directly into the metadata template. They will not be able to be reused (eg. shared between different metadata records). See the earlier section on metadata fragments if you are not sure what this means.</p> <p>Finally, we will choose HARVESTING TEMPLATE - THREDDS - UNIDATA DISCOVERY as the template metadata record that will be combined with the metadata fragments to create the output records. This template will have been loaded into GeoNetwork from <code>GEONETWORK_DATA_DIR/config/schema_plugins/iso19139/templates/thredds-harvester-unidata-data-discovery.xml</code> through the Add Templates function in the Administration interface. This template could be filled out with metadata common to all records before the harvester is run. The process by which the template is used to create metadata records is as follows:</p> <ol> <li>For each dataset in the THREDDS catalog, the template will be copied to create a new iso19139 metadata record</li> <li>Each fragment of metadata harvested from a THREDDS dataset will be copied into the new iso19139 metadata record by matching an identifier in the template with an identifier in the fragment (this match is created by the developer of the template and the stylesheet).</li> <li>The new record is then inserted into the GeoNetwork metadata catalog and the record content is indexed in Lucene for searching.</li> </ol> <p>You can then fill out the remainder of the form according to how often you want the harvested metadata to be updated, what categories will be assigned to the created metadata record, which icon will be displayed with the metadata records in the search results and what the privileges on the created metadata records will be.</p> <p>Save the harvester screen. Then from the harvesting management screen, check the box beside the newly created harvester, Activate it and then Run it. After a few moments (depending on your internet connection and machine) you should click on Refresh. If your harvest has been successful you should see a results panel appear something like the one shown in the following screenshot.</p> Results of harvesting collection records from a motherlode THREDDS catalog <p>Notice that there were 48 metadata records created for the 48 collection level datasets in this THREDDS catalog. Each metadata record was formed by duplicating the metadata template and then copying 13 fragments of metadata into it - hence the total of 624 fragments harvested.</p> <p>An example of one of the collection level metadata records created by the harvester in this example and rendered by GeoNetwork is shown below.</p> ISO Metadata record harvested from a motherlode THREDDS catalog"},{"location":"users/managing_metadata/harvesting/webdav/","title":"WEBDAV Harvesting","text":"<p>This harvesting type uses the WebDAV (Distributed Authoring and Versioning) protocol or the WAF (web accessible folder) protocol to harvest metadata from a web server. It can be useful to users that want to publish their metadata through a web server that offers a DAV interface. The protocol permits retrieval of the contents of a web page (a list of files) along with the change date.</p>"},{"location":"users/managing_metadata/harvesting/webdav/#adding-a-webdav-harvester","title":"Adding a WebDAV harvester","text":"Adding a WebDAV harvester <ul> <li> <p>Site - Options about the remote site.</p> <ul> <li>Subtype - Select WebDAV or WAF according to the type of server being harvested.</li> <li>Name - This is a short description of the remote site. It will be shown in the harvesting main page as the name for this instance of the WebDAV harvester.</li> <li>URL - The remote URL from which metadata will be harvested. Each file found that ends with .xml is assumed to be a metadata record.</li> <li>Icon - An icon to assign to harvested metadata. The icon will be used when showing search results.</li> <li>Use account - Account credentials for basic HTTP authentication on the WebDAV/WAF server.</li> </ul> </li> <li> <p>Options - Scheduling options.</p> </li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> -   Options - Specific harvesting options for this harvester.</p> <pre><code>-   *Validate* - If checked, the metadata will be validated after retrieval. If the validation does not pass, the metadata will be skipped.\n-   *Recurse* - When the harvesting engine will find folders, it will recursively descend into them.\n</code></pre> <ul> <li>Privileges - Assign privileges to harvested metadata.</li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> -   Categories</p>"},{"location":"users/managing_metadata/harvesting/webdav/#notes","title":"Notes","text":"<ul> <li>The same metadata could be harvested several times by different instances of the WebDAV harvester. This is not good practise because copies of the same metadata record will have a different UUID.</li> </ul>"},{"location":"users/managing_metadata/harvesting/wfs-getfeatures/","title":"WFS GetFeature Harvesting","text":"<p>Metadata can be present in the tables of a relational databases, which are commonly used by many organisations. Putting an OGC Web Feature Service (WFS) over a relational database will allow metadata to be extracted via standard query mechanisms. This harvesting type allows the user to specify a GetFeature query and map information from the features to fragments of metadata that can be linked or copied into a template to create metadata records.</p>"},{"location":"users/managing_metadata/harvesting/wfs-getfeatures/#adding-an-ogc-wfs-getfeature-harvester","title":"Adding an OGC WFS GetFeature Harvester","text":"<p>An OGC web feature service (WFS) implements a GetFeature query operation that returns data in the form of features (usually rows from related tables in a relational database). GeoNetwork, acting as a client, can read the GetFeature response and apply a user-supplied XSLT stylesheet to produce metadata fragments that can be linked or copied into a user-supplied template to build metadata records.</p> Adding an OGC WFS GetFeature harvester <p>The available options are:</p> <ul> <li> <p>Site</p> </li> <li> <p>Name - This is a short description of the harvester. It will be shown in the harvesting main page as the name for this WFS GetFeature harvester.</p> </li> <li>Service URL - The bare URL of the WFS service (no OGC params required) </li> <li>Metadata language - The language that will be used in the metadata records created by the harvester </li> <li>OGC WFS GetFeature Query - The OGC WFS GetFeature query used to extract features from the WFS. </li> <li>Schema for output metadata records - choose the metadata schema or profile for the harvested metadata records. Note: only the schemas that have WFS fragment stylesheets will be displayed in the list (see the next option for the location of these stylesheets). <pre><code>&gt; -   *Stylesheet to create fragments* - User-supplied stylesheet that transforms the GetFeature response to a metadata fragments document (see below for the format of that document). Stylesheets exist in the WFSToFragments directory which is in the convert directory of the selected output schema. eg. for the iso19139 schema, this directory is `GEONETWORK_DATA_DIR/config/schema_plugins/iso19139/convert/WFSToFragments`.\n&gt; -   *Save large response to disk* - Check this box if you expect the WFS GetFeature response to be large (eg. greater than 10MB). If checked, the GetFeature response will be saved to disk in a temporary file. Each feature will then be extracted from the temporary file and used to create the fragments and metadata records. If not checked, the response will be held in RAM.\n&gt; -   *Create subtemplates* - Check this box if you want the harvested metadata fragments to be saved as subtemplates in the metadata catalog and xlink'd into the metadata template (see next option). If not checked, the fragments will be copied into the metadata template.\n&gt; -   *Template to use to build metadata using fragments* - Choose the metadata template that will be combined with the harvested metadata fragments to create metadata records. This is a standard GeoNetwork metadata template record.\n</code></pre> </li> <li> <p>Category for records built with linked fragments - Choose the metadata template that will be combined with the harvested metadata fragments to create metadata records. This is a standard GeoNetwork metadata template record.</p> </li> <li> <p>Options</p> </li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> -   Privileges</p> <p><pre><code>&lt;!-- --&gt;\n</code></pre> -   Category for subtemplates - When fragments are saved to GeoNetwork as subtemplates they will be assigned to the category selected here.</p>"},{"location":"users/managing_metadata/harvesting/wfs-getfeatures/#more-about-turning-the-getfeature-response-into-metadata-fragments","title":"More about turning the GetFeature Response into metadata fragments","text":"<p>The structure of the metadata fragments document that your XSLT (see Stylesheet used to create fragments above) must produce from the GetFeature response is shown below.</p> An example metadata fragments document produced by a user-supplied XSLT <p>Within the root  element there can be zero to many  elements. When generating metadata, each record element will result in the generation of one metadata document, otherwise, the  element is used to group metadata fragments as required only (e.g. fragments generated for a dataset or feature). <p>Within a  element there can be zero to many  elements and zero to many  elements. A  element can itself contain zero to many  elements. Ordering of  elements and  elements within a  or  element is not important. <p> elements contain individual xml fragments. The content of the  can be any xml element from a supported geonetwork schema with the proviso that the element must contain enough relevant metadata to allow the target schema to be identified (i.e. distinguishing namespaces). <p> elements have significance during metadata generation only. They are used to group zero or more fragments for insertion into or creation of links in a copy of the metadata template used to generate the metadata. Where the  element contains no  elements, the referenced element in the template copy will be removed, otherwise it will be replaced with the contents of the fragment. <p>Valid attributes on these elements and their function is as follows:</p> Element Attribute Description Record Uuid Uuid of the generated metadata record (optional - one will be assigned by the harvester otherwise) Fragment Id Id of element in metadata template to replace/link from. Ignored when fragment is within a replacementGroup. Uuid Uuid to use for generated subtemplate (used to link to this subtemplate from metadata) Title Title of fragment -- used as title of xlink ReplacementGroup Id Id of element in metadata template to delete, replace or link from to contained fragments <p>Finally, two examples of how to harvest metadata from the Features of an OGC WFS harvester can be given using stylesheets and templates supplied with GeoNetwork.</p>"},{"location":"users/managing_metadata/harvesting/wfs-getfeatures/#bundled-geoserver-boundaries-harvest-example","title":"Bundled GeoServer Boundaries Harvest example","text":"<p>This example assumes that you have installed the bundled GeoServer that comes with GeoNetwork. The end result of this example will be 251 ISO19139 metadata records that link in 1506 fragments (6 per record) created from a GetFeature response on the boundaries shapefile in the GeoServer instance supplied with GeoNetwork. The records created contain metadata about the countries of the world.</p> <p>The procedure to follow is:</p> <ul> <li>From the Administration-&gt;System Configuration menu, enable the XLink Resolver and Save the configuration to the database.</li> <li>Add an OGC WFS GetFeature response harvester from the Administration-&gt;Harvesting menu.</li> <li>Give it a Name (eg. gboundaries) and enter the URL of the wfs service from the bundled geoserver (eg. http://localhost:8080/geoserver/wfs) in the Service URL field.</li> <li>We'll use a simple GetFeature query to select all countries from the boundaries shapefile behind the WFS. The XML for such a query (which is to be entered in the GetFeature Query textarea) is:</li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> <pre><code> &lt;wfs:Query typeName=\"gboundaries\"/&gt;\n\n&lt;/wfs:GetFeature&gt;\n</code></pre> <ul> <li> <p>Choose an output schema - we'll choose iso19139 as this schema has the example stylesheets and templates we need for this example. Notice that after this option is chosen the following options become visible and we'll take the following actions:</p> <ul> <li>Choose the supplied 'geoserver_boundary_fragments' stylesheet to extract fragments from the GetFeature response in the Stylesheet to use to create fragments pull-down list. This stylesheet can be found in <code>GEONETWORK_DATA_DIR/config/schema_plugins/iso19139/convert/WFSToFragments</code>.</li> <li>Select the supplied 'Geoserver WFS Fragments Country Boundaries Test Template' template from the Template to use to build metadata using fragments pull-down list. This template can be found in <code>GEONETWORK_DATA_DIR/config/schema_plugins/iso19139/templates/geoserver_fragment_tester.xml</code>.</li> </ul> </li> <li> <p>Choose a category for the records created by the harvester, check the One run only box, add some privileges (simplest is to let All users have View rights). At this stage your harvester entry form should look like the following screenshot.</p> </li> </ul> Adding an OGC WFS GetFeature harvester - boundaries example <ul> <li>Save the harvester entry form.</li> <li>You will be returned to the harvester operations menu where you can Activate the harvester and then Run it.</li> </ul> <p>After the harvester has been run you should see a results screen that looks something like the following screenshot.</p> <p></p> <p>WFS GetFeature Harvesting - Results for geoserver boundaries example</p> <p>The results page shows that there were 1506 fragments of metadata harvested from the WFS GetFeature response. They were saved to the GeoNetwork database as subtemplates and linked into the metadata template to form 251 new metadata records.</p>"},{"location":"users/managing_metadata/harvesting/wfs-getfeatures/#deegree-version-2x-philosopher-database-example","title":"Deegree Version 2.x Philosopher Database example","text":"<p>This example assumes that you have downloaded Deegree version 2.x and loaded the Philosopher example database. The end result of this example will be 7 ISO19139 metadata records that link in 42 fragments (6 per record) created from the GetFeature response from your deegree installation. The records contain metadata about 7 famous philosophers.</p> <p>The procedure to follow is:</p> <ul> <li>From the Administration-&gt;System Configuration menu, enable the XLink Resolver and Save the configuration to the database.</li> <li>Add an OGC WFS GetFeature response harvester from the Administration-&gt;Harvesting menu.</li> <li>Give it a Name (eg. deegree22-philosopher-test) and enter the URL of your deegree 2.2 installation in the Service URL field.</li> <li>We'll use a simple GetFeature query to select all philosophers from the database under the WFS. The XML for such a query (which is to be entered in the GetFeature Query textarea) is:</li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> <pre><code> &lt;!-- request all Philosopher instances --&gt;\n &lt;wfs:Query typeName=\"app:Philosopher\"/&gt;\n\n&lt;/wfs:GetFeature&gt;\n</code></pre> <ul> <li> <p>Choose an output schema - we'll choose iso19139 as this schema has the example stylesheets and templates we need for this example. Notice that after this option is chosen the following options become visible and we'll take the following actions:</p> <ul> <li>Choose the supplied 'deegree2_philosopher_fragments' stylesheet to extract fragments from the GetFeature response in the Stylesheet to use to create fragments pull-down list. This stylesheet can be found in <code>GEONETWORK_DATA_DIR/config/schema_plugins/iso19139/convert/WFSToFragments</code>.</li> <li>Select the supplied 'Deegree 22 WFS Fragments Philosopher Database Test Template' template from the Template to use to build metadata using fragments pull-down list. This template can be found in <code>GEONETWORK_DATA_DIR/config/schema_plugins/iso19139/templates/deegree_fragment_tester.xml</code>.</li> </ul> </li> <li> <p>Choose a category for the records created by the harvester, check the One run only box, add some privileges (simplest is to let All users have View rights). At this stage your harvester entry form should look like the following screenshot.</p> </li> </ul> Adding an OGC WFS GetFeature harvester - philosopher example <ul> <li>Save the harvester entry form.</li> <li>You will be returned to the harvester operations menu where you can Activate the harvester and then Run it.</li> </ul> <p>After the harvester has been run you should see a results screen that looks something like the following screenshot.</p> <p></p> <p>WFS GetFeature Harvesting - Results for deegree philosopher database example</p> <p>The results page shows that there were 42 fragments of metadata harvested from the WFS GetFeature response. They were saved to the GeoNetwork database as subtemplates and linked into the metadata template to form 7 new metadata records.</p>"},{"location":"users/managing_metadata/harvesting/z3950/","title":"Z3950 Harvesting","text":"<p>Z3950 is a remote search and harvesting protocol that is commonly used to permit search and harvest of metadata. Although the protocol is often used for library catalogs, significant geospatial metadata catalogs can also be searched using Z3950 (eg. the metadata collections of the Australian Government agencies that participate in the Australian Spatial Data Directory - ASDD). This harvester allows the user to specify a Z3950 query and retrieve metadata records from one or more Z3950 servers.</p>"},{"location":"users/managing_metadata/harvesting/z3950/#adding-a-z3950-harvester","title":"Adding a Z3950 Harvester","text":"Adding a Z3950 harvester <p>The available options are:</p> <ul> <li> <p>Site</p> <ul> <li>Name - A short description of this Z3950 harvester. It will be shown in the harvesting main page using this name.</li> <li>Z3950 Server(s) - These are the Z3950 servers that will be searched. You can select one or more of these servers.</li> <li>Z3950 Query - Specify the Z3950 query to use when searching the selected Z3950 servers. At present this field is known to support the Prefix Query Format (also known as Prefix Query Notation) which is described at this URL: http://www.indexdata.com/yaz/doc/tools.html#PQF. See below for more information and some simple examples.</li> <li>Icon - An icon to assign to harvested metadata. The icon will be used when showing search results.</li> </ul> </li> <li> <p>Options - Scheduling options.</p> </li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> -   Harvested Content</p> <pre><code>-   *Apply this XSLT to harvested records* - Choose an XSLT here that will convert harvested records to a different format.\n-   *Validate* - If checked, records that do not/cannot be validated will be rejected.\n</code></pre> <ul> <li>Privileges</li> </ul> <p><pre><code>&lt;!-- --&gt;\n</code></pre> -   Categories</p> <p>Note</p> <p>this harvester automatically creates a new Category named after each of the Z3950 servers that return records. Records that are returned by a server are assigned to the category named after that server.</p>"},{"location":"users/managing_metadata/harvesting/z3950/#more-about-pqf-z3950-queries","title":"More about PQF Z3950 Queries","text":"<p>PQF is a rather arcane query language. It is based around the idea of attributes and attribute sets. The most common attribute set used for geospatial metadata in Z3950 servers is the GEO attribute set (which is an extension of the BIB-1 and GILS attribute sets - see http://www.fgdc.gov/standards/projects/GeoProfile). So all PQF queries to geospatial metadata Z3950 servers should start off with @attrset geo.</p> <p>The most useful attribute types in the GEO attribute set are as follows:</p> @attr number Meaning Description 1 Use What field to search 2 Relation How to compare the term specified 4 Structure What type is the term? eg. date, numeric, phrase 5 Truncation How to truncate eg. right <p>In GeoNetwork the numeric values that can be specified for <code>@attr 1</code> map to the lucene index field names as follows:</p> <p>+----------------------+-------------------------------+-------------------------------------------------------------------------------------------------------------+ | @attr 1=            | Lucene index field            | ISO19139 element                                                                                            | +======================+===============================+=============================================================================================================+ | 1016                 | any                           | All text from all metadata elements                                                                         | +----------------------+-------------------------------+-------------------------------------------------------------------------------------------------------------+ | 4                    | title, altTitle               | gmd:identificationInfo//gmd:citation//gmd:title/gco:CharacterString                                         | +----------------------+-------------------------------+-------------------------------------------------------------------------------------------------------------+ | 62                   | abstract                      | gmd:identificationInfo//gmd:abstract/gco:CharacterString                                                    | +----------------------+-------------------------------+-------------------------------------------------------------------------------------------------------------+ | 1012                 | _changeDate                  | Not a metadata element (maintained by GeoNetwork)                                                           | +----------------------+-------------------------------+-------------------------------------------------------------------------------------------------------------+ | 30                   | createDate                    | gmd:MD_Metadata/gmd:dateStamp/gco:Date                                                                      | +----------------------+-------------------------------+-------------------------------------------------------------------------------------------------------------+ | 31                   | publicationDate               | &gt; gmd:identificationInfo//gmd:citation//gmd:date/gmd:CI_DateCode/@codeListValue='publication'           | +----------------------+-------------------------------+-------------------------------------------------------------------------------------------------------------+ | 2072                 | tempExtentBegin               | &gt; gmd:identificationInfo//gmd:extent//gmd:temporalElement//gml:begin(Position)                              | +----------------------+-------------------------------+-------------------------------------------------------------------------------------------------------------+ | 2073                 | tempExtentEnd                 | &gt; gmd:identificationInfo//gmd:extent//gmd:temporalElement//gml:end(Position)                                | +----------------------+-------------------------------+-------------------------------------------------------------------------------------------------------------+ | 2012                 | fileId                        | gmd:MD_Metadata/gmd:fileIdentifier/                                                                       | +----------------------+-------------------------------+-------------------------------------------------------------------------------------------------------------+ | 12                   | identifier                    | gmd:identificationInfo//gmd:citation//gmd:identifier//gmd:code/                                           | +----------------------+-------------------------------+-------------------------------------------------------------------------------------------------------------+ | 21,29,2002,3121,3122 | keyword                       | gmd:identificationInfo//gmd:keyword/                                                                      | +----------------------+-------------------------------+-------------------------------------------------------------------------------------------------------------+ | 2060                 | northBL,eastBL,southBL,westBL | gmd:identificationInfo//gmd:extent//gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal (etc) | +----------------------+-------------------------------+-------------------------------------------------------------------------------------------------------------+</p> <p>Note that this is not a complete set of the mappings between Z3950 GEO attribute set and the GeoNetwork lucene index field names for ISO19139. Check out INSTALL_DIR/web/geonetwork/xml/search/z3950Server.xsl and INSTALL_DIR/web/geonetwork/xml/schemas/iso19139/index-fields.xsl for more details and annexe A of the GEO attribute set for Z3950 at http://www.fgdc.gov/standards/projects/GeoProfile/annex_a.html for more details.</p> <p>Common values for the relation attribute (<code>@attr=2</code>):</p> @attr 2= Description 1 Less than 2 Less than or equal to 3 Equals 4 Greater than or equal to 5 Greater than 6 Not equal to 7 Overlaps 8 Fully enclosed within 9 Encloses 10 Fully outside of <p>So a simple query to get all metadata records that have the word 'the' in any field would be:</p> <p><code>@attrset geo @attr 1=1016 the</code></p> <ul> <li><code>@attr 1=1016</code> means that we are doing a search on any field in the metadata record</li> </ul> <p>A more sophisticated search on a bounding box might be formulated as:</p> <p><code>@attrset geo @attr 1=2060 @attr 4=201 @attr 2=7 \"-36.8262 142.6465 -44.3848 151.2598</code></p> <ul> <li><code>@attr 1=2060</code> means that we are doing a bounding box search</li> <li><code>@attr 4=201</code> means that the query contains coordinate strings</li> <li><code>@attr 2=7</code> means that we are searching for records whose bounding box overlaps the query box specified at the end of the query</li> </ul>"},{"location":"users/managing_metadata/harvesting/z3950/#notes","title":"Notes","text":"<ul> <li>Z3950 servers must be configured for GeoNetwork in <code>INSTALL_DIR/web/geonetwork/WEB-INF/classes/JZKitConfig.xml.tem</code></li> <li>every time the harvester runs, it will remove previously harvested records and create new ones.</li> </ul>"},{"location":"users/managing_metadata/import/","title":"Import facilities","text":""},{"location":"users/managing_metadata/import/#importing-a-metadata-record-from-xml-or-a-mef-file","title":"Importing a metadata record from XML or a MEF file","text":"<p>The file import facility allows you to import metadata records in three ways:</p> <ol> <li>XML file from the filesystem on your machine.</li> <li>MEF file from the filesystem on your machine</li> <li>Copy/Paste XML</li> </ol> <p>In order to use this facility, you have to be logged in as an editor. After the login step, go to the administration page and select the Metadata insert link.</p> <p></p> <p>Clicking the link will open the metadata import page. You will then have to specify a set of parameters. The following screenshot shows the parameters for importing an XML file.</p> The XML file import options <p>We'll describe the options you see on this page because they are common ways you can import metadata records in this interface.</p> <ul> <li> <p>File Type - First option is to choose the type of metadata record you are loading. The two choices are:</p> <ul> <li>Metadata - use when loading a normal metadata record</li> <li>Template - use when loading a metadata record that will be used as a template to build new records in the editor.</li> </ul> </li> <li> <p>Import Action - This option group determines how to handle potential clashes between the UUID of the metadata record you are loading and the UUIDs of metadata records already present in the catalog. There are three actions and you can select one:</p> <ul> <li>No action on import - the UUID of the metadata record you are loading is left unchanged. If a metadata record with the same UUID is already present in the catalog, you will receive an error message.</li> <li>Overwrite metadata with same UUID - any existing metadata record in the catalog with the same UUID as the record you are loading will be replaced with the metadata record you are loading.</li> <li>Generate UUID for inserted metadata - create new a UUID for the metadata records you are loading.</li> </ul> </li> <li> <p>Stylesheet - Allows you to transform the metadata record using an XSLT stylesheet before loading the record. The drop down control is filled with the names of files taken from the INSTALL_DIR/web/geonetwork/xsl/conversion/import folder. (Files can be added to this folder without restarting GeoNetwork). As an example, you could use this option to convert a metadata into schema that is supported by GeoNetwork.</p> </li> <li>Validate - The metadata is validated against its schema before loading. If it is not valid it will not be loaded.</li> <li>Group - Use this option to select a user group to assign to the imported metadata.</li> <li>Category - Use this option to select a local category to assign to the imported metadata. Categories are local to the catalogue you are using and are intended to provide a simple way of searching groups of metadata records.</li> </ul>"},{"location":"users/managing_metadata/import/#mef-file-import","title":"MEF file import","text":"The MEF file import options <p>If you select MEF file in the File type option, only the Import actions option group is show. See above for more details. Note: a MEF file can contain more than one metadata record.</p>"},{"location":"users/managing_metadata/import/#copypaste-xml","title":"Copy/Paste XML","text":"The XML insert options <p>If you select Copy/Paste in the Insert mode option, then a text box appears. You can copy the XML from another window and paste it into that text box. The options for loading that XML are the same as those for loading an XML file - see above.</p>"},{"location":"users/managing_metadata/import/#batch-import","title":"Batch import","text":"<p>The batch import facility allows you to import a set of metadata records in the form of XML or MEF files. In order to use this facility, you have to be logged in as an administrator. After the login step, go to the administration page and select the Batch Import link.</p> How to reach the batch import page <p>Clicking the link will open the batch import page. You will then have to specify a set of parameters. The following screenshot shows the parameters for batch import of a set of XML or MEF files.</p> The batch import options <ul> <li>Directory This is the full path on the server's file system of the directory to scan. GeoNetwork will look for and try to import all XML or MEF files present into this directory. It is important to notice that this is the directory on the server machine and not on the client of the user that is doing the import.</li> </ul> <ul> <li> <p>File Type - First option is to choose the type of metadata record you are loading. The two choices are:</p> <ul> <li>Metadata - use when loading a normal metadata record</li> <li>Template - use when loading a metadata record that will be used as a template to build new records in the editor.</li> </ul> </li> <li> <p>Import Action - This option group determines how to handle potential clashes between the UUID of the metadata record you are loading and the UUIDs of metadata records already present in the catalog. There are three actions and you can select one:</p> <ul> <li>No action on import - the UUID of the metadata record you are loading is left unchanged. If a metadata record with the same UUID is already present in the catalog, you will receive an error message.</li> <li>Overwrite metadata with same UUID - any existing metadata record in the catalog with the same UUID as the record you are loading will be replaced with the metadata record you are loading.</li> <li>Generate UUID for inserted metadata - create new a UUID for the metadata records you are loading.</li> </ul> </li> <li> <p>Stylesheet - Allows you to transform the metadata record using an XSLT stylesheet before loading the record. The drop down control is filled with the names of files taken from the INSTALL_DIR/web/geonetwork/xsl/conversion/import folder. (Files can be added to this folder without restarting GeoNetwork). As an example, you could use this option to convert a metadata into schema that is supported by GeoNetwork.</p> </li> <li>Validate - The metadata is validated against its schema before loading. If it is not valid it will not be loaded.</li> <li>Group - Use this option to select a user group to assign to the imported metadata.</li> <li>Category - Use this option to select a local category to assign to the imported metadata. Categories are local to the catalogue you are using and are intended to provide a simple way of searching groups of metadata records.</li> </ul> <p>At the bottom of the page there are two buttons:</p> <ul> <li>Back Goes back to the administration form.</li> <li>Upload Starts the import process.</li> </ul>"},{"location":"users/managing_metadata/import/#notes-on-the-batch-import-process","title":"Notes on the batch import process","text":"<ul> <li>When the import process ends, the total count of imported metadata will be shown</li> <li>The import is transactional: the metadata set will be fully imported or fully discarded (there are no partial imports)</li> <li>Files that start with '.' or that do not end with '.xml' or '.mef' are ignored</li> </ul>"},{"location":"users/managing_metadata/import/#structured-batch-import-using-import-configxml","title":"Structured batch import using import-config.xml","text":"<p>Finer control of the batch import process can be obtained by structuring the metadata files into directories mapped to categories and metadata schemas and describing the mapping in a file called import-config.xml.</p> <p>The import-config.xml should be placed in the directory from which you will batch import (see Directory parameter above). It has a config root element with the following children:</p> <ol> <li>categoryMapping [1]: this element specifies the mapping of directories to categories.<ol> <li>mapping [0..n]: This element can appear 0 or more times and maps one directory name to a category name. It must have a \"dir\" attribute that indicates the directory and a \"to\" attribute that indicates the category name.</li> <li>default [1]: This element specifies a default mapping of categories for all directories that do not match the other mapping elements. The default element can only have one attribute called \"to\".</li> </ol> </li> <li>schemaMapping [1]: this element specifies the mapping of directories to metadata schemas.<ol> <li>mapping [0..n]: This element can appear 0 or more times and maps one directory to the schema name that must be used when importing. The provided schema must match the one used by the metadata contained into the specified directory, which must all have the same schema. It must have a \"dir\" attribute that indicates the directory and a \"to\" attribute that indicates the schema name.</li> <li>default [1]: default behaviour to use when all other mapping elements do not match. The default element can only have one attribute called \"to\".</li> </ol> </li> </ol> <p>Here is an example of the import-config.xml file:</p> <pre><code>&lt;config&gt;\n&lt;categoryMapping&gt;\n&lt;mapping dir=\"1\" to=\"maps\" /&gt;\n&lt;mapping dir=\"3\" to=\"datasets\" /&gt;\n&lt;mapping dir=\"6\" to=\"interactiveResources\" /&gt;\n&lt;mapping dir=\"30\" to=\"photo\" /&gt;\n&lt;default to=\"maps\" /&gt;\n&lt;/categoryMapping&gt;\n&lt;schemaMapping&gt;\n&lt;mapping dir=\"3\" to=\"fgdc-std\" /&gt;\n&lt;default to=\"dublin-core\" /&gt;\n&lt;/schemaMapping&gt;\n&lt;/config&gt;\n</code></pre> <p>As described above, the import procedure starts by scanning the specified Directory. Apart from the import-config.xml file, this directory should only contain subdirectories - these are the category directories referred to in the categoryMapping section of the import-config.xml file described above. Each of the category directories should only contain subdirectories - these are the schema directories referred to in the schemaMapping section of the import-config.xml file described above.</p>"},{"location":"users/managing_metadata/massive_replace/","title":"Metadata Massive Replace","text":"<p>This section guides you through the process of replacing content in metadata records into the GeoNetwork catalogue.</p> <p>To use this feature the user you must be registered as Reviewer, User Administrator or Administrator.</p> <p>This section will guide you through the steps to apply a massive update of metadata content.</p> <ol> <li> <p>In the home page, do a search to filter the metadata.</p> </li> <li> <p>Select from the results the metadata you want to apply the massive update.</p> </li> <li> <p>Select Actions on selection &gt; Massive metadata update.</p> <p></p> </li> </ol> <p>This form allows to configure the replacements to apply to the metadata selection.</p>"},{"location":"users/managing_metadata/massive_replace/#define-the-replacements","title":"Define the replacement(s)","text":"<p>To define the replacements to apply to the selected metadata:</p> <ol> <li> <p>Select the package that contains the metadata element to replace:</p> <ul> <li>Metadata.</li> <li>Data Identification.</li> <li>Service Identification.</li> <li>Maintenance information.</li> <li>Content information.</li> <li>Distribution information.</li> </ul> </li> <li> <p>Select the metadata element you want to replace in the package selected.</p> </li> <li> <p>Specify the text content to replace.</p> </li> <li> <p>Specify the new text content.</p> </li> <li> <p>Multiple replacements can be specified clicking on + button.</p> </li> </ol> <p>Once all the replacements are defined, you can test it before applying it. Click Test button to produce a report with the metadata that will be updated:</p> <p></p> <p>Note</p> <p>The test process does not update the metadata with the replacements.</p> <p>To apply the replacements and save the changes, click Update metadata button. A confirmation message is displayed before executing the process.</p> <p></p> <p>The process will replace any occurrence of the text indicated in (3) with the text indicated in (4) for the metadata element indicated in (2) and can take several time, depending on the size of the selection.</p> <p>At the end of the process a summary is displayed.</p> <ol> <li> <p>Number of records processed: total records processed (selected records).</p> </li> <li> <p>Number of records updated: total records that have been updated.</p> <p></p> </li> </ol>"},{"location":"users/managing_metadata/massive_replace/#replacements-available","title":"Replacements available","text":""},{"location":"users/managing_metadata/massive_replace/#metadata-section","title":"Metadata section","text":"<ul> <li>Contact &gt; Individual Name</li> <li>Contact &gt; Organization Name</li> <li>Contact &gt; Voice phone</li> <li>Contact &gt; Fax phone</li> <li>Contact &gt; Address</li> <li>Contact &gt; City</li> <li>Contact &gt; Province</li> <li>Contact &gt; Postal code</li> <li>Contact &gt; Country</li> <li>Contact &gt; Email</li> <li>Contact &gt; Online Resource &gt; URL</li> <li>Contact &gt; Online Resource &gt; Application Profile</li> <li>Contact &gt; Online Resource &gt; Name</li> <li>Contact &gt; Online Resource &gt; Description</li> <li>Contact &gt; Hours of service</li> <li>Contact &gt; Contact Instructions</li> </ul> <p>Data Identification section '''''''''''''''''''''''''' * Abstract * Purpose * Keyword * Citation &gt; Individual Name * Citation &gt; Organization Name * Citation &gt; Voice phone * Citation &gt; Fax phone * Citation &gt; Address * Citation &gt; City * Citation &gt; Province * Citation &gt; Postal code * Citation &gt; Country * Citation &gt; Email * Citation &gt; Online Resource &gt; URL * Citation &gt; Online Resource &gt; Application Profile * Citation &gt; Online Resource &gt; Name * Citation &gt; Online Resource &gt; Description * Citation &gt; Hours of service * Citation &gt; Contact Instructions * Point Of Contact &gt; Individual Name * Point Of Contact &gt; Organization Name * Point Of Contact &gt; Voice phone * Point Of Contact &gt; Fax phone * Point Of Contact &gt; Address * Point Of Contact &gt; City * Point Of Contact &gt; Province * Point Of Contact &gt; Postal code * Point Of Contact &gt; Country * Point Of Contact &gt; Email * Point Of Contact &gt; Online Resource &gt; URL * Point Of Contact &gt; Online Resource &gt; Application Profile * Point Of Contact &gt; Online Resource &gt; Name * Point Of Contact &gt; Online Resource &gt; Description * Point Of Contact &gt; Hours of service * Point Of Contact &gt; Contact Instructions * Resource Constraints &gt; General Constraint &gt; Use Limitation * Resource Constraints &gt; Legal Constraints &gt; Use Limitation * Resource Constraints &gt; Legal Constraints &gt; Other Constraints * Resource Constraints &gt; Security Constraint &gt; Use Limitation * Resource Constraints &gt; Other Constraints'</p> <p>Service Identification section '''''''''''''''''''''''''''''</p> <ul> <li>Abstract</li> <li>Purpose</li> <li>Citation &gt; Individual Name</li> <li>Citation &gt; Organization Name</li> <li>Citation &gt; Voice phone</li> <li>Citation &gt; Fax phone</li> <li>Citation &gt; Address</li> <li>Citation &gt; City</li> <li>Citation &gt; Province</li> <li>Citation &gt; Postal code</li> <li>Citation &gt; Country</li> <li>Citation &gt; Email</li> <li>Citation &gt; Online Resource &gt; URL</li> <li>Citation &gt; Online Resource &gt; Application Profile</li> <li>Citation &gt; Online Resource &gt; Name</li> <li>Citation &gt; Online Resource &gt; Description</li> <li>Citation &gt; Hours of service</li> <li>Citation &gt; Contact Instructions</li> <li>Point Of Contact &gt; Individual Name</li> <li>Point Of Contact &gt; Organization Name</li> <li>Point Of Contact &gt; Voice phone</li> <li>Point Of Contact &gt; Fax phone</li> <li>Point Of Contact &gt; Address</li> <li>Point Of Contact &gt; City</li> <li>Point Of Contact &gt; Province</li> <li>Point Of Contact &gt; Postal code</li> <li>Point Of Contact &gt; Country</li> <li>Point Of Contact &gt; Email</li> <li>Point Of Contact &gt; Online Resource &gt; URL</li> <li>Point Of Contact &gt; Online Resource &gt; Application Profile</li> <li>Point Of Contact &gt; Online Resource &gt; Name</li> <li>Point Of Contact &gt; Online Resource &gt; Description</li> <li>Point Of Contact &gt; Hours of service</li> <li>Point Of Contact &gt; Contact Instructions</li> <li>Connect Point &gt; URL</li> <li>Connect Point &gt; Application Profile</li> <li>Connect Point &gt; Name</li> <li>Connect Point &gt; Description</li> </ul>"},{"location":"users/managing_metadata/massive_replace/#maintenance-section","title":"Maintenance section","text":"<ul> <li>Contact &gt; Individual Name</li> <li>Contact &gt; Organization Name</li> <li>Contact &gt; Voice phone</li> <li>Contact &gt; Fax phone</li> <li>Contact &gt; Address</li> <li>Contact &gt; City</li> <li>Contact &gt; Province</li> <li>Contact &gt; Postal code</li> <li>Contact &gt; Country</li> <li>Contact &gt; Email</li> <li>Contact &gt; Online Resource &gt; URL</li> <li>Contact &gt; Online Resource &gt; Application Profile</li> <li>Contact &gt; Online Resource &gt; Name</li> <li>Contact &gt; Online Resource &gt; Description</li> <li>Contact &gt; Hours of service</li> <li>Contact &gt; Contact Instructions</li> </ul>"},{"location":"users/managing_metadata/massive_replace/#content-information-section","title":"Content information section","text":"<ul> <li>Feature Catalogue Citation &gt; Individual Name</li> <li>Feature Catalogue Citation &gt; Organization Name</li> <li>Feature Catalogue Citation &gt; Voice phone</li> <li>Feature Catalogue Citation &gt; Fax phone</li> <li>Feature Catalogue Citation &gt; Address</li> <li>Feature Catalogue Citation &gt; City</li> <li>Feature Catalogue Citation &gt; Province</li> <li>Feature Catalogue Citation &gt; Postal code</li> <li>Feature Catalogue Citation &gt; Country</li> <li>Feature Catalogue Citation &gt; Email</li> <li>Feature Catalogue Citation &gt; Online Resource &gt; URL</li> <li>Feature Catalogue Citation &gt; Online Resource &gt; Application Profile</li> <li>Feature Catalogue Citation &gt; Online Resource &gt; Name</li> <li>Feature Catalogue Citation &gt; Online Resource &gt; Description</li> <li>Feature Catalogue Citation &gt; Hours of service</li> <li>Feature Catalogue Citation &gt; Contact Instructions</li> </ul>"},{"location":"users/managing_metadata/massive_replace/#distribution-information-section","title":"Distribution information section","text":"<ul> <li>Distributor Contact &gt; Individual Name</li> <li>Distributor Contact &gt; Organization Name</li> <li>Distributor Contact &gt; Voice phone</li> <li>Distributor Contact &gt; Fax phone</li> <li>Distributor Contact &gt; Address</li> <li>Distributor Contact &gt; City</li> <li>Distributor Contact &gt; Province</li> <li>Distributor Contact &gt; Postal code</li> <li>Distributor Contact &gt; Country</li> <li>Distributor Contact &gt; Email</li> <li>Distributor Contact &gt; Online Resource &gt; URL</li> <li>Distributor Contact &gt; Online Resource &gt; Application Profile</li> <li>Distributor Contact &gt; Online Resource &gt; Name</li> <li>Distributor Contact &gt; Online Resource &gt; Description</li> <li>Distributor Contact &gt; Hours of service</li> <li>Distributor Contact &gt; Contact Instructions</li> <li>Fees</li> <li>Ordering Instructions</li> <li>Digital Transfer Options &gt; URL</li> <li>Digital Transfer Options &gt; Application Profile</li> <li>Digital Transfer Options &gt; Name</li> <li>Digital Transfer Options &gt; Description</li> </ul>"},{"location":"users/managing_metadata/ownership/","title":"Ownership and Privileges","text":"<p>Please review and make sure that you understand User Profiles in the User and Group Administration section of this manual.</p> <p>Note</p> <p>A public metadata record is a metadata record that has the view privilege for the group named \"All\".</p> <p>The following rules apply to Viewing and Editing permissions on a metadata record:</p>"},{"location":"users/managing_metadata/ownership/#viewing","title":"Viewing","text":"<p>An administrator can view any metadata.</p> <p>A content reviewer can view a metadata if:</p> <ol> <li>The metadata owner is member of one of the groups assigned to the reviewer.</li> <li>She/he is the metadata owner.</li> </ol> <p>A user administrator or an editor can view:</p> <ol> <li>All metadata that has the view privilege selected for one of the groups she/he is member of.</li> <li>All metadata created by her/him.</li> </ol> <p>A registered user can view:</p> <ol> <li>All metadata that has the view privilege selected for one of the groups she/he is member of.</li> </ol> <p>Public metadata can be viewed by any user (logged in or not).</p>"},{"location":"users/managing_metadata/ownership/#editing","title":"Editing","text":"<p>An administrator can edit any metadata.</p> <p>A reviewer can edit a metadata if:</p> <ol> <li>The metadata owner is member of one of the groups assigned to the reviewer.</li> <li>She/he is the metadata owner.</li> </ol> <p>A User Administrator or an Editor can only edit metadata she/he created.</p>"},{"location":"users/managing_metadata/ownership/#setting-privileges-on-a-metadata-record","title":"Setting Privileges on a metadata record","text":"<p>A button to access the Privileges page for a metadata record will appear in the search results or when the record is being viewed for:</p> <ol> <li>All Administrators</li> <li>All Reviewers that are member of one of the groups assigned to the metadata owner.</li> <li>The Owner of the metadata</li> </ol> <p>Privileges for the All and Intranet groups can only be edited by Administrators and Reviewers.</p>"},{"location":"users/managing_metadata/ownership/#setting-privileges-on-a-selected-set-of-metadata-records","title":"Setting Privileges on a selected set of metadata records","text":"<p>Privileges can be set on a selected set of records in the search results using the \"actions on selected set\" menu. The following screenshot shows how to access this function:</p> <p></p> <p>The following rules apply:</p> <ul> <li>the groups that will appear in the Privileges page will be those that the user belongs to</li> <li>the Privileges specified will only be applied to records that the user has ownership or administration rights on - any other records will be skipped.</li> </ul>"},{"location":"users/managing_metadata/ownership/#transfer-ownership","title":"Transfer Ownership","text":"<p>When metadata ownership needs to be transferred from one user to another for all or specific metadata records, the Transfer Ownership option is available. It is located in the Administration page and once selected, leads to the following page.</p> How to open the Transfer Ownership page <p>Initially, the page shows only a dropdown for a Source editor (the current metadata owner). The dropdown is filled with all GeoNetwork Users that have the Editor role and own some metadata. Selecting an Editor will select all metadata that is managed by that Editor. An empty dropdown means that there are no Editors with metadata associated and hence no transfer is possible.</p> <p>Note</p> <p>The drop down will be filled with all Editors visible to you. If you are not an Administrator, you will view only a subset of all Editors.</p> The Transfer Ownership page <p>Once a Source Editor has been selected, a set of rows is displayed. Each row refers to the group of the Editor for which there are privileges. The meaning of each column is the following:</p> <ol> <li>Source group: This is a group that has privileges in the metadata that belong to the source editor. Put in another way, if one of the editor's metadata has privileges for one group, that group is listed here.</li> <li>Target group: This is the destination group of the transferring process. All privileges relative to the source group are transferred to the target group. The target group drop down is filled with all groups visible to the logged user (typically an administrator or a user administrator). By default, the Source group is selected in the target dropdown. Privileges to groups All and Intranet are not transferable.</li> <li>Target editor: Once a Target group is selected, this drop down is filled with all editors that belong to that Target group.</li> <li>Operation: Currently only the Transfer operation is possible.</li> </ol> <p>By selecting the Transfer operation, if the Source group is different than the Target group, the system performs the Transfer of Ownership, shows a brief summary and removes the current row because now there are no privileges to transfer anymore.</p>"},{"location":"users/managing_metadata/ownership/#setting-ownership-on-a-selected-set-of-metadata-records","title":"Setting Ownership on a selected set of metadata records","text":"<p>Ownership can be set on a selected set of records in the search results using the \"actions on selected set\" menu. The following screenshot shows how to access this function:</p> <p></p> <p>The following rules apply:</p> <ul> <li>Only administrators or user administrators can set ownership on a selected set of records</li> <li>administrators can set ownership to any user</li> <li>user administrators can set ownership to any user in the same group(s) as them</li> <li>Ownership will only be transferred on those records that the ownership or administration rights on - any others will be skipped.</li> </ul>"},{"location":"users/managing_metadata/processing/","title":"Processing","text":"<p>GeoNetwork can batch process metadata records by applying an XSLT. The processing XSLTs are schema dependent and must be stored in the process folder of each metadata schema. For example, the process folder for the iso19139 metadata schema can be found in <code>GEONETWORK_DATA_DIR/config/schema_plugins/iso19139/process</code>.</p> <p>Some examples of batch processing are:</p> <ul> <li>Filtering harvested records from another GeoNetwork node (See GeoNetwork Harvesting in the Harvesting section of this manual)</li> <li>Suggesting content for metadata elements (editor suggestion mechanism)</li> <li>Applying an XSLT to a selected set of metadata records by using the xml.batch.processing service (this service does not have a user interface, it is intended to be used with an http submitter such as curl).</li> </ul>"},{"location":"users/managing_metadata/processing/#process-available","title":"Process available","text":""},{"location":"users/managing_metadata/processing/#anonymizer","title":"Anonymizer","text":"<ul> <li>schema: ISO19139</li> <li>usage: Harvester</li> </ul> <p>Anonymiser is an XSL transformation provided for ISO19139 records which removes all resource contacts except point of contact. In addition, it has three custom options to replace email addresses, remove keywords and remove internal online resources. These options are controlled by the following parameters:</p> <ul> <li>protocol: Protocol of the online resources that must be removed</li> <li>email: Generic email to use for all email addresses in a particular domain (ie. after @domain.org).</li> <li>thesaurus: Portion of thesaurus name for which keywords should be removed</li> </ul> <p>It could be used in the GeoNetwork harvesting XSL filter configuration using:</p> <pre><code>anonymizer?protocol=DB:&amp;email=gis-service@myorganisation.org&amp;thesaurus=MYINTERNALTHESAURUS\n</code></pre>"},{"location":"users/managing_metadata/processing/#scale-denominator-formatter","title":"Scale denominator formatter","text":"<ul> <li>schema: ISO19139</li> <li>usage: Suggestion</li> </ul> <p>Format scale which contains \" \", \"/\" or \":\" characters.</p>"},{"location":"users/managing_metadata/processing/#add-extent-form-geographic-keywords","title":"Add extent form geographic keywords","text":"<ul> <li>schema: ISO19139</li> <li>usage: Suggestion</li> </ul> <p>Compute extent based on keyword of type place using installed thesaurus.</p>"},{"location":"users/managing_metadata/processing/#wms-synchronizer","title":"WMS synchronizer","text":"<ul> <li>schema: ISO19139</li> <li>usage: Suggestion</li> </ul> <p>If an OGC WMS server is defined in distribution section, suggest that the user add extent, CRS and graphic overview based on that WMS.</p>"},{"location":"users/managing_metadata/processing/#add-inspire-conformity","title":"Add INSPIRE conformity","text":"<ul> <li>schema: ISO19139</li> <li>usage: Suggestion</li> </ul> <p>If INSPIRE themes are found, suggest that the user add an INSPIRE conformity section.</p>"},{"location":"users/managing_metadata/processing/#add-inspire-data-quality-report","title":"Add INSPIRE data quality report","text":"<ul> <li>schema: ISO19139</li> <li>usage: Suggestion</li> </ul> <p>Suggest the creation of a default topological consistency report when INSPIRE theme is set to Hydrography, Transport Networks or Utility and governmental services</p>"},{"location":"users/managing_metadata/processing/#keywords-comma-exploder","title":"Keywords comma exploder","text":"<ul> <li>schema: ISO19139</li> <li>usage: Suggestion</li> </ul> <p>Suggest that comma separated keywords be expanded to remove the commas (which is better for indexing and searching).</p>"},{"location":"users/managing_metadata/processing/#keywords-mapper","title":"Keywords mapper","text":"<ul> <li>schema: ISO19139</li> <li>usage: Batch process</li> </ul> <p>Process records and map keyword define in a mapping table (to be defined manually in the process).</p>"},{"location":"users/managing_metadata/processing/#linked-data-checker","title":"Linked data checker","text":"<ul> <li>schema: ISO19139</li> <li>usage: Suggestion</li> </ul> <p>Check URL status and suggest to remove the link on error.</p>"},{"location":"users/managing_metadata/processing/#thumbnail-linker","title":"Thumbnail linker","text":"<ul> <li>schema: ISO19139</li> <li>usage: Batch process</li> </ul> <p>This batch process creates a browse graphic or thumbnail for all metadata records.</p> <p>Process parameters:</p> <ul> <li>prefix: thumbnail URL prefix (mandatory)</li> <li>thumbnail_name: Name of the element to use in the metadata for the thumbnail file name (without extension). This element should be unique in a record. Default is gmd:fileIdentifier (optional).</li> <li>thumbnail_desc: Thumbnail description (optional).</li> <li>thumbnail_type: Thumbnail type (optional).</li> <li>suffix: Thumbnail file extension. Default is .png (optional).</li> </ul> <p>Inserted fragment is:</p> <pre><code>&lt;gmd:graphicOverview&gt;\n    &lt;gmd:MD_BrowseGraphic&gt;\n      &lt;gmd:fileName&gt;\n        &lt;gco:CharacterString&gt;$prefix + $thumbnail_name + $suffix&lt;/gco:CharacterString&gt;\n      &lt;/gmd:fileName&gt;\n      &lt;gmd:fileDescription&gt;\n        &lt;gco:CharacterString&gt;$thumbnail_desc&lt;/gco:CharacterString&gt;\n      &lt;/gmd:fileDescription&gt;\n      &lt;gmd:fileType&gt;\n        &lt;gco:CharacterString&gt;$thumbnail_type&lt;/gco:CharacterString&gt;\n      &lt;/gmd:fileType&gt;\n    &lt;/gmd:MD_BrowseGraphic&gt;\n&lt;/gmd:graphicOverview&gt;\n</code></pre>"},{"location":"users/managing_metadata/schemas/","title":"Schemas","text":"<p>Metadata records in GeoNetwork are described by a schema. The schema sets out the structuring of the metadata record and provides all the ancillary data and functions to use the schema in GeoNetwork.</p> <p>A metadata schema plugin capability has been introduced in GeoNetwork 2.8.0. This allows the administrator to add, update and delete metadata schemas in GeoNetwork without the need to stop and restart GeoNetwork.</p> <p>Note</p> <p>Adding a metadata schema to GeoNetwork that is incorrect or invalid can thoroughly break your GeoNetwork instance. This section is for catalogue administrators who are confident about metadata schemas and understand the different technologies involved with a GeoNetwork metadata schema.</p> <p>A detailed description of what constitutes a metadata schema for GeoNetwork can be found in the GeoNetwork Developers Manual. This section will describe how to access the schema add, update and delete functions and how those functions should be used. To access these functiuons you need to be logged in to GeoNetwork as an Administrator. The schema functions are on the Administration page as shown below.</p> <p></p> <p>The Administration page with the metadata schema functions highlighted</p> <p>Note</p> <p>Metadata schemas should be thoroughly tested in a development instance of GeoNetwork before they are added to a production instance. Errors in a schema plugin (particularly in the presentation XSLTs) may make your GeoNetwork instance unusable.</p>"},{"location":"users/managing_metadata/schemas/#adding-a-schema","title":"Adding a schema","text":"<p>To a metadata schema to GeoNetwork, click on the Add a metadata schema/profile link in the Administration page as shown above.</p> <p>This will bring up a menu from which you can specify the location of a metadata schema in a ZIP archive to add to GeoNetwork.</p> <p></p> <p>There are three possible locations for the ZIP archive:</p> <ol> <li>on the server filesystem - you specify the path of the ZIP archive on the server filesystem</li> <li>on a web server accessible via a http link - you specify the URL of the ZIP archive on the web server.</li> <li>Attached to a metadata record describing the schema which is present in the local GeoNetwork catalog - you specify the UUID of that metadata record which must be an iso19139 metadata record.</li> </ol>"},{"location":"users/managing_metadata/schemas/#updating-a-schema","title":"Updating a schema","text":"<p>To update a metadata schema in GeoNetwork, click on the Update a metadata schema/profile link in the Administration page as shown above. You will be presented with a menu that is the same as the one for adding a metadata schema, except that instead of a text box for typing in the name of the new metadata schema, you select a metadata schema to update from a drop down menu of those already present in GeoNetwork.</p>"},{"location":"users/managing_metadata/schemas/#deleting-a-schema","title":"Deleting a schema","text":"<p>To delete a metadata schema from GeoNetwork, click on the Delete a metadata schema/profile link in the Administration page as shown above. You will be presented with a drop down list of the current metadata schemas in GeoNetwork from which you can select one to delete.</p> <p>Note</p> <p>You cannot delete a metadata schema if there are records that belong to that schema in the catalog. You must delete all the records that belong to that schema first before you can delete the schema itself.</p> <p>Note</p> <p>You cannot delete a metadata schema if another schema depends upon that schema eg. you cannot delete the iso19139 schema if the iso19139.mcp schema is present because the iso19139.mcp schema is a profile that depends on iso19139. Schema dependencies can be found/specified in the schema-ident.xml file.</p>"},{"location":"users/managing_metadata/status/","title":"Status","text":"<p>Metadata records have a lifecycle that typically goes through one or more states. For example, when a record is created and edited by an 'Editor' user it is in the 'Draft' state. Whilst it is reviewed by a 'Content Reviewer' user it would typically be in a 'Submitted' state. If the record is found to be complete and correct by the 'Content Reviewer' it would be in the 'Approved' state and may be made available for casual search and harvest by assigning privileges to the GeoNetwork 'All' group. Eventually, the record may be superseded or replaced and the state would be 'Retired'.</p> <p>GeoNetwork has (an extensible) set of states that a metadata record can have:</p> <ul> <li>Unknown - this is the default state - nothing is known about the status of the metadata record</li> <li>Draft - the record is under construction or being edited.</li> <li>Submitted - the record has been submitted for approval to a content review.</li> <li>Approved - the content reviewer has reviewed and approved the metadata record</li> <li>Rejected - the content reviewer has reviewed and rejected the metadata record</li> <li>Retired - the record has been retired</li> </ul> <p>Status can be assigned to metadata records individually or as a selected set.</p> <p></p> <p>Initiating status change for a single metadata record</p> <p></p> <p>Initiating status change for a set of metadata records</p> <p>The interface for setting the status looks like the following:</p> <p></p> <p>Changing the status of a set of metadata records</p> <p>It is also possible to search for metadata records with a particular status using a search restriction in the 'Advanced Search' menu.</p>"},{"location":"users/managing_metadata/status/#status-actions","title":"Status actions","text":"<p>The status values shown above are held in a database table called MetadataStatus. Extra states can be added to this table if required.</p> <p>There are two status change action hooks (in Java) that can be used by sites to provide specific behaviours:</p> <ol> <li>statusChange - This action is called when status is changed by a user eg. when 'Draft' records are set to 'Submitted' and could be used for example to send notifications to other users affected by this change.</li> <li>onEdit - This action is called when a record is edited and saved and could be used for example to reset records with an 'Approved' status to 'Draft' status. A default set of actions is provided. These can be customised or replaced by sites that wish to provide different or more extensive behaviour.</li> </ol> <p>A default pair of metadata status change actions defined in Java is provided wit GeoNetwork - see the class <code>org.fao.geonet.services.metadata.DefaultStatusActions.java</code>.</p> <p>statusChange: This action is called when status is changed by a user. What happens depends on the status change taking place:</p> <ul> <li>when an 'Editor' changes the state on a metadata record(s) from 'Draft' or 'Unknown' to 'Submitted', the Content Reviewers from the groupOwner of the record are informed of the status change via email which looks like the following. They can log in and click on the link supplied in the email to access the submitted records. Here is an example email sent by this action: <p><pre><code>&lt;!-- --&gt;\n</code></pre>     Date: Tue, 13 Dec 2011 12:58:58 +1100 (EST)     From: Metadata Workflow feedback@localgeonetwork.org.au     Subject: Metadata records SUBMITTED by userone@localgeonetwork.org.au (User One) on 2011-12-13T12:58:58     To: \"reviewer@localgeonetwork.org.au\" Reviewer@localgeonetwork.org.au     Reply-to: User One userone@localgeonetwork.org.au.au     Message-id: 1968852534.01323741538713.JavaMail.geonetwork@localgeonetwork.org.au</p> <pre><code>These records are complete. Please review.\n\nRecords are available from the following URL:\nhttp://localgeonetwork.org.au/geonetwork/srv/en/main.search?_status=4&amp;_statusChangeDate=2011-12-13T12:58:58\n</code></pre> </li> <li>when a 'Content Reviewer' changes the state on a metadata record(s) from 'Submitted' to 'Accepted' or 'Rejected', the owner of the metadata record is informed of the status change via email. The email received by the metadata record owner looks like the following. Again, the user can log in and use the link supplied in the email to access the approved/rejected records. Here is an example email sent by this action: <p><pre><code>&lt;!-- --&gt;\n</code></pre>     Date: Wed, 14 Dec 2011 12:28:01 +1100 (EST)     From: Metadata Workflow feedback@localgeonetwork.org.au     Subject: Metadata records APPROVED by reviewer@localgeonetwork.org.au (Reviewer) on 2011-12-14T12:28:00     To: \"User One\" userone@localgeonetwork.org.au     Message-ID: 1064170697.31323826081004.JavaMail.geonetwork@localgeonetwork.org.au     Reply-To: Reviewer reviewer@localgeonetwork.org.au</p> <pre><code>Records approved - please resubmit for approval when online resources attached\n\nRecords are available from the following URL:\nhttp://localgeonetwork.org.au/geonetwork/srv/en/main.search?_status=2&amp;_statusChangeDate=2011-12-14T12:28:00\n</code></pre> </li> </ul> <p>onEdit: This action is called when a record is edited and saved by a user. If the user did not indicate that the edit changes were a 'Minor edit' and the current status of the record is 'Approved', then the default action is to set the status to 'Draft' and remove the privileges for the GeoNetwork group 'All'.</p>"},{"location":"users/managing_metadata/status/#changing-the-status-actions","title":"Changing the status actions","text":"<p>These actions can be replaced with different behaviours by:</p> <ol> <li>writing Java code in the form of a new class that implements the interface defined in org.fao.geonet.services.metadata.!StatusActions.java and placing a compiled version of the class in the GeoNetwork class path</li> <li>defining the name of the new class in the statusActionsClass configuration parameter in <code>INSTALL_DIR/web/geonetwork/WEB-INF/config.xml</code></li> </ol>"},{"location":"users/managing_metadata/templates/","title":"Templates","text":"<p>The Metadata and Templates options in the Administration page allows you to manage the metadata templates in the catalog. You have to be logged in as an administrator to access this page and function.</p> <p></p>"},{"location":"users/managing_metadata/templates/#sort-templates","title":"Sort templates","text":"<p>You can define the order in which Templates are listed when an Editor creates a new metadata record.</p> The listing as shown to Editors <p>Use drag and drop to re-order the templates.</p> Sort Templates panel"},{"location":"users/managing_metadata/templates/#add-templates","title":"Add templates","text":"<p>This option allows the user to select the metadata templates from any schema and add them to the catalogue.</p> <p>Warning</p> <p>This will add the default templates available for each schema in <code>GEONETWORK_DATA_DIR/config/schema_plugins</code> - it should be used with care by an Administrator.</p> <p></p> <p>Select the metadata schemas to add templates from (multiple selections can be made) and click on the Add templates button to import them into the catalogue. They will then be available for creating new metadata records.</p>"},{"location":"users/managing_metadata/versioning/","title":"Versioning","text":"<p>There are many use cases where it is important to be able to track (over time):</p> <ul> <li>changes to the metadata record</li> <li>changes to properties of the metadata record eg. privileges, categories, status</li> </ul> <p>GeoNetwork uses a subversion repository to capture these changes and allow the user to examine the changes through the various visual interfaces to subversion repositories that already exist eg. viewvc. Apart from the advantage of ready to use tools for examining the changes, the subversion approach is efficient for XML files and simple to maintain.</p> <p>The database remains the point of truth for GeoNetwork. That is, changes will be tracked in subversion, but all services will continue to extract the latest version of the metadata record from the database.</p>"},{"location":"users/managing_metadata/versioning/#selecting-records-to-version","title":"Selecting records to version","text":"<p>Not all records in GeoNetwork are tracked as the compute and systems admin cost of this tracking for every record, particularly in large catalogs, is too high. Instead only those records selected by the user in the local GeoNetwork instance will be tracked in the subversion repository.</p> <p>Records can be selected for versioning individually or by doing a search and selecting a set of records.</p> <p></p> <p>Starting versioning on a single record</p> <p></p> <p>Starting versioning on a selected set of records</p>"},{"location":"users/managing_metadata/versioning/#when-will-a-new-version-be-created","title":"When will a new version be created?","text":"<p>Metadata records that are processed by a GeoNetwork service are associated with a database session. When the database session is committed, the metadata XML and its properties (as XML) are selected from the database and passed as a commit to the subversion repository, creating a new version in the repository. This process is automatic - at the moment the user cannot force a new version to be created, unless they change the metadata record or its properties.</p> <p>Due to recent changes in the way in which GeoNetwork database sessions are committed (forced by the adoption of background threads for work tasks) and the implementation dependent way in which database transaction isolation is handled by different vendors, there is a small chance that database sessions may overlap. This may mean that the ordering of the changes committed to the subversion repository may not be correct in a small number of cases. After some discussion amongst the developers, the implementation may change to remove this possibility in the next version of GeoNetwork.</p>"},{"location":"users/managing_metadata/versioning/#how-the-changes-are-held-in-the-subversion-repository","title":"How the changes are held in the subversion repository","text":"<p>The metadata record and its properties are stored in the subversion repository as XML files. The structure of the XML files describing the properties of the metadata is that returned by SELECT statements on the relevant database tables. The typical structure of a directory for a metadata record in the repository consists of a directory (named after the id of the metadata record) which contains:</p> <ul> <li>metadata.xml - the XML metadata record</li> <li>owner.xml - an XML file describing the owner of the metadata record</li> <li>privileges.xml - an XML file describing the privileges of the metadata record</li> <li>categories.xml - an XML file describing the categories to which the metadata record has been assigned</li> <li>status.xml - an XML file describing the status of the metadata (eg. Approved, Rejected, etc)</li> </ul> <p>A typical example of a privileges.xml file stored in the repository</p> <pre><code>&lt;response&gt;\n &lt;record&gt;\n   &lt;group_name&gt;intranet&lt;/group_name&gt;\n   &lt;operation_id&gt;0&lt;/operation_id&gt;\n   &lt;operation_name&gt;view&lt;/operation_name&gt;\n &lt;/record&gt;\n &lt;record&gt;\n   &lt;group_name&gt;sample&lt;/group_name&gt;\n   &lt;operation_id&gt;0&lt;/operation_id&gt;\n   &lt;operation_name&gt;view&lt;/operation_name&gt;\n &lt;/record&gt;\n &lt;record&gt;\n   &lt;group_name&gt;all&lt;/group_name&gt;\n   &lt;operation_id&gt;0&lt;/operation_id&gt;\n   &lt;operation_name&gt;view&lt;/operation_name&gt;\n &lt;/record&gt;\n &lt;record&gt;\n   &lt;group_name&gt;intranet&lt;/group_name&gt;\n   &lt;operation_id&gt;1&lt;/operation_id&gt;\n   &lt;operation_name&gt;download&lt;/operation_name&gt;\n &lt;/record&gt;\n &lt;record&gt;\n   &lt;group_name&gt;all&lt;/group_name&gt;\n   &lt;operation_id&gt;1&lt;/operation_id&gt;\n   &lt;operation_name&gt;download&lt;/operation_name&gt;\n &lt;/record&gt;\n &lt;record&gt;\n   &lt;group_name&gt;sample&lt;/group_name&gt;\n   &lt;operation_id&gt;3&lt;/operation_id&gt;\n   &lt;operation_name&gt;notify&lt;/operation_name&gt;\n &lt;/record&gt;\n &lt;record&gt;\n   &lt;group_name&gt;intranet&lt;/group_name&gt;\n   &lt;operation_id&gt;5&lt;/operation_id&gt;\n   &lt;operation_name&gt;dynamic&lt;/operation_name&gt;\n &lt;/record&gt;\n &lt;record&gt;\n   &lt;group_name&gt;all&lt;/group_name&gt;\n   &lt;operation_id&gt;5&lt;/operation_id&gt;\n   &lt;operation_name&gt;dynamic&lt;/operation_name&gt;\n &lt;/record&gt;\n &lt;record&gt;\n   &lt;group_name&gt;intranet&lt;/group_name&gt;\n   &lt;operation_id&gt;6&lt;/operation_id&gt;\n   &lt;operation_name&gt;featured&lt;/operation_name&gt;\n &lt;/record&gt;\n &lt;record&gt;\n   &lt;group_name&gt;all&lt;/group_name&gt;\n   &lt;operation_id&gt;6&lt;/operation_id&gt;\n   &lt;operation_name&gt;featured&lt;/operation_name&gt;\n &lt;/record&gt;\n&lt;/response&gt;\n</code></pre> <p>Difference between revisions 3 and 4 for the privileges.xml file for metadata record 10:</p> <pre><code>svn diff -r 3:4\nIndex: 10/privileges.xml\n===================================================================\n--- 10/privileges.xml   (revision 3)\n+++ 10/privileges.xml   (revision 4)\n@@ -1,12 +1,52 @@\n &lt;response&gt;\n   &lt;record&gt;\n+    &lt;group_name&gt;intranet&lt;/group_name&gt;\n+    &lt;operation_id&gt;0&lt;/operation_id&gt;\n+    &lt;operation_name&gt;view&lt;/operation_name&gt;\n+  &lt;/record&gt;\n+  &lt;record&gt;\n     &lt;group_name&gt;sample&lt;/group_name&gt;\n     &lt;operation_id&gt;0&lt;/operation_id&gt;\n     &lt;operation_name&gt;view&lt;/operation_name&gt;\n   &lt;/record&gt;\n   &lt;record&gt;\n+    &lt;group_name&gt;all&lt;/group_name&gt;\n+    &lt;operation_id&gt;0&lt;/operation_id&gt;\n+    &lt;operation_name&gt;view&lt;/operation_name&gt;\n+  &lt;/record&gt;\n+  &lt;record&gt;\n+    &lt;group_name&gt;intranet&lt;/group_name&gt;\n+    &lt;operation_id&gt;1&lt;/operation_id&gt;\n+    &lt;operation_name&gt;download&lt;/operation_name&gt;\n+  &lt;/record&gt;\n+  &lt;record&gt;\n+    &lt;group_name&gt;all&lt;/group_name&gt;\n+    &lt;operation_id&gt;1&lt;/operation_id&gt;\n+    &lt;operation_name&gt;download&lt;/operation_name&gt;\n+  &lt;/record&gt;\n+  &lt;record&gt;\n     &lt;group_name&gt;sample&lt;/group_name&gt;\n     &lt;operation_id&gt;3&lt;/operation_id&gt;\n     &lt;operation_name&gt;notify&lt;/operation_name&gt;\n   &lt;/record&gt;\n+  &lt;record&gt;\n+    &lt;group_name&gt;intranet&lt;/group_name&gt;\n+    &lt;operation_id&gt;5&lt;/operation_id&gt;\n+    &lt;operation_name&gt;dynamic&lt;/operation_name&gt;\n+  &lt;/record&gt;\n+  &lt;record&gt;\n+    &lt;group_name&gt;all&lt;/group_name&gt;\n+    &lt;operation_id&gt;5&lt;/operation_id&gt;\n+    &lt;operation_name&gt;dynamic&lt;/operation_name&gt;\n+  &lt;/record&gt;\n+  &lt;record&gt;\n+    &lt;group_name&gt;intranet&lt;/group_name&gt;\n+    &lt;operation_id&gt;6&lt;/operation_id&gt;\n+    &lt;operation_name&gt;featured&lt;/operation_name&gt;\n+  &lt;/record&gt;\n+  &lt;record&gt;\n+    &lt;group_name&gt;all&lt;/group_name&gt;\n+    &lt;operation_id&gt;6&lt;/operation_id&gt;\n+    &lt;operation_name&gt;featured&lt;/operation_name&gt;\n+  &lt;/record&gt;\n &lt;/response&gt;\n</code></pre> <p>Examination of this diff file shows that privileges for the 'All' and 'Intranet' groups have been added between revision 3 and 4 - in short, the record has been published.</p> <p>Here is an example of a change that has been made to a metadata record:</p> <pre><code>svn diff -r 2:3\nIndex: 10/metadata.xml\n===================================================================\n--- 10/metadata.xml     (revision 2)\n+++ 10/metadata.xml     (revision 3)\n@@ -61,7 +61,7 @@\n     &lt;/gmd:CI_ResponsibleParty&gt;\n   &lt;/gmd:contact&gt;\n   &lt;gmd:dateStamp&gt;\n-    &lt;gco:DateTime&gt;2012-01-10T01:47:51&lt;/gco:DateTime&gt;\n+    &lt;gco:DateTime&gt;2012-01-10T01:48:06&lt;/gco:DateTime&gt;\n   &lt;/gmd:dateStamp&gt;\n   &lt;gmd:metadataStandardName&gt;\n     &lt;gco:CharacterString&gt;ISO 19115:2003/19139&lt;/gco:CharacterString&gt;\n@@ -85,7 +85,7 @@\n       &lt;gmd:citation&gt;\n         &lt;gmd:CI_Citation&gt;\n           &lt;gmd:title&gt;\n-            &lt;gco:CharacterString&gt;Template for Vector data in ISO19139 (preferr\ned!)&lt;/gco:CharacterString&gt;\n+            &lt;gco:CharacterString&gt;fobblers foibblers&lt;/gco:CharacterString&gt;\n           &lt;/gmd:title&gt;\n           &lt;gmd:date&gt;\n             &lt;gmd:CI_Date&gt;\n</code></pre> <p>This example shows that the editor has made a change to the title and the dateStamp.</p>"},{"location":"users/managing_metadata/versioning/#looking-at-the-revision-history-using-viewvc-a-graphical-user-interface","title":"Looking at the revision history using viewvc - a graphical user interface","text":"<p>The viewvc subversion repository tool has a graphical interface that allows side-by-side comparison of changes/differences between files:</p> <p></p> <p>Looking at the changes in a metadata record using browser to query viewvc</p> <p></p> <p>Looking at the changes in the privileges set on a metadata record using browser to query viewvc</p>"},{"location":"users/managing_metadata/versioning/#xlink-support","title":"XLink support","text":"<p>Metadata fragments (from directories local to GeoNetwork or from external URLs on the internet) can be linked into metadata records to support reuse. A record is said to be resolved when all available fragments have been copied into the record. With regard to XLinks the current implementation:</p> <ul> <li>supports versioning of resolved records only</li> <li>cannot version fragments of metadata held by GeoNetwork</li> <li>will not create a new version of a metadata record when a change is made to one of its component fragments. Instead these changes will be picked up next time the record or its properties are changed.</li> </ul> <p>Support for these corner cases may be added in future versions of GeoNetwork.</p>"},{"location":"users/quickstartguide/","title":"Quick Start Guide","text":""},{"location":"users/quickstartguide/geographic_management/","title":"Geographic Information Management for all","text":""},{"location":"users/quickstartguide/geographic_management/#introduction_1","title":"Introduction","text":""},{"location":"users/quickstartguide/geographic_management/#what-is-geonetwork-opensource","title":"What is GeoNetwork opensource","text":"<p>GeoNetwork opensource is a standard based and decentralised spatial information management system, designed to enable access to geo-referenced databases and cartographic products from a variety of data providers through descriptive metadata, enhancing the spatial information exchange and sharing between organisations and their audience, using the capacities and the power of the Internet. The system provides a broad community of users with easy and timely access to available spatial data and thematic maps from multidisciplinary sources, that may in the end support informed decision making. The main goal of the software is to increase collaboration within and between organisations for reducing duplication and enhancing information consistency and quality and to improve the accessibility of a wide variety of geographic information along with the associated information, organised and documented in a standard and consistent way.</p> <p>Main Features</p> <ul> <li>Instant search on local and distributed geospatial catalogues</li> <li>Uploading and downloading of data, documents, PDF's and any other content</li> <li>An interactive Web map viewer that combines Web Map Services from distributed servers around the world</li> <li>Online map layout generation and export in PDF format</li> <li>Online editing of metadata with a powerful template system</li> <li>Scheduled harvesting and synchronisation of metadata between distributed catalogues</li> <li>Groups and users management</li> <li>Fine grained access control</li> </ul>"},{"location":"users/quickstartguide/geographic_management/#background-and-evolution","title":"Background and evolution","text":"<p>The prototype of the GeoNetwork catalogue was developed by the Food and Agriculture organisation of the United Nations (FAO) in 2001 to systematically archive and publish the geographic datasets produced within the organisation. The prototype was built on experiences within and outside the organisation. It used metadata content available from legacy systems that was transformed into what was then only a draft metadata standard, the ISO 19115. Later on, another UN agency, the World Food Programme (WFP) joined the project and with its contribution the first version of the software was released in 2003 and operational catalogues were established in FAO and WFP. The system was based on the ISO19115:DIS metadata standard and embedded the Web Map Client InterMap that supported Open Geospatial Consortium (OGC) compliant Web Map Services. Distributed searches were possible using the standard Z39.50 catalogue protocol. At that moment it was decided to develop the program as a Free and Open Source Software to allow the whole geospatial users community to benefit from the development results and to contribute to the further advancement of the software.</p> <p>Jointly with the UN Environmental Programme (UNEP), FAO developed a second version in 2004. The new release allowed users to work with multiple metadata standards (ISO 19115, FGDC and Dublin Core) in a transparent manner. It also allowed metadata to be shared between catalogues through a caching mechanism, improving reliability when searching in multiple catalogues.</p> <p>In 2006, the GeoNetwork team dedicated efforts to develop a DVD containing the GeoNetwork version 2.0.3 and the best free and open source software in the field of Geoinformatics. The DVD was produced and distributed in hard copy to over three thousand people. More recently, the OSGeo Live project has been developed with GeoNetwork and all the best Open Source Geospatial software available on a self-contained bootable DVD, USB thumb drive or Virtual Machine based on Xubuntu. The GeoNetwork community has been a part of this project and will continue to make sure the latest stable version of GeoNetwork is included. You can download the OSGeo-Live images from OSGeo Live website.</p> <p>GeoNetwork opensource is the result of the collaborative development of many contributors. These include among others the Food and Agriculture organisation (FAO), the UN Office for the Coordination of Humanitarian Affairs (UNOCHA), the Consultative Group on International Agricultural Research (CSI-CGIAR), The UN Environmental Programme (UNEP), The European Space Agency (ESA) and many others. Support for the metadata standard ISO19115:2003 has been added by using the ISO19139:2007 implementation specification schema published in May 2007. The release also serves as the open source reference implementation of the OGC Catalogue Service for the Web (CSW 2.0.2) specification. Improvements to give users a more responsive and interactive experience have been substantial and include a new Web map viewer and a complete revision of search interface.</p>"},{"location":"users/quickstartguide/geographic_management/#the-use-of-international-standards","title":"The use of International Standards","text":"<p>GeoNetwork has been developed following the principles of a Free and Open Source Software (FOSS) and based on International and Open Standards for services and protocols, like the ISO-TC211 and the Open Geospatial Consortium (OGC) specifications. The architecture is largely compatible with the OGC Portal Reference Architecture, i.e. the OGC guide for implementing standardised geospatial portals. Indeed the structure relies on the same three main modules identified by the OGC Portal Reference Architecture, that are focused on spatial data, metadata and interactive map visualisation. The system is also fully compliant with the OGC specifications for querying and retrieving information from Web catalogues (CSW). It supports the most common standards to specifically describe geographic data (ISO19139 and FGDC) and the international standard for general documents (Dublin Core). It uses standards (OGS WMS) also for visualising maps through the Internet.</p>"},{"location":"users/quickstartguide/geographic_management/#harvesting-geospatial-data-in-a-shared-environment","title":"Harvesting geospatial data in a shared environment","text":"<p>Within the geographic information environment, the increased collaboration between data providers and their efforts to reduce duplication have stimulated the development of tools and systems to significantly improve the information sharing and guarantee an easier and quicker access of data from a variety of sources without undermining the ownership of the information. The harvesting functionality in GeoNetwork is a mechanism of data collection in perfect accordance with both rights to data access and data ownership protection. Through the harvesting functionality it is possible to collect public information from the different GeoNetwork nodes installed around the world and to copy and store periodically this information locally. In this way a user from a single entry point can get information also from distributed catalogues. The logo posted on top each harvested record informs the user about the data source.</p>"},{"location":"users/quickstartguide/geographic_management/#geonetwork-and-the-open-source-community-development","title":"GeoNetwork and the Open Source Community Development","text":"<p>The community of users and developers of the GeoNetwork software has increased dramatically since the release of version 2.0 in December 2005 and the subsequent releases. At present, the user and developer mailing lists count well over 250 subscriptions each. Subscription to these lists is open to anyone interested. The archive of the mailing lists provides an important resource for users and can be freely browsed online. Members provide feedback within the community and provide translations, new functionalities, bug reports, fixes and instructions to the project as a whole. Building a self sustaining community of users and developers is one of the biggest challenges for the project. This community-building process relies on active participation and interaction of its members. It also relies on building trust and operating in a transparent manner, thereby agreeing on the overall objectives, prioritization and long term direction of the project. A number of actions have been taken by the project team to facilitate this process.</p> <p>The foundation for the establishment of a GeoNetwork Advisory Board was laid at the 2006 workshop in Rome and membership criteria were defined.</p> <p>A work plan is presented and discussed at the yearly GeoNetwork workshop; subsequently, the plan is maintained and updated throughout the year where needed. The project management team reports back to the advisory board about the reached developments and objectives during the annual workshops.</p> <p>Two public Websites have been established. One focuses on the users of the software (http://geonetwork-opensource.org), while the other one is dedicated to the developers (http://trac.osgeo.org/geonetwork). Both can be updated and maintained online by trusted members of the community. They provide documentation, bug reporting and tracking, Wiki pages et cetera. A small part of the community connects through Internet Relay Chat (IRC) on a public <code>irc://irc.freenode.net/geonetwork</code> channel. But most interaction takes place on the user and the developer mailing lists.</p> <p>During the 2006 workshop, the Project Advisory Board decided to propose the GeoNetwork opensource project as an incubator project to the newly founded Open Source Geospatial Foundation (OSGeo). This incubation process was successfully completed and the project websites were moved to servers accessible under the umbrella of the OSGeo foundation.</p> <p>Source code is maintained in a publicly accessible code repository, hosted at an independent service provider, github.com that hosts thousands of FOSS projects. Developers and users have full access to all sections of the source code, while trusted developers can make changes in the repository itself. A special mailing list has been established to monitor changes in the code repository. This \"commit mailing list\" delivers change reports by email to its subscribers.</p> <p>The documentation is written in reStructuredText format using the Sphinx framework to ensure versioning and support of multiple output formats (e.g. HTML and PDF).</p>"},{"location":"users/quickstartguide/getting_started/","title":"Getting Started","text":"<p>Please make sure you have opened the home page of the GeoNetwork based catalogue.</p> <p>If you installed the software on your local machine and started it, the default URL is http://localhost:8080/geonetwork</p> <p>There are many different ways to search the catalogue for maps and other geographic data. This guide will introduce you to the most popular search methods: default, advanced and by category. Whichever search you choose, remember that you will see results based on your privileges and assigned work group (Ownership and Privileges).</p> <p>Note</p> <p>The term data in this application refers to datasets, maps, tables, documents, etc. that are linked to the metadata of a specific record.</p>"},{"location":"users/quickstartguide/getting_started/#default-search","title":"Default Search","text":"<p>The default search allows you to search text within the entire record, such as keywords of the metadata and/or geographic location.</p> <p>Free text search. Type a search term in the What? field. You can type anything here (free text). You can use quotes around text to find exact combinations of words.</p> <p>Text and operators (and, or, not) are not case sensitive.</p> The free text field. <p>Geographic search. For the geographic search, two options are available for selecting a particular region to limit the search:</p> <p>You can select a region from a predefined list;</p> The region field <p>You can select your own area of interest in a more interactive way. A small global map is shown on the screen from which you can drag and drop the frame of your location area. Just click on the button on the upper right of the map screen.</p> Interactive Area Of Interest map <p>Perform search. Both types of search, free text search and geographic search can be combined to restrict the query further.</p> <p>Click the Search button to proceed and show the results.</p> The Search button"},{"location":"users/quickstartguide/getting_started/#searching-by-categories","title":"Searching by Categories","text":"<p>An additional way to search data within the GeoNetwork database, from the home page, is searching by Category. A list of categories is provided to the user to identify data at a more generic level: Applications, Audio/Video, Case study and best practises, Conference proceedings, Datasets, Directories, Interactive resources, Maps and graphics, Other information resources, Photo.</p> <p>To search only for maps, click on Maps and Graphics. A list of maps will be displayed from which you may view details of every single map; just clicking on the Metadata button of the map you wish to review.</p> Search by Category"},{"location":"users/quickstartguide/getting_started/#advanced-search","title":"Advanced Search","text":"<p>The advanced search option works similarly to the default search. However, you can be more specific in your search criteria as it offers different elements to look for data, each of them focusing one of the following aspects: What?, Where?, When?</p> Advanced search options <p>To perform an advanced search, from the home page click Advanced just below the search bottom.</p> Show advanced search options <p>In the WHAT? section the elements are all related to the data content. Through them, in addition to searching only free keywords in the entire metadata content, you can also search directly in the title or abstract fields and add more keywords to customise your search further. You can also specify the level of accuracy you wish to reach in performing your search.</p> <ul> <li>To search by Title, Abstract, Free Text, or Keyword(s) type any text into the respective field. You can enter information in one or multiple field(s). If you do not want to search by a given field, simply leave it blank;</li> <li>You can choose the accuracy of your search, in terms of spelling words, from Precise = 1 to Imprecise = 0.2, through 3 more consecutive steps which are equal to 0.8, 0.6, 0.4.</li> </ul> \"What\" section in the Advanced search <p>The WHERE? parameters, which are related to the spatial extent, allow you, as in the default search, either to select your own area of interest or to select a predefined region from the drop-down list. In this section you can also type the geographic coordinates of a specific location that is not available from the above list.</p> <ul> <li>To select your own area of interest, drag and drop the frame of your area on the global map using the appropriate tool on the bottom left of the map screen;</li> <li>To use free coordinates, type the lat-long geographic references in the appropriate fields around the map screen, without any limitation of decimal figures;</li> <li>To use the coordinates of a predefined region, select the region from the drop-down list.</li> </ul> \"Where\" section in the Advanced search <p>Whatever type of geographic search you decide to perform, in the Spatial search type field, you can choose from different options: is, overlaps, encloses, is fully outside of. If you use this field, be cautious as this limits your output data as follows:</p> <ul> <li>If you choose Spatial search type is \"Country\", only maps for the selected country will be displayed. In other words, a city map within that country will not show in the output results.</li> <li>If you choose Spatial search type overlaps \"Country\", all maps with the bounding box overlapping that country will be displayed in the results, i.e. the neighbouring countries, the continent of which that country is part of and the global maps.</li> <li>If you choose Spatial search type encloses \"Country\" you will get, in the output results, maps of that country first and then all maps within its bounding box.</li> <li>Similarly, if you choose Spatial search type is fully outside of a selected region, only maps that follow that exact criteria will show in the output results.</li> </ul> <p>The WHEN? section gives you the possibility to restrict your search in terms of temporal extent, indicating a specific range of time referred to the data creation or publication date.</p> <ul> <li>To specify a range of time, click on the date selector button next to From -- To fields. Make use of the symbols &gt; and &gt;&gt; on top of the calendar to select the month and the year first and then click on the exact day; a complete date will be filled in using the following standard order: YY-MM-DD.</li> <li>To clean the time fields, simply click on the white cross on their right; the box Any will be automatically selected and the search will be performed without any restriction on the time period.</li> </ul> \"When\" section in the Advanced search <p>Finally, the advanced search allows you to apply further restrictions on the basis of additional parameters as data source, data categories and data format.</p> <ul> <li>To limit your queries to only one Catalogue out of those made available by the installation through the harvesting process, highlight the catalogue of preference or just keep Any selected to search all sites.</li> <li>To search for data organised by Category, such as Applications, Datasets, etc., simply highlight the category you wish to search in from the related drop-down list, otherwise we suggest to leave this field in Any Category.</li> <li>You can search for Digital or Hard Copy maps. To search in one or the other, simply check the box next to the one you wish to search. If no box is checked, all content will be searched.</li> </ul> <p>At last, you can customise the number of output results per page in the Hits Per Page field. Simply highlight the number of records to be displayed or leave the field set on the default number (10).</p> <ul> <li>Click the Search button.</li> </ul> Other options in the Advanced search"},{"location":"users/quickstartguide/getting_started/#inspire","title":"Inspire","text":"<p>If INSPIRE Search panel is enable in Administration &gt; System configuration page, an additional section is displayed to allow searching INSPIRE metadata in the catalog.</p> <p> \"Inspire\" section in the Advanced search </p> <ul> <li>Annex: Allows to search for metadata related to a specific Inspire annex. The Inspire annexes for a metadata are based on the Inspire theme keywords assigned to it.</li> <li>Source type: Allows to search for dataset or service metadata.</li> <li>Service type: Allows to search for service metadata using the service type values defined in INSPIRE metadata regulation (section 1.3.1).</li> <li>Classification of data services: Allows to search for metadata that have selected keyword from the Inspire service taxonomy thesaurus.</li> <li>Inspire themes: Allows to search for metadata that have selected keywords from the Inspire themes thesaurus.</li> </ul>"},{"location":"users/quickstartguide/getting_started/#search-results","title":"Search Results","text":"<p>The output of a search provides you a list of the metadata records that should fit your request. For each record, the result page shows the title, an abstract and the keywords. According to the privileges that have been set for each metadata, a maximum of four sections can be consulted, as shown below.</p> Search results <ol> <li> <p>Metadata: The metadata section describes the dataset (e.g.: citation, data owner, temporal/spatial/methodological information) and could contain links to other web sites that could provide further information about the dataset.</p> </li> <li> <p>Download: Depending on the privileges that have been set for each record, when this button is present, the dataset is available and downloadable. The process for retrieving data is simple and quick by just clicking the download button or by using the proper link in the specific metadata section for distribution info in the full metadata view.</p> <p> A single search result </p> <p> Available services related to the resource </p> </li> <li> <p>Interactive Map: The map service is also optional. When this button is shown, an interactive map for this layer is available and, by default, it will be displayed on the map screen of the simple search. To better visualise the map through the map viewer, click on Show Map on the top of search results panel.</p> <p> The interactive map viewer </p> </li> <li> <p>Graphic Overviews: There are small and large overviews of the map used to properly evaluate usefulness of the data, especially if the interactive map is not available. Simply click on the small image to enlarge it.</p> <p> Large preview image </p> </li> </ol>"},{"location":"users/quickstartguide/getting_started/#privileges-roles-and-user-groups","title":"Privileges, roles and user groups","text":"<p>GeoNetwork uses a system of Privileges, Roles and User groups.</p> <p>There are no restrictions for users to search and access public information in a GeoNetwork opensource based catalogue. To get access to restricted information or advanced functionality, an account to log in is required. This should be provided by the GeoNetwork administrator.</p> <p>To log in, simply go to the home page and enter your username and password in the dedicated fields on the top right corner, then click the login button.</p> Login <p>Privileges. Depending on the privileges set on a metadata record and on your role as an authenticated user, you will be able to read about a resource and download or interactively browse data related to that resource.</p> <p>Roles. Users with an Editor role can create, import and edit metadata records. They can also upload data and configure links to interactive map services.</p> <p>User groups. Every authenticated user is assigned to a particular work group and is able to view data within that work group.</p>"},{"location":"users/quickstartguide/installing/","title":"Installing the software","text":""},{"location":"users/quickstartguide/installing/#where-do-i-get-the-installer","title":"Where do I get the installer?","text":"<p>The software is distributed through the SourceForge.net Website at http://sourceforge.net/projects/geonetwork.</p> <p>Use the platform independent installer (.jar) for all platforms except Windows. Windows has a .exe file installer.</p>"},{"location":"users/quickstartguide/installing/#system-requirements","title":"System requirements","text":"<p>GeoNetwork can run either on MS Windows , Linux or Mac OS X .</p> <p>Some general system requirements for the software to run without problems are listed below:</p> <p>Processor : 1 GHz or higher</p> <p>Memory (RAM) : 1 GB or higher</p> <p>Disk Space : Minimum of 512MB of free disk space. Additional space is required depending on the amount of spatial data that you expect to upload.</p> <p>Other Software requirements : A Java Runtime Environment (JRE 1.6.0). For server installations, Apache Tomcat and a dedicated JDBC compliant DBMS (MySQL, Postgresql, Oracle) can be used instead of Jetty and H2.</p>"},{"location":"users/quickstartguide/installing/#additional-software","title":"Additional Software","text":"<p>The software listed here is not required to run GeoNetwork, but can be used for custom installations.</p> <ol> <li>MySQL DBMS v5.5+ (All)[^1]</li> <li>Postgresql DBMS v7+ (All)[^2]</li> <li>Apache Tomcat v5.5+ (All)[^3]</li> </ol>"},{"location":"users/quickstartguide/installing/#supported-browsers","title":"Supported browsers","text":"<p>GeoNetwork should work normally with the following browsers:</p> <ol> <li>Firefox v1.5+ (All)[^4]</li> <li>Internet Explorer v8+ (Windows)</li> <li>Safari v3+ (Mac OS X Leopard)</li> </ol>"},{"location":"users/quickstartguide/installing/#how-do-i-install-geonetwork-opensource","title":"How do I install GeoNetwork opensource?","text":"<p>Before running the GeoNetwork installer, make sure that all system requirements are satisfied, and in particular that the Java Runtime Environment version 1.6.0 is set up on your machine.</p>"},{"location":"users/quickstartguide/installing/#on-windows","title":"On Windows","text":"<p>If you use Windows, the following steps will guide you to complete the installation (other FOSS will follow):</p> <p>Warning</p> <p>Avoid installing in a directory containing spaces. Best is to install in <code>c:\\programs</code> and not in <code>c:\\program files</code></p> <ol> <li>Double click on geonetwork-install-develop.exe to start the GeoNetwork opensource desktop installer</li> <li>Follow the instructions on screen. You can choose to install the embedded map server (based on GeoServer and the European Union Inspire Directive configuration pack. Developers may be interested in installing the source code and installer building tools. Full source code can be found in the GeoNetwork github code repository at http://github.com/geonetwork.</li> <li>After completion of the installation process, a 'GeoNetwork desktop' menu will be added to your Windows Start menu under 'Programs'</li> <li>Click Start&gt;Programs&gt;GeoNetwork desktop&gt;Start server to start the Geonetwork opensource Web server. The first time you do this, the system will require about 1 minute to complete startup.</li> <li>Click Start&gt;Programs&gt;Geonetwork desktop&gt;Open GeoNetwork opensource to start using GeoNetwork opensource, or connect your Web browser to http://localhost:8080/geonetwork/</li> </ol> Installer Packages to be installed <p>The installer allows to install these additional packages:</p> <ol> <li>GeoNetwork User Interface: Experimental UI for GeoNetwork using javascript components based on ExtJs library.</li> <li>GeoServer: Web Map Server that provides default base layers for the GeoNetwork map viewer.</li> <li> <p>European Union INSPIRE Directive configuration pack: Enables INSPIRE support in GeoNetwork.</p> </li> <li> <p>INSPIRE validation rules.</p> </li> <li>Thesaurus files (GEMET, Inspire themes).</li> <li>INSPIRE search panel.</li> <li>INSPIRE metadata view.</li> </ol>"},{"location":"users/quickstartguide/installing/#installation-using-the-platform-independent-installer","title":"Installation using the platform independent installer","text":"<p>If you downloaded the platform independent installer (a .jar file), you can in most cases start the installer by simply double clicking on it.</p> <p>Follow the instructions on screen (see also the section called On Windows).</p> <p>At the end of the installation process you can choose to save the installation script.</p> Save the installation script for commandline installations"},{"location":"users/quickstartguide/installing/#commandline-installation","title":"Commandline installation","text":"<p>If you downloaded the platform independent installer (a .jar file), you can perform commandline installations on computers without a graphical interface. You first need to generate an install script (see Figure Save the installation script for commandline installations). This install script can be edited in a text editor to change some installation parameters.</p> <p>To run the installation from the commandline, issue the following command in a terminal window and hit enter to start:</p> <pre><code>java -jar geonetwork-install-2.8.0.jar install.xml\n[ Starting automated installation ]\nRead pack list from xml definition.\nTry to add to selection [Name: Core and Index: 0]\nTry to add to selection [Name: GeoServer and Index: 1]\nTry to add to selection [Name: European Union INSPIRE Directive configuration pack and Index: 2]\nModify pack selection.\nPack [Name: European Union INSPIRE Directive configuration pack and Index: 2] added to selection.\n[ Starting to unpack ]\n[ Processing package: Core (1/3) ]\n[ Processing package: GeoServer (2/3) ]\n[ Processing package: European Union INSPIRE Directive configuration pack (3/3) ]\n[ Unpacking finished ]\n[ Creating shortcuts ....... done. ]\n[ Add shortcuts to uninstaller  done. ]\n[ Writing the uninstaller data ... ]\n[ Automated installation done ]\n</code></pre> <p>You can also run the installation with lots of debug output. To do so run the installer with the flag -DTRACE=true:</p> <pre><code>java -DTRACE=true -jar geonetwork-install-2.8.0.jar\n</code></pre>"},{"location":"users/quickstartguide/installing/#user-interface-configuration","title":"User interface configuration","text":"<p>As mentioned above, GeoNetwork now provides two user interfaces:</p> <ul> <li>Default user interface is the old user interface from 2.6.x and earlier</li> <li>Javascript Widgets user interface is the new user interface for searching, editing and viewing metadata records in 2.8.x</li> </ul> <p>The catalog administrator can configure which interface to use in <code>WEB-INF/config-gui.xml</code> as follows.</p>"},{"location":"users/quickstartguide/installing/#configuring-the-default-user-interface","title":"Configuring the Default user interface","text":"<p><code>WEB-INF/config-gui.xml</code> is used to define which home page to use. To configure the Default user interface use:</p> <pre><code>&lt;client type=\"redirect\" \n  widget=\"false\" \n  url=\"main.home\"\n  parameters=\"\"\n  stateId=\"\"\n  createParameter=\"\"/&gt;\n</code></pre>"},{"location":"users/quickstartguide/installing/#configuring-the-javascript-widgets-user-interface","title":"Configuring the Javascript Widgets user interface","text":"<p>Widgets can be used to build custom interfaces. GeoNetwork provides a Javascript Widgets interface for searching, viewing and editing metadata records.</p> <p>This interface can be configured using the following attributes:</p> <ul> <li>parameter is used to define custom application properties like default map extent for example or change the default language to be loaded</li> <li>createParameter is appended to URL when the application is called from the administration &gt; New metadata menu (usually \"#create\").</li> <li>stateId is the identifier of the search form (usually \"s\") in the application. It is used to build quick links section in the administration and permalinks.</li> </ul> <p>Sample configuration:</p> <pre><code>&lt;!-- Widget client application with a tab based layout --&gt;\n&lt;client type=\"redirect\" \n  widget=\"true\" \n  url=\"../../apps/tabsearch/\" \n  createParameter=\"#create\" \n  stateId=\"s\"/&gt;\n</code></pre>"},{"location":"users/quickstartguide/installing/#configuring-the-user-interface-with-configuration-overrides","title":"Configuring the user interface with configuration overrides","text":"<p>Instead of changing config-gui.xml file, the catalog administrator could use the configuration overrides mechanism to create a custom configuration (See Configuration override). By default, no overrides are set and the Default user interface is loaded.</p> <p>To configure which user interface to load, add the following line in WEB-INF/config-overrides.xml in order to load the Widgets based user interface:</p> <pre><code>&lt;override&gt;/WEB-INF/config-overrides-widgettab.xml&lt;/override&gt;\n</code></pre>"},{"location":"users/quickstartguide/installing/#xslt-processor-configuration","title":"XSLT processor configuration","text":"<p>The file <code>INSTALL_DIR/web/geonetwork/WEB-INF/classes/META-INF/javax.xml.transform.TransformerFactory</code> defines the XSLT processor to use in GeoNetwork. The allowed values are:</p> <ol> <li><code>de.fzi.dbs.xml.transform.CachingTransformerFactory</code>: This is the Saxon XSLT processor with caching (recommended value for production use). However, when caching is on, any updates you make to stylesheets may be ignored in favour of the cached stylesheets.</li> <li><code>net.sf.saxon.TransformerFactoryImpl</code>: This is the Saxon XSLT processor without caching. If you plan to make changes to any XSLT stylesheets you should use this setting until you are ready to move to production.</li> </ol> <p>GeoNetwork sets the XSLT processor configuration using Java system properties for an instant in order to obtain its TransformerFactory implementation, then resets it to the original value, to minimize affect the XSL processor configuration for other applications that may be running in the same container.</p>"},{"location":"users/quickstartguide/installing/#basic_database_config","title":"Database configuration","text":"<p>Geonetwork uses the H2 database engine as default. The following additional database backends are supported (listed in alphabetical order):</p> <ul> <li>DB2</li> <li>H2</li> <li>Mckoi</li> <li>MS SqlServer 2008</li> <li>MySQL</li> <li>Oracle</li> <li>PostgreSQL (or PostGIS)</li> </ul> <p>To configure one of these databases for use by GeoNetwork, three steps are required.</p>"},{"location":"users/quickstartguide/installing/#choose-a-database-connection-pool","title":"Choose a Database Connection Pool","text":"<p>To manage connections with the database efficiently, a database connection pool is used. GeoNetwork uses the Apache Database Connection Pool (DBCP). This connection pool can be configured directly in the config.xml file described below or in Jetty/tomcat through the Java Naming and Directory Interface (JNDI).</p> <ul> <li>ApacheDBCPool: This pool is recommended for smaller catalogs (less than 10,000 records).</li> <li>JNDIPool: This pool is configured in Jetty or Tomcat. It is recommended for larger catalogs (especially those with more than approx 30,000 records).</li> </ul> <p>More details about the DBCP configuration parameters that can be used here are in the advanced configuration section of this manual (See Database configuration).</p>"},{"location":"users/quickstartguide/installing/#download-and-install-jdbc-drivers","title":"Download and install JDBC Drivers","text":"<p>For the Apache DBCP pool, JDBC database driver jar files should be in INSTALL_DIR/WEB-INF/lib. For Open Source databases, like MySQL and PostgreSQL, the jar files are already installed. For commercial databases like Oracle, the jar files must be downloaded and installed manually. This is due to licensing issues.</p> <ul> <li>DB2 JDBC driver download</li> <li>MS Sql Server JDBC driver download</li> <li>Oracle JDBC driver download</li> </ul>"},{"location":"users/quickstartguide/installing/#specify-configuration-in-geonetwork","title":"Specify configuration in GeoNetwork","text":"<p>You can manually configure the database by editing INSTALL_DIR/WEB-INF/config.xml. In the resources element of this file, you will find a resource element for each database that GeoNetwork supports. Only one of these resource elements can be enabled. The following is an example for the default H2 database used by GeoNetwork:</p> <pre><code>&lt;resource enabled=\"true\"&gt;\n  &lt;name&gt;main-db&lt;/name&gt;\n  &lt;provider&gt;jeeves.resources.dbms.ApacheDBCPool&lt;/provider&gt;\n  &lt;config&gt;\n    &lt;user&gt;admin&lt;/user&gt;\n    &lt;password&gt;gnos&lt;/password&gt;\n    &lt;driver&gt;org.h2.Driver&lt;/driver&gt;\n    &lt;url&gt;jdbc:h2:geonetwork;MVCC=TRUE&lt;/url&gt;\n    &lt;poolSize&gt;33&lt;/poolSize&gt;\n    &lt;validationQuery&gt;SELECT 1&lt;/validationQuery&gt;\n  &lt;/config&gt;\n&lt;/resource&gt;\n</code></pre> <p>If you want to use a different database, then you need to set the enabled attribute on your choice to \"true\" and set the enabled attribute on the H2 database to \"false\". NOTE: If two resources are enabled, GeoNetwork will not start.</p> <p>As a minimum, the  ,  and  for your database need to be changed. Here is an example for the DB2 database: <pre><code>&lt;resource enabled=\"true\"&gt;\n  &lt;name&gt;main-db&lt;/name&gt;\n  &lt;provider&gt;jeeves.resources.dbms.ApacheDBCPool&lt;/provider&gt;\n  &lt;config&gt;\n    &lt;user&gt;db2inst1&lt;/user&gt;\n    &lt;password&gt;mypassword&lt;/password&gt;\n    &lt;driver&gt;com.ibm.db2.jcc.DB2Driver&lt;/driver&gt;\n    &lt;url&gt;jdbc:db2:geonet&lt;/url&gt;\n    &lt;poolSize&gt;10&lt;/poolSize&gt;\n    &lt;validationQuery&gt;SELECT 1 FROM SYSIBM.SYSDUMMY1&lt;/validationQuery&gt;\n  &lt;/config&gt;\n&lt;/resource&gt;\n</code></pre>"},{"location":"users/quickstartguide/installing/#starting-up-geonetwork-with-a-new-database","title":"Starting up GeoNetwork with a new database","text":"<p>At startup, GeoNetwork checks if the database tables it needs are present in the currently configured database. If not, the tables are created and filled with initial data.</p> <p>If the database tables are present but were created with an earlier version of GeoNetwork, then a migration script is run.</p> <p>An alternative to running these scripts automatically is to execute them manually. This is preferable for those that would like to examine and monitor the changes being made to their database tables.</p> <ul> <li>The scripts for initial setup are located in INSTALL_DIR/WEB-INF/classes/setup/sql/create/</li> <li>The scripts for inserting initial data are located in INSTALL_DIR/WEB-INF/classes/setup/sql/data/</li> <li>The scripts for migrating are located in INSTALL_DIR/WEB-INF/classes/setup/sql/migrate/</li> </ul>"},{"location":"users/quickstartguide/installing/#issues-or-exceptions-with-databases","title":"Issues or exceptions with databases","text":"<p>If you run into problems when you start GeoNetwork with a particular database, you may find a solution in the Specific Database Issues section of this manual.</p>"},{"location":"users/quickstartguide/installing/#upgrading-to-a-new-version","title":"Upgrading to a new Version","text":"<p>The upgrade process from one version to another is typically a fairly simple process. Following the normal setup instructions, should result in Geonetwork successfully upgrading the internal datastructures from the old version to the new version. The exceptions to this rule are:</p> <ul> <li>Migration to Geonetwork 2.8 will reset all harvesters to run every 2 hours. This is because the underlying harvester scheduler has been changed and the old schedules are not longer supported. In this case one must review all the harvesters and define new schedules for them.</li> </ul> <p>[^1]: All = Windows, Linux and Mac OS X</p> <p>[^2]: All = Windows, Linux and Mac OS X</p> <p>[^3]: All = Windows, Linux and Mac OS X</p> <p>[^4]: All = Windows, Linux and Mac OS X</p>"},{"location":"users/quickstartguide/metadata_concepts/","title":"Metadata in Spatial Data Management","text":""},{"location":"users/quickstartguide/metadata_concepts/#what-is-metadata","title":"What is Metadata?","text":"<p>Metadata, commonly defined as \"data about data\" or \"information about data\", is a structured set of information which describes data (including both digital and non-digital datasets) stored in administrative systems. Metadata may provide a short summary about the content, purpose, quality, location of the data as well as information related to its creation.</p>"},{"location":"users/quickstartguide/metadata_concepts/#what-are-metadata-standards","title":"What are Metadata Standards?","text":"<p>Metadata standards provide data producers with the format and content for properly describing their data, allowing users to evaluate the usefulness of the data in addressing their specific needs.</p> <p>The standards provide a documented, common set of terms and definitions that are presented in a structured format.</p>"},{"location":"users/quickstartguide/metadata_concepts/#why-do-we-need-standardised-metadata","title":"Why do we need Standardised Metadata?","text":"<p>Standardised metadata support users in effectively and efficiently accessing data by using a common set of terminology and metadata elements that allow for a quick means of data discovery and retrieval from metadata clearinghouses. The metadata based on standards ensure information consistency and quality and avoid that important parts of data knowledge are lost.</p>"},{"location":"users/quickstartguide/metadata_concepts/#geographic-information-metadata-standard","title":"Geographic Information Metadata Standard","text":"<p>Geographic data, which can be defined as any data with a geographic component, is often produced by one individual or organisation, and may address the needs of various users, including information system analysts, programme planners, developers of geographic information or policy makers. Proper standard documentation on geographic data enable different users to better evaluate the appropriateness of data to be used for data production, storage, update.</p> <p>The metadata standards supported by GeoNetwork opensource are the ISO 19115:2003 -approved by the international community in April 2003 as a tool to define metadata in the field of geographic information - and the FGDC - the metadata standard adopted in the United States by the Federal Geographic Data Committee. In addition, GeoNetwork opensource supports also the international standard Dublin Core for the description of general documents.</p> <p>This ISO Standard precisely defines how geographic information and related services should be described, providing mandatory and conditional metadata sections, metadata entities and metadata elements. This standard applies to data series, independent datasets, individual geographic features and feature properties. Despite ISO 19115:2003 was designed for digital data, its principles can be extended to many other forms of geographic data such as maps, charts, and textual documents as well as non-geographic data.</p> <p>The underlying format of an ISO19115:2003 compliant metadata is XML. GeoNetwork uses the ISO Technical Specification 19139 Geographic information - Metadata -XML schema implementation for the encoding of this XML.</p>"},{"location":"users/quickstartguide/metadata_concepts/#metadata-profiles","title":"Metadata profiles","text":"<p>A metadata profile is an adaptation of a metadata standard to suit the needs of a community. For example, the ANZLIC profile is an adaptation of the ISO19115/19139 metadata standard for Australian and New Zealand communities. A metadata profile could be implemented as:</p> <ul> <li>a specific metadata template that restricts the fields/elements a user can see with a set of validation rules to check compliance</li> <li>all of the above plus new fields/elements to capture concepts that aren't in the basic metadata standard</li> </ul> <p>Building a metadata profile is described in the Schema Plugins section of the GeoNetwork Developers Manual. Using this guide and the GeoNetwork schema plugin capability, a profile can be built by an experienced XML/XSL software engineer.</p>"},{"location":"users/quickstartguide/metadata_concepts/#transition-between-metadata-standards","title":"Transition between metadata standards","text":"<p>With the ISO19115:2003 Metadata standard for Geographic Information now being the preferred common standard, many have a need to migrate legacy metadata into the new standard.</p> <p>GeoNetwork provides import (and export) functionality and has a number of transformers in place. It is an easy process for a system administrator to install custom transformers based on XSLT.</p>"},{"location":"users/quickstartguide/new_metadata/","title":"Adding a metadata record","text":"<p>This section guides you through the process of adding new metadata records with associated data and/or services into the GeoNetwork catalog. You will use metadata template records, add thumbnails, upload data, link to services and set access privileges to the metadata and the data it describes.</p> <p>To add or edit metadata, you must be registered as a user with an Editor profile or higher. That user should be a member of the User Group you want to add information for. Contact your administrator if you are not a registered Editor for your User Group.</p> <p>For metadata creation using the online editor, GeoNetwork provides a set of simplified metadata templates based on the cited standards available in your GeoNetwork instance: typically ISO19139 (an implementation of ISO19115), FGDC and Dublin Core. The templates for describing vector or raster geographic data based on ISO19139 are preferred because they are devised in a way that hides much of the complexity of the ISO19115 standard in the default view. At the same time those templates are extensible with new elements to fit specialized needs through the advanced view.</p> To produce a good metadata record, always try to: <ul> <li>gather as many details as possible on the resource that you want to describe taking into account the metadata elements that have been presented in the previous chapter</li> <li>develop and reuse the same terms or phrases to describe the concepts you want to capture. A record of these terms and phrases will be helpful for others in understanding your metadata.</li> </ul> <p>The next step is to fill out properly the fields provided by the metadata templates, while at the same time avoiding duplication of information throughout the form.</p> <p>The most important fields that may not be waived while compiling a standard based metadata record are the following: Title, Date of Creation or Publication, Abstract, Language used for documenting data, Topic Category, Scale, Maintenance and Update Frequency, Metadata Author, Language Used for Documenting Metadata.</p> <p>In addition to the main mandatory fields, we recommend you to fill out these optional but critical fields (if information is available): Purpose - Keywords - Presentation Form - Status - Spatial Representation Type - Geographic Location - Reference System Info - Temporal Extent - Data Quality Info - Access and Use Constraints - Point of Contact - Distribution Info: Online Resources.</p> <p>You should also prepare an image of your data that is required to be displayed in search results as thumbnail.</p> <p>Next section will guide you through the process of metadata creation using the online editor.</p>"},{"location":"users/quickstartguide/new_metadata/#creating-a-new-record-using-the-metadata-editor","title":"Creating a New Record using the Metadata Editor","text":"<ol> <li>In the home page, click on the Administration Tab.</li> <li>Select New Metadata from the List of the admin page.</li> <li>Select the metadata standard Template, if possible, using the preferred ones. GeoNetwork opensource comes by default with support for three metadata standards, ISO19139, FGDC and Dublin core. For the ISO standard, two templates have been developed; one for vector and one for raster data. Both contain a relevant set of elements to describe the respective types of data. More templates can be developed online.</li> <li>Select the Group the metadata will belong to. These are the groups authorized to add metadata to by your administrator.</li> <li>Click on Create.</li> </ol>"},{"location":"users/quickstartguide/new_metadata/#the-steps-in-more-details","title":"The steps in more details","text":"<ol> <li> <p>Enter your username and password and click on the login button. The system will identify you and assign the correct privileges to work with.</p> <p> Login </p> </li> <li> <p>Open the Administration page by clicking the Administration button in the banner and then click on the New metadata link.</p> <p> Administration panel </p> </li> <li> <p>From the metadata creation page, select the metadata standard to use from the dropdown list (Figure 4.3, \"Template selection\")</p> <p> Template selection </p> </li> <li> <p>After selecting the correct template, you should identify which group of users the metadata will belong to and finally click on Create.</p> <p> Group selection </p> </li> <li> <p>A new metadata form based on the selected template will be displayed for you to fill out.</p> </li> </ol>"},{"location":"users/quickstartguide/new_metadata/#switching-editing-views-from-default-to-advanced-to-xml-view","title":"Switching Editing Views from Default to Advanced to XML View","text":"<p>Once you create a new record, you can choose between Default, Advanced or XML View. To switch view, simply click on the view you want to switch to on the left column of the page. The view in bold is the view you are currently using.</p> Metadata view options <p>In the previous chapter you have analyzed the metadata structure as it is presented in the Default View. A selection of the main fields from different categories of information is shown in one single view. The minimum set of metadata required to serve the full range of metadata applications (data discovery, determination of data fitness for use, data access, data transfer and use of digital data) is defined here, along with optional metadata elements to allow for a more extensive standard description of geographic data, if required. However, if should be there a need to add more metadata elements, you can switch to the advanced view at any time while editing.</p> <p>In the Advanced View, the ISO profile offers the possibility to visualize and edit the entire metadata structure organized in sections accessible through tabs from the left column. You can use this view to write more advanced metadata descriptions or templates to fit specialized needs.</p> Advanced view <p>The XML View shows the entire content of the metadata in the original hierarchical structure; different colors allow to distinguish between an element's name and its value. The XML structure is composed of tags and to every tag must correspond a closing tag. The content is entirely contained withing the two, i.e.:</p> <pre><code>&lt;gmd:language&gt;\n  &lt;gco:CharacterString&gt;eng&lt;/gco:CharacterString&gt;\n&lt;/gmd:language&gt;\n</code></pre> XML view <p>Nevertheless, the use of the XML view requires some knowledge of the XML language.</p> <p>Both the Default and the Advanced Views are composed of <code>mandatory</code>, <code>conditional</code> and <code>optional</code> metadata fields. The meaning of mandatory and optional is fairly intuitive; the mandatory fields are required, like <code>Title</code> and <code>Abstract</code> for instance, whereas the optional fields can be provided but are not fundamental, depending on the metadata author. The conditional fields may be considered mandatory under certain circumstances: essentially a conditional requirement indicates that the presence of a specified data element is dependent on the value or presence of other data elements in the same section. For instance, the <code>Individual name</code> metadata element of the <code>Point of Contact</code>, which is a conditional element of the Identification section, becomes mandatory if another element of the same section, <code>Organization name</code> or <code>Position name</code> is not already defined.</p> Point of Contact <p>The mandatory fields as well as those highly recommended are flagged with red asterisk [*]. The standard definition for each field can be read by passing the mouse on the element name.</p> <p>The Default View is the preferred view as it provides a selection of the available metadata elements, facilitating both the user and the editor in reading and editing a metadata record, and at the same time it ensures that a geospatial data can be properly described, through :</p> <ul> <li>the minimum set of metadata required to serve the full range of metadata applications (data discovery, determination of data fitness for use, data access, data transfer, and use of digital data);</li> <li>optional metadata elements - to allow for a more extensive standard description of geographic data, if required;</li> <li>a method for extending metadata to fit specialized needs.</li> </ul>"},{"location":"users/quickstartguide/new_metadata/#using-basic-commands-of-the-editor","title":"Using basic commands of the editor","text":"<p>Fields are either free text fields or drop down lists. Free text means you can type any text into that field. Drop down lists allow you to select only one option from the list. You can add multiple fields of the same kind by clicking on the [+] symbol next to the element. Every new field that you will add in the advanced view will then be visible in the default view. You can also delete existing fields by clicking on the [x] symbol next to the element. Clearly, mandatory fields cannot be deleted. One example of the need to add multiple fields can arise if the content of your dataset has some text written in two different languages.</p> Describing multilingual data"},{"location":"users/quickstartguide/new_metadata/#example-entering-metadata-for-a-thematic-map","title":"Example: Entering metadata for a Thematic Map","text":"<p>As we mentioned in the introduction to this guide, GeoNetwork provides tools to describe any type of geographic data (vector layers, raster, tables, map services, etc.) as well as general documents like reports, projects, papers, etc. For the purpose of this Quick Start Guide, an example of required and useful metadata elements to properly describe a thematic map will be provided hereafter. You should gather as much information as possible to identify and understand the map's resource and characteristics you want to describe. Use the default view to start. If necessary, you can always switch to advanced view or come back later and edit the record with the additional information collected.</p> <p>Please follow these steps to enter your map's metadata. Note that we will only go through the fields that have been identified as compulsory (i.e. those fields marked with the asterix [*], mandatory or highly recommended).</p> <p>Title *: Under the Identification Info field, give your map a name. There will be a default name of your data. Use free text to describe your map here.</p> <p>Date *: Indicate the exact date of creation, publication or revision on your map.</p> <p>Presentation Form: Specify the type of presentation, i.e. digital, hard copy, table, etc.</p> <p>Abstract *: Enter some description of the map.</p> <p>Purpose: Enter a short summary of the purposes for your map to be developed.</p> <p>Status: Specify the status of your map within the following options: completed, historical archive, obsolete, ongoing, planned, required, under development.</p> <p>Point of Contact: Enter all mandatory information and others you have at hand for the contact of the person(s) associated with this resources of the map. Note that some fields are only conditionally mandatory, such as Organization Name if Individual Name and Position are not entered.</p> <p>Maintenance and update frequency * : Specify the frequency with which you expect to make changes and additions to your map after the initial version is completed. If any changes are scheduled you can leave As Needed selected from the drop-down list.</p> <p>Descriptive Keywords: Enter keywords that describe your map. Also specify the type of keyword you are entering, i.e. place, theme, etc. Remember that you can add another keyword field if you need to add different types of keywords.</p> <p>Access Constraints: Enter an access constraint here, such as a copyright, trademark, etc. to assure the protection of privacy and intellectual property.</p> <p>User Constraints: Enter a user constraint here to assure the protection of privacy and intellectual property.</p> <p>Other Constraints * : Enter other constraint here to assure the protection of privacy and intellectual property. Note that this field is conditionally mandatory if Access and Use constraints are not entered.</p> <p>Spatial representation type: Select, from the drop-down list the method used to spatially represent your data. The options are: vector, grid, text table, stereo model, video.</p> <p>Scale Denominator * : Enter the denominator for an equivalent scale of a hard copy of the map.</p> <p>Language* : Select the language used within your map</p> <p>Topic category * : Specify the main ISO category/ies through which your map could be classified (see Annex for the complete list of ISO topic categories).</p> <p>Temporal Extent * : Enter the starting and ending date of the validity period.</p> <p>Geographic Bounding Box * : Enter the longitude and latitude for the map or select a region from the predefined drop-down list. Make sure you use degrees for the unit of the geographic coordinates as they are the basis for the geographic searches.</p> <p>Supplemental Information: Enter any other descriptive information about your map that can help the user to better understand its content.</p> <p>Distribution Info: Enter information about the distributor and about options for obtaining your map.</p> <p>Online Resource: Enter information about online resources for the map, such as where a user may download it, etc. This information should include a link, the link type (protocol) and a description of the resource.</p> <p>Reference System Info: Enter information about the spatial reference system of your map. The default view contains one element to provide the alphanumeric value identifying the reference system used. GNos uses the EPSG codes which are numeric codes associated with coordinate system definitions. For instance, EPSG:4326 is Geographic lat-long WGS84, and EPSG:32611 is \"UTM zone 11 North, WGS84\". Using elements from the advanced view, you may add more details on data projection, ellipsoid and datum. Note that if this information is provided, a reference system identifier is not mandatory.</p> <p>Data Quality: Specify the hierarchal level of the data (dataset series, dataset, features, attributes, etc.) and provide a general explanation on the production processes (lineage) used for creating the data. The statement element is mandatory if the hierarchical level element is equal to dataset or series. Detailed information on completeness, logical consistency and positional, thematic and temporal accuracy can be directly added into the advanced form.</p> <p>Metadata Author * : Provide information about the author of the map, including the person's name, organization, position, role and any other contact information available.</p> <p>After completion of this section, you may select the Type of document that you are going to save in the catalogue. You have three options: Metadata, Template, Sub-template. By default Metadata is set up.</p> <p>When done, you may click <code>Save</code> or <code>Save and Close</code> to close the editing session.</p>"},{"location":"users/quickstartguide/new_metadata/#metadata-validation","title":"Metadata validation","text":"<p>In editing mode, editors can validate the current metadata record against standard rules and recommendations.</p> <p>For all standards, a first level of validation is made for XML metadata validation based on XML Schema (XSD). For ISO19139 records, other rules are checked:</p> <ul> <li>ISO recommendations</li> <li>GeoNetwork recommendations</li> <li>(Optional and not available by default) INSPIRE recommendations</li> </ul> <p>The validation report display the list of rules checked and their status (pass or failed). The top checkbox allows to display only errors or all.</p> <p></p>"},{"location":"users/quickstartguide/new_metadata/#creating-a-thumbnail","title":"Creating a Thumbnail","text":"<p>To help the user identify a metadata record of interest, you can create a graphic overview (or thumbnail) in the form of an image and attach it to the metadata record. For example, if your metadata record describes some geographic dataset then the the graphic overview could be an image of the map with legend produced by an OGC Web Map Service.</p> <p>You can associate two thumbnails with a record: a small thumbnail, which will be displayed in search results and a large thumbnail with more details in case the user is interested in more information. The large thumbnail will be displayed when the user clicks on the small thumbnail.</p> <p>To create a thumbnail, go to the editing menu. If you are no longer in editing mode, retrieve the metadata record using one of the search options then click on Edit. Then follow these simple steps:</p> <p>From the editing menu, click on the Thumbnails button on the top or bottom of the page.</p> The thumbnail wizard button <ul> <li>You will be taken to the Thumbnail Management wizard.</li> <li>To create a small or large thumbnail, click on the Browse button next to either one. It is recommended that you use 180 pixels for small thumbnails and 800x600 for large thumbnails. Using the 'Large thumbnail' option allows you to create both a small and large thumbnail in one go.</li> <li>You can use GIF, PNG and JPEG images as input for the thumbnails.</li> <li>A pop up window will appear allowing you to browse your files on your computer. Select the file you wish to create a thumbnail with by double-clicking on it.</li> <li>Click on <code>Add</code>.</li> <li>Your thumbnail will be added and displayed on the following page.</li> <li>You can then click on Back to Editing and save your record.</li> </ul> Thumbnail wizard Completed thumbnail wizard"},{"location":"users/quickstartguide/new_metadata/#compute-bounding-box-from-keywords","title":"Compute bounding box from keywords","text":"<p>Editor can add extent information based on keyword analysis.</p> <ul> <li>For each keywords</li> <li>Search for the keyword in thesaurus</li> <li>If keyword in the thesaurus has an extent</li> <li>Add an extent with a description and a bounding box to the metadata record.</li> </ul> <p>The process could be run in 2 modes :</p> <ul> <li>Add : Keep existing extent elements and add the new one at the end. Editor could clean the section after processing.</li> <li>Replace : Remove all extent having only a bounding box (temporal, vertical and bounding polygon are not removed), and add the new one at the end.</li> </ul> <p>Editor need to select keyword from a thesaurus with spatial information. The name is added to the extent description field.</p> <p></p> <p>Then in the other actions menu, the compute boundinx box menus are available:</p> <p></p> <p>The metadata is saved during the process and one extent is added for each keywords.</p> <p></p> <p>If user manually add keywords just before computing bounding box, then it's recommended to save your metadata record before launching the action in order to have latest keywords taken into account.</p>"},{"location":"users/quickstartguide/new_metadata/#assigning-privileges","title":"Assigning Privileges","text":"<p>To assign privileges to your metadata record and any attached data you will need to identify User Groups and the privileges you want to assign to users in these groups. eg. View the metadata, download the data attached to the record, etc.</p> <p>For instance, you can specify that the metadata and related services are visible to all (Internet users) or just to internal users only (Intranet). Privileges are assigned on a per group basis. Depending on the user profile (Guest, Registered User, Editor, Admin etc.) access to these functions may differ on a per user basis.</p> <p>To assign privileges, follow these steps:</p> <ul> <li>Find your metadata record by using the search option. Whether you have multiple or single results from the search, on top of the individual record or next to the record you will always see a row of buttons including a Privileges button.</li> </ul> The editing toolbar with Privileges button <ul> <li>Click on the Privileges button. A drop down menu will appear from which you can assign certain privileges to specific groups using checkboxes. Simply click on the small box next to the privilege to place or remove a checkmark. Set All and Clear All buttons allow you to place and remove the checkmarks all at once.</li> </ul> Privileges settings <p>Below is a brief description for each privilege to help you identify which ones you should assign to which group(s).</p> <p>Publish: Users in the specified group/s are able to view the metadata eg. if it matches search criteria entered by such a user.</p> <p>Download: Users in the specified group/s are able to download the data.</p> <p>Interactive Map: Users in the specified group/s are able to get an interactive map. The interactive map has to be created separately using a Web Map Server such as GeoServer, which is distributed with GeoNetwork.</p> <p>Featured: When randomly selected by GeoNetwork, the metadata record can appear in the <code>ed</code> section of the GeoNetwork home page.</p> <p>Notify: Users in the specified group receive notification if data attached to the metadata record is downloaded.</p>"},{"location":"users/quickstartguide/new_metadata/#assigning-categories","title":"Assigning Categories","text":"<p>Each GeoNetwork site has a set of local categories that can be used to classify metadata records for easy searching. To assign categories to a metadata record, follow these steps:</p> <ul> <li>Find your metadata record using the search option. Whether you have just one or many results from your search, you will always see a row of buttons including a Categories button.</li> <li>Click on the Categories button. A drop down menu will appear from which you can assign one or more categories using checkboxes. Simply click on the small box next to the category to place or remove a checkmark.</li> </ul> Category management"},{"location":"users/quickstartguide/new_metadata/#multilingual-metadata-in-iso19139","title":"Multilingual metadata in ISO19139","text":"<p>Editors can create multilingual metadata for ISO19139. A default template is provided but user could add translation to an existing record.</p> <p>To declare a new language in a metadata record:</p> <ul> <li>First check, the main language is defined in the metadata section</li> <li>then add one or more languages in the other language in the metadata section.</li> </ul> <p>In editing mode, each multilingual elements are composed of:</p> <ul> <li>text input</li> <li>language selection list (language declared on the other language section are listed here)</li> </ul> <p>By default, the selected language is the GUI language if language is defined in the metadata.</p> <p></p> <p>Alternatively, Google translation service could be used. Translation could be suggested to the editor using the small icon right to the language selector. The translation convert the default metadata character string in the current selected language.</p> <p>In view mode, according to GUI language : if GUI language is available in the metadata, the element is displayed in this language else the element is displayed in metadata default language. This behaviour is also applied to dublin core output for CSW services.</p>"},{"location":"users/quickstartguide/new_metadata/#uploading-a-new-record-using-the-xml-metadata-insert-tool","title":"Uploading a New Record using the XML Metadata Insert Tool","text":"<p>A more advanced procedure to upload a new metadata record in the GeoNetwork system is using an XML document. This procedure is particularly useful for users who already have metadata in XML format, for instance created by some GIS application. To this regard, it has to be noted that the metadata must be in one of the standards used by GeoNetwork: ISO19115, FGDC and Dublin Core.</p> <p>To start the metadata uploading process through the XML Metadata Insert tool, you should log in and select the appropriate option from the Administration page.</p> Administration panel <p>The main part of the page Import XML Formatted Metadata that is displayed is the Metadata text area, where the user can paste the XML metadata to import. Below this, there is the Type choice, which allows you select the type of record that you are going to create (Metadata, Template and Subtemplate). Then you can apply a stylesheet to convert your metadata input from ArcCatalog8 to ISO1915 or from ISO19115 to ISO19139, if required. Otherwise you can just leave none selected. The Destination schema list provides you with four options to choose the final standard layout for your metadata (ISO19115, ISO19139, FGDC and Dublin Core). Finally you should select the Group as main group in charge of the metadata and the Category that you want to assign to your metadata. By clicking the Insert button the metadata is imported into the system; please note that all links to external files, for instance to thumbnails or data for download, have to be removed from the metadata input, to avoid any conflict within the data repository.</p> XML metadata import tool <p>If your metadata is already in ISO19115 format, the main actions to be performed are the following:</p> <ol> <li>Paste the XML file that contains the metadata information in the Metadata text area;</li> <li>Select Metadata as type of record that you are going to create</li> <li>Select the metadata schema ISO19139 that will be the final destination schema;</li> <li>Select the validate check box if you want your metadata to be validated according to the related schema.</li> <li>Select the group in charge of the metadata from the drop down list;</li> <li>Select Maps and Graphics from the list of categories;</li> <li>Click the Insert button and the metadata will be imported into the system.</li> </ol> XML metadata import 2"},{"location":"users/quickstartguide/new_metadata/linking/","title":"Link metadata and other resources","text":"<p>The following related resources are managed:</p> <ul> <li>A thumbnail (linked using a URL or a file to upload)</li> <li>A parent metadata record (UUID to the metadata)</li> <li>A service metadata record</li> <li>A dataset metadata record</li> <li>A source dataset</li> <li>An online resource</li> <li>A feature catalog</li> <li>A sibling</li> </ul> <p>There is 2 ways of creating link between resources:</p> <ul> <li>using the relation manager</li> <li>or the metadata editor</li> </ul> <p>The relation manager is only available for ISO19139 records (or ISO19139 profiles) but when related resources are metadata records, those records could be in any of the catalog supported standards (eg. ISO19110 for feature catalog, dublin core).</p> <p>The relation manager provides a list of related resources and links to remove them.</p> <p></p> <p>New relation could be added using the top right menu:</p> <p></p>"},{"location":"users/quickstartguide/new_metadata/linking/#add-a-thumbnail","title":"Add a thumbnail","text":"<p>Two types of thumbnails could be linked to a metadata record:</p> <ul> <li>an image linked using its URL (the image needs to be published online)</li> <li>an image uploaded in the record data directory. During upload a small thumbnail could be created if requested.</li> </ul> <p></p> <p></p> <p>The relation panel allows to quickly remove a thumbnail.</p> <p>When the image is uploaded, the XML snippet corresponding to the image is the following:</p> <pre><code>&lt;!-- Thumbnail added by  upload --&gt;\n&lt;gmd:graphicOverview&gt;\n&lt;gmd:MD_BrowseGraphic&gt;\n&lt;gmd:fileName&gt;\n&lt;gco:CharacterString&gt;http://localhost:8080/geonetwork/srv/eng/resources.get?uuid=7e512c38-f916-43ba-8367-85f17dcadca1&amp;amp;fname=thumbnail.jpg&lt;/gco:CharacterString&gt;\n&lt;/gmd:fileName&gt;\n&lt;gmd:fileDescription&gt;\n&lt;gco:CharacterString&gt;large_thumbnail&lt;/gco:CharacterString&gt;\n&lt;/gmd:fileDescription&gt;\n&lt;gmd:fileType&gt;\n&lt;gco:CharacterString&gt;jpg&lt;/gco:CharacterString&gt;\n&lt;/gmd:fileType&gt;\n&lt;/gmd:MD_BrowseGraphic&gt;\n&lt;/gmd:graphicOverview&gt;\n</code></pre> <p>When linking using a URL, the following XML snippet is inserted</p> <pre><code>&lt;!-- Thumbnail added by URL --&gt;\n&lt;gmd:graphicOverview&gt;\n&lt;gmd:MD_BrowseGraphic&gt;\n&lt;gmd:fileName&gt;\n&lt;gco:CharacterString&gt;http://organization.org/images/thumbnail.jpg&lt;/gco:CharacterString&gt;\n&lt;/gmd:fileName&gt;\n&lt;/gmd:MD_BrowseGraphic&gt;\n&lt;/gmd:graphicOverview&gt;\n</code></pre> <p>In both cases, the information could be improved or updated using the editor from the advanced view &gt; identification section.</p>"},{"location":"users/quickstartguide/new_metadata/linking/#add-an-online-source","title":"Add an online source","text":"<p>The relation manager allows to add an online resource element defining the following information:</p> <ul> <li>URL or a file to upload</li> <li>name</li> <li>description</li> <li>protocol</li> </ul> <p></p> <p>This information could be improved or updated using the editor from the advanced view &gt; Distribution section.</p>"},{"location":"users/quickstartguide/new_metadata/linking/#linking-wms-online-resources","title":"Linking WMS online resources","text":"<p>Metadata records in ISO19139 could be related to resources defined in WMS services. When searching metadata that has related WMS online resources, the Interactive Map button is displayed to load the WMS layer/s in the map viewer. A WMS online resource can be referenced in metadata like:</p> <ul> <li> <p>Selecting protocol OCG-WMS Web Map Capabilities 1.1.1 or OCG-WMS Web Map Capabilities 1.3.0:</p> </li> <li> <p>URL: Url of WMS service</p> </li> <li>Name of the resource: empty.</li> </ul> WMS online resource <p>The Interactive Map button opens a window to select the layer/s defined in WMS capabilities document to load in map viewer.</p> Window to select WMS layer/s referenced in online resource to load in map viewer <ul> <li> <p>Selecting protocols OGC-WMS Web Map Service, OGC Web Map Service 1.1.1 or OGC Web Map Service 1.3.0:</p> </li> <li> <p>URL: Url of WMS service</p> </li> <li>Name of the resource: WMS layer name (optional)</li> </ul> WMS online resource <p>The behaviour the Interactive Map button depends if user indicated the layer name in the field Name of the resource or not, to show the window to select the layer/s to load in map viewer or load the layer directly.</p>"},{"location":"users/quickstartguide/new_metadata/linking/#linking-data-for-download","title":"Linking data for download","text":"<p>You can upload a dataset stored on your local computer and create a link between data and the metadata description. Files in whatever format can be uploaded: doc, PDF, images, vector layers, etc. For the latter the distribution in a compressed file is recommended. You can include the vector data, the legend, any documentation that can help the interpretation of the data, related reports, detailed descriptions of the data processing, base data used to create the dataset specified and/or other relevant information. Follow these guidelines for uploading datasets:</p> <ul> <li>Make sure the total size of the compressed file is reasonable (eg. less than 100 MB). Should your data be bigger than 100MB, consider a different mechanism to serve this data, e.g. through an FTP or HTTP server and than link the resource through an online resource 'Web address (URL)'.</li> <li>Create several smaller files when appropriate and upload them sequentially.</li> <li>Add the size of the file at the end of the description field.</li> </ul> <p>To Upload a Dataset, follow these steps:</p> <ol> <li>The URL field can be left empty when uploading a file. The system will automatically fill this field out;</li> <li>Select the correct protocol to be used. If you do not see the buttons to browse and upload when File for download is selected, save the metadata and return to the upload section. Both buttons should appear;</li> <li>Provide a short description of the data;</li> <li>Click the Browse button and navigate to the folder where the file to be released is stored. Consider if you want to upload multiple files as one unique zip file or as multiple separate downloads. It is a good idea to add additional documentation with the datasets that provide the user with information related to the data described. Reminder: by default, the size of a single file upload cannot exceed 100 Mbytes unless your system administrator has configured a larger limit in the GeoNetwork config.xml file;</li> <li>Click Upload and then Save the metadata record.</li> </ol> An online resource"},{"location":"users/quickstartguide/new_metadata/linking/#linking-wms-for-data-visualization","title":"Linking WMS for data visualization","text":"<p>You can link a dataset published in an OGC WMS service using the online resource section.</p> <ol> <li>Edit the metadata record</li> <li>Move to the distribution tab</li> <li>The URL field contains the WMS service URL;</li> <li>Select the correct protocol to be used (ie. OGC Web Map Service ver 1.1.1);</li> <li>The name of the resource is the name of the layer in the service (as defined in the GetCapabilities document);</li> <li>The description is optional;</li> <li>Click save.</li> </ol> <p></p>"},{"location":"users/quickstartguide/new_metadata/linking/#GeoPublisher","title":"Publish uploaded data as WMS, WFS","text":"<p>Integration of a map server allows users to quickly configure their data for interactive access without the need to go through the complexities of setting up and configuring a web map server. Web map server supported are:</p> <ul> <li>GeoServer embedded with GeoNetwork</li> <li>Remote GeoServer node (tested with 2.x or sup.)</li> </ul> <p></p> <p>This mechanism allows users to publish the following GIS resources:</p> <ul> <li>RASTER GeoTiff, ECW : ZIP or not or file path</li> <li>ESRI Shapefile : ZIP or file path</li> <li>Table PostGIS</li> </ul> <p>In case of ZIP file, the resource must be uploaded to the metadata record.</p>"},{"location":"users/quickstartguide/new_metadata/linking/#configuration","title":"Configuration","text":"<p>If after uploading data, you cannot see the geopublisher button, ask the catalogue administrator to check the configuration. This feature is disabled by default. It could be activated in the config-gui.xml configuration file.</p> <p>If you cannot see your GeoServer node, ask the catalogue administrator to add the new node in geoserver-nodes.xml configuration file and check the config-gui.xml file:</p> <pre><code>&lt;!-- Display the geopublisher option for all updloaded files--&gt;\n&lt;editor-geopublisher/&gt;\n</code></pre> <p>In order to add a new node, define the configuration in geoserver-nodes.xml:</p> <pre><code>&lt;!-- \n   Add here all geoserver node which could\n   be configure by GeoNetwork.\n\n   GeoServer 2.x or later are supported. The REST API must be installed in the GeoServer node.\n   If you want to be able to publish in different workspaces, create as many nodes as \n   workspaces.\n\n   @param name         Name of the GeoServer node, display to metadata editor\n   @param namespace    Namespace to use. If not set, GeoServer will link store to another namespace.\n   @param adminUrl     GeoServer REST service config URL\n   @param wmsUrl       GeoServer WMS service URL use to display map preview\n   @param wfsUrl       (Not used) GeoServer WFS service URL use to display map preview\n   @param stylerUrl    (Optional) GeoServer WFS service URL use to display map preview\n   @param user         GeoServer user login\n   @param password     GeoServer user password \n--&gt;\n&lt;node&gt;\n   &lt;id&gt;geoserverEmbedded&lt;/id&gt;\n   &lt;name&gt;GeoServer (workspace: gn)&lt;/name&gt;\n   &lt;namespacePrefix&gt;gn&lt;/namespacePrefix&gt;\n   &lt;namespaceUrl&gt;http://geonetwork-opensource.org&lt;/namespaceUrl&gt;\n   &lt;adminUrl&gt;http://localhost:8080/geoserver/rest&lt;/adminUrl&gt;\n   &lt;wmsUrl&gt;http://localhost:8080/geoserver/wms&lt;/wmsUrl&gt;\n   &lt;wfsUrl&gt;http://localhost:8080/geoserver/wfs&lt;/wfsUrl&gt;\n   &lt;wcsUrl&gt;http://localhost:8080/geoserver/wcs&lt;/wcsUrl&gt;\n   &lt;stylerUrl&gt;http://localhost:8080/geoserver/styler/index.html&lt;/stylerUrl&gt;\n   &lt;user&gt;admin&lt;/user&gt;\n   &lt;password&gt;geoserver&lt;/password&gt;\n&lt;/node&gt;\n</code></pre>"},{"location":"users/quickstartguide/new_metadata/linking/#link-your-data","title":"Link your data","text":"<p>In order to link a new dataset, do the following:</p> <ul> <li>Open the record in edit mode</li> <li>If you have a ZIP file or RASTER image, upload the data to the record from the advanced view &gt; Distribution section or the relation manager.</li> </ul> Fields Vector (ZIP Shapefile) RASTER (ZIP or not) URL URL to the file uploaded in the catalog http://localhost:8080/geonetwork/srv/en/resources.get?id=1631 &amp;fname=CCM.zip&amp;access=private idem Protocol File for download WWW:DOWNLOAD idem Name File name (readonly) idem <ul> <li>For PostGIS table or file on local network :</li> </ul> Fields Vector (ZIP Shapefile) RASTER (ZIP or not) URL DB connexion URL jdbc:postgresql://localhost:5432/login:password@db Directory name  Protocol PostGIS Table DB:POSTGIS File RASTER  Name Table name File name"},{"location":"users/quickstartguide/new_metadata/linking/#publish-your-data","title":"Publish your data","text":"<p>The geopublication wizard is then available:</p> <p></p> <ul> <li>Select a not to publish into</li> </ul> <p></p> <ul> <li>The catalog check that file is valid</li> </ul> <p></p> <ul> <li>Publish button: Publish current dataset to remote node. If dataset is already publish in that node, it will be updated.</li> <li>Unpublish button: Remove current dataset from remote node.</li> <li>Add online source button: Add an onlinesource section to the current metadata record pointing to the WMS and layername in order to display the layer in the map viewer of the search interface.</li> <li>Style button: Only available if the GeoServer styler has been installed and declared in the configuration.</li> </ul> <p>No layer names are asked to the user. Layer name is compute from the file name.</p> <p>In case of ZIP compression, ZIP file base name must be equal to Shapefile or GeoTiff base name (ie. if the shapefile is rivers.shp, ZIP file name must be rivers.zip).</p> <p>One Datastore, FeatureType, Layer and Style are created for a vector dataset (one to one relation). One CoverageStore, Coverage, Layer are created for a raster dataset (one to one relation).</p>"},{"location":"users/quickstartguide/new_metadata/linking/#link-the-services-to-the-metadata","title":"Link the services to the metadata","text":"<p>The link to metadata button add information to the metadata record in order to be link the services to the metadata. This will be used to visualize the layer on the map viewer for example.</p> <p></p>"},{"location":"users/quickstartguide/new_metadata/linking/#add-a-parent-metadata-record","title":"Add a parent metadata record","text":"<p>In order to add a link to a parent metadata record, search for the target record and select the parent metadata to link to the current in editing.</p> <p></p> <p>Once added, the following XML fragment is inserted in the metadata record:</p> <pre><code>&lt;gmd:parentIdentifier&gt;\n&lt;gco:CharacterString&gt;SDN:PRODUCT:1850:Time Series Tributyltin (TBT) in Sediment&lt;/gco:CharacterString&gt;\n&lt;/gmd:parentIdentifier&gt;\n</code></pre> <p>In the editor, the relation could be updated in the metadata section:</p> <p></p> <p>When a record has children records, the update children wizard could be executed:</p> <p></p> <p>This information could be improved or updated using the editor from the advanced view &gt; Metadata section.</p>"},{"location":"users/quickstartguide/new_metadata/linking/#add-a-sibling","title":"Add a sibling","text":"<p>ISO Metadata records can be related to another record with different type of relations. The elements in the ISO standard providing those links is the aggregationInfo element. Sibling relationships types can be specified using the initiative type and association type fields.</p> <p>In order to add a sibling link:</p> <ul> <li>choose a type of association</li> <li>choose a type of initiative</li> <li>and search for the records to link</li> </ul> <p></p> <p>Multiple sibling could be linked to the record in one time defining for each element the association type and initiative type to use:</p> <p></p> <p>The type of sibling is displayed in the relation manager which allows to quickly remove the relation if needed:</p> <p></p> <p>Once added, the following XML is inserted in the metadata record:</p> <pre><code>&lt;gmd:aggregationInfo&gt;\n&lt;gmd:MD_AggregateInformation&gt;\n&lt;gmd:aggregateDataSetIdentifier&gt;\n&lt;gmd:MD_Identifier&gt;\n&lt;!-- optional gmd:authority here: could have details of a register describing the some details of the sibling record --&gt;\n&lt;!-- code is UUID/urn of the sibling record, could be a gmx:Anchor --&gt;\n&lt;gmd:code&gt;\n&lt;gco:CharacterString&gt;urn:marine.csiro.au:project:1532&lt;/gco:CharacterString&gt;\n&lt;/gmd:code&gt;\n&lt;/gmd:MD_Identifier&gt;\n&lt;/gmd:aggregateDataSetIdentifier&gt;\n&lt;gmd:associationType&gt;\n&lt;gmd:DS_AssociationTypeCode codeList=\"http://...#DS_AssociationTypeCode\" codeListValue=\"crossReference\"&gt;crossReference&lt;/gmd:DS_AssociationTypeCode&gt;\n&lt;/gmd:associationType&gt;\n&lt;!-- initiative type describes the type of sibling relationship - in this case the code is a project \n             related to the record that contains this aggregateInformation --&gt;\n&lt;gmd:initiativeType&gt;\n&lt;gmd:DS_InitiativeTypeCode codeList=\"http://...#DS_InitiativeTypeCode\" codeListValue=\"project\"&gt;project&lt;/gmd:DS_InitiativeTypeCode&gt;\n&lt;/gmd:initiativeType&gt;\n&lt;/gmd:MD_AggregateInformation&gt;\n&lt;/gmd:aggregationInfo&gt;\n</code></pre> <p>This information could be improved or updated using the editor from the advanced view &gt; Identification section.</p>"},{"location":"users/quickstartguide/new_metadata/linking/#add-a-source-dataset","title":"Add a source dataset","text":"<p>In the data quality section, the source dataset could be linked to a record.</p> <p>Once added, the following XML fragment is inserted in the metadata record:</p> <pre><code>&lt;gmd:source uuidref=\"095cdc57-f44b-4613-894c-f09f1b672140\"&gt;\n&lt;/gmd:source&gt;\n</code></pre> <p>In the editor, the relation could be updated in the data quality section:</p> <p></p> <p>This information could be improved or updated using the editor from the advanced view &gt; Data quality section.</p>"},{"location":"users/quickstartguide/new_metadata/linking/#add-a-feature-catalog","title":"Add a feature catalog","text":"<p>The feature catalog is used to describe the data model of a dataset using the ISO19110 standards. In the content information section, the feature catalog could be linked to a record. The relation panel filter ISO19110 record in order to quickly link a feature catalog.</p> <p>Once added, the following XML fragment is inserted in the metadata record:</p> <pre><code>&lt;gmd:contentInfo&gt;\n&lt;gmd:MD_FeatureCatalogueDescription&gt;\n&lt;gmd:includedWithDataset/&gt;\n&lt;gmd:featureCatalogueCitation uuidref=\"46ce9c2f-6c37-4ae7-9511-63940ece5760\" xlink:href=\"http://localhost:8080/geonetwork/srv/en/csw?service=CSW&amp;amp;request=GetRecordById&amp;amp;version=2.0.2&amp;amp;outputSchema=http://www.isotc211.org/2005/gmd&amp;amp;elementSetName=full&amp;amp;id=46ce9c2f-6c37-4ae7-9511-63940ece5760\"/&gt;\n&lt;/gmd:MD_FeatureCatalogueDescription&gt;\n&lt;/gmd:contentInfo&gt;\n</code></pre> <p>In the editor, the relation could be updated in the content information section:</p> <p></p> <p>This information could be improved or updated using the editor from the advanced view &gt; Content information section.</p>"},{"location":"users/quickstartguide/new_metadata/linking/#metadata-on-dataset-metadata-on-service-relation","title":"Metadata on dataset / metadata on service relation","text":"<p>Linking a dataset to a service or a service to a dataset is made using the following panel:</p> <p></p> <p>Editor could define a layer name using the combo box (which try to retrieve layers from the WMS GetCapabilities document) or typing the layer name in the text field. This information is required to display the layer using the map viewer.</p> <p>Relation is stored in :</p> <pre><code>&lt;srv:operatesOn uuidref=\"\" xlink:href=\"\"/&gt;\n</code></pre> <p>and (according to ISO CSW profil)</p> <pre><code>&lt;srv:coupledResource&gt;\n&lt;srv:SV_CoupledResource&gt;\n&lt;srv:operationName&gt;&lt;/srv:operationName&gt;\n&lt;srv:identifier&gt;&lt;/srv:identifier&gt;\n&lt;gco:ScopedName&gt;&lt;/gco:ScopedName&gt;\n&lt;/srv:SV_CoupledResource&gt;\n&lt;/srv:coupledResource&gt;\n</code></pre> <p>Only relation between records in the same catalogue are handle. Use of XLink attributes are not supported to create relation between datasets and services.</p> <p>This information could be improved or updated using the editor from the advanced view &gt; Identification section.</p>"},{"location":"users/quickstartguide/newfeatures/","title":"New Features","text":"<p>The new GeoNetwork opensource comes with substantial upgrades of different components.</p>"},{"location":"users/quickstartguide/newfeatures/#210-release","title":"2.10 release","text":""},{"location":"users/quickstartguide/newfeatures/#search","title":"Search","text":"<ul> <li>Faceted search: Narrow your search by easily selecting new filter</li> <li>Data Catalog Vocabulary and RDF services: Increase discoverability and enable applications easily to consume metadata using W3C DCAT format</li> <li>Javascript widget user interface : A 3<sup>rd</sup> flavour of home page based on HTML5 is also available</li> </ul>"},{"location":"users/quickstartguide/newfeatures/#metadata","title":"Metadata","text":"<ul> <li>Metadata on maps: Add template for making metadata on static or interactive maps. Add a search criteria for easily found maps. Web Map Context could be loaded into the map viewer.</li> <li>Metadata linked data: Easier metadata relation configuration and new support for source dataset and siblings. See Link metadata and other resources)</li> <li>Hide part of metadata: Provide a method to hide portions of metadata using withHeld ISO attribute</li> <li>Wiki markup in metadata: Allow users to enter markup text in metadata elements and have results shown with rendered html</li> <li>WFS data downloader: Simple component to download WFS data</li> </ul>"},{"location":"users/quickstartguide/newfeatures/#administration","title":"Administration","text":"<ul> <li>User profile: Setup user belonging to multiple groups with different profiles</li> <li>Virtual CSW configuration interface to add new end points</li> </ul>"},{"location":"users/quickstartguide/newfeatures/#others","title":"Others","text":"<ul> <li>Security layer: New security layer based on Spring Security adding support for CAS and much more flexible LDAP configuration</li> <li>Xlink: Add local:// as a protocal for xlink links</li> <li>Provide basic functionnalities (ie. search and view) when database is in readonly</li> </ul>"},{"location":"users/quickstartguide/newfeatures/#28-release","title":"2.8 release","text":""},{"location":"users/quickstartguide/newfeatures/#user-interface","title":"User interface","text":"<ul> <li>Javascript widget user interface: A new user interface using one of the latest Javascript widget libraries (extJS) has been added to support searching, editing and viewing metadata records. The user interface is now much easier for Javascript developers to reorganize and customize. GeoNetwork comes with two flavours of home page: one has the sidebar search similar to the old interface and the other uses a tabbed search layout. The 2.6.x user interface is still available as the default and has been updated.</li> </ul> New home page of GeoNetwork opensource using JavaScript Widgets - tab layout New home page of GeoNetwork opensource using JavaScript Widgets- sidebar layout"},{"location":"users/quickstartguide/newfeatures/#administration_1","title":"Administration","text":"<ul> <li>Search Statistics: Captures and displays statistics on searches carried out in GeoNetwork. The statistics can be summarized in tables or in charts using JFreeChart. There is an extensible interface that you can use to display your own statistics. See Search Statistics.</li> <li>New Harvesters: OGC Harvesting: Sensor Observation Service, Z3950 harvesting, Web Accessible Folder (WAF), GeoPortal 9.3.x via REST API See Harvesting.</li> <li>Harvest History and Scheduling: Harvesting events are now recorded in the database for review at any time. See Harvest History. Harvester scheduling is now much more flexible, you can start a harvest at any time of the day and at almost any interval (weekly etc).</li> <li>Extended Metadata Exchange Format (MEF): More than one metadata file can be present in a MEF Zip archive. This is MEF version 2. See Export facilities.</li> <li>System Monitoring: Automatically monitoring the health of a Geonetwork web application. See System Monitoring.</li> </ul>"},{"location":"users/quickstartguide/newfeatures/#metadata_1","title":"Metadata","text":"<ul> <li>Metadata Status: Allows finer control of the metadata workflow. Records can be assigned a status that reflects where they are in the metadata workflow: draft, approved, retired, submitted, rejected. When the status changes the relevant user is informed via email. eg. when an editor changes the status to 'submitted', the content reviewer receives an email requesting review. See Status.</li> <li>Metadata Versioning: Captures changes to metadata records and metadata properties (status, privileges, categories) and records them as versions in a subversion respository. See Versioning.</li> <li>Publishing data to GeoServer from GeoNetwork: You can now publish geospatial information in the form of GeoTIFF, shapefile or spatial table in a database to GeoServer from GeoNetwork. See Publish uploaded data as WMS, WFS.</li> <li>Custom Metadata Formatters: You can now create your own XSLT to format metadata to suit your needs, zip it up and plug it in to GeoNetwork. See Formatter.</li> <li>Assembling Metadata Records from Reusable Components: Metadata records can now be assembled from reusable components (eg. contact information). The components can be present in the local catalog or brought in from a remote catalog (with caching to speed up access). A component directory interface is available for editing and viewing the components. See Fragments.</li> <li>Editor Improvements: Picking terms from a thesaurus using a search widget, selecting reusable metadata components for inclusion in the record, user defined suggestions or picklists to control content, context sensitive help, creating relationships between records.</li> <li>Plug in metadata schemas: You can define your own metadata schema and plug it into GeoNetwork on demand. Documentation to help you do this and example plug in schemas can be found in the Developers Manual. Some of the most common community plug in schemas can be downloaded from the GeoNetwork source code repository. See Adding a schema.</li> <li>Multilingual Indexing: If you have to cope with metadata in different languages, GeoNetwork can now index each language and search all across language indexes by translating your search terms. See Multilingual search.</li> <li>Enhanced Thesaurus support: Thesauri can be loaded from ISO19135 register records and SKOS files. Keywords in ISO records are anchored to the definition of the concept in the thesaurus. See Thesaurus.</li> </ul>"},{"location":"users/quickstartguide/newfeatures/#csw-service","title":"CSW service","text":"<ul> <li>Virtual CSW Endpoints: Now you can define a custom CSW service that works with a set of metadata records that you define. See Virtual CSW server entry points.</li> </ul>"},{"location":"users/quickstartguide/newfeatures/#inspire-directive","title":"INSPIRE Directive","text":"<ul> <li>Support for the INSPIRE Directive: Indexing and user interface extensions to support those who need to implement the INSPIRE metadata directive (EU).</li> <li>Installer package to enable INSPIRE options: An optional new package in the installer enables GeoNetwork INSPIRE features if selected, avoiding manual steps to enable INSPIRE support.</li> </ul>"},{"location":"users/quickstartguide/newfeatures/#other","title":"Other","text":"<ul> <li>Improved Database Connection Handling and Pooling: Replacement of the Jeeves based database connection pool with the widely used and more robust Apache Database Connection Pool (DBCP). Addition of JNDI or container based database connection support. See Database configuration.</li> <li>Configuration Overrides: Now you can add your own configuration options to GeoNetwork, keep them in one file and maintain them independently from GeoNetwork. See Configuration override.</li> <li>Many other improvements: charset detection and conversion on import, batch application of an XSLT to a selected set of metadata records (see Processing), remote notification of metadata changes, automatic integration tests to improve development and reduce regression and, of course, many bug fixes.</li> </ul>"},{"location":"users/quickstartguide/viewing/","title":"Viewing and Analysing the Data","text":"<p>Once you have completed your search, you view details of a particular record by clicking on the Metadata button.</p> <p>The metadata profiles used by GeoNetwork opensource to present and describe geographic data and general documents stored in the catalogue are based on the International Standard ISO 19115:2003, encoded according to the implementation schema 19139:2007, the FGDC and the international standard Dublin Core.</p> <p>In this guide the ISO 19139 metadata implementation will be described in details since it is also suggested as profile for the creation of new metadata records.</p>"},{"location":"users/quickstartguide/viewing/#metadata-description","title":"Metadata Description","text":"<p>The metadata ISO 19139 profile used by GeoNetwork opensource to describe the geographic data and services is based on the ISO standard 19115:2003 and provides information related to the identification, the maintenance and constraints, the spatial and temporal extent, the spatial representation and reference, the quality and distribution of a geographic dataset.</p> <p>The metadata profile is organised in sections and the most important, illustrated below, are the: Identification Section, Distribution Section, Reference System Section, Data Quality Section and Metadata Section. These sections are described here in details.</p> Main metadata sections"},{"location":"users/quickstartguide/viewing/#identification-section","title":"Identification Section","text":"<p>This section includes information on the citation of the resource (title, date of creation or publication, edition, presentation form), the abstract, the purpose and the presentstatus of the resource that can be defined among the options: completed, historical archive, obsolete, ongoing, planned, required or under development.</p> Identification information <p>This section also contains information about the person or organisation responsible for the data and who is considered to be a point of contact for the resource i.e. the dataset owner, originator, distributor, publisher, etc. and it provides information on data maintenance i.e. annually, monthly, daily, not planned, as needed, etc.</p> Point of Contact <p>Elements for keywords and for describing restrictions on data access and use are also included in this section in addition to spatial representation info like data type (vector, raster, text table, etc.)</p> Descriptive keywords <p>The identification section provides information about the scale, the language and character set used within the resource and the list of ISO categories through which your map could be classified.</p> Scale and other data properties <p>Finally, the temporal and spatial extent are also defined in this section. The temporal extent is defined through the starting and ending date of data validation.</p> Temporal extent <p>The spatial extent of the interested area is defined through geographic coordinates or through the selection of a country or region from a predefined list. Free text supplemental information can be added to complete the data identification section.</p> Geographic bounding box"},{"location":"users/quickstartguide/viewing/#distribution-section","title":"Distribution Section","text":"<p>This section provides metadata elements for accessing other useful on-line resources available through the web. The distribution elements allow for on-line access using an URL address or similar addressing scheme and provide the protocol for the proper connection for accessing geographic data or any other types of digital documents using the download function. Furthermore, it is possible to link a metadata with a predefined map service through the online resource and see the map interactively.</p> Distribution information"},{"location":"users/quickstartguide/viewing/#reference-system-section","title":"Reference System Section","text":"<p>The Spatial Reference System section defines metadata required to describe the spatial reference system of a dataset. It contains one element to identify the name of the reference system used. Using elements from the advanced form, this section may be modified to provide more details on data projection, ellipsoid and datum. Note that if this information is provided, a reference system identifier is not mandatory.</p> Reference system"},{"location":"users/quickstartguide/viewing/#data-quality-section","title":"Data Quality Section","text":"<p>The Data Quality section provides a general assessment of the quality of the data. It describes thedifferent hierarchical levels of data quality, namely a dataset series, dataset, features, attributes, etc. This section also contains information about sources of the input data, and a general explanation of the production processes (lineage) used for creating the data.</p> Data quality"},{"location":"users/quickstartguide/viewing/#metadata-information-section","title":"Metadata Information Section","text":"<p>This section contains information about the metadata itself: the Universally Unique Identifier (UUID) assigned to the record (this is the 'File identifier'), language and characterset used, date of last edit ('Date stamp') and the metadata standard and version name of the record. It also contains information on the metadata author responsible for the metadata record; this person can also be a point of contact for the resource described. Information on the Metadata author is mandatory.</p> Metadata properties"}]}